{"ast":null,"code":"import { StereoCamera, Vector2 } from \"three\";\nclass StereoEffect {\n  constructor(renderer) {\n    const _stereo = new StereoCamera();\n    _stereo.aspect = 0.5;\n    const size = new Vector2();\n    this.setEyeSeparation = function (eyeSep) {\n      _stereo.eyeSep = eyeSep;\n    };\n    this.setSize = function (width, height) {\n      renderer.setSize(width, height);\n    };\n    this.render = function (scene, camera) {\n      if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld();\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld();\n      _stereo.update(camera);\n      renderer.getSize(size);\n      if (renderer.autoClear) renderer.clear();\n      renderer.setScissorTest(true);\n      renderer.setScissor(0, 0, size.width / 2, size.height);\n      renderer.setViewport(0, 0, size.width / 2, size.height);\n      renderer.render(scene, _stereo.cameraL);\n      renderer.setScissor(size.width / 2, 0, size.width / 2, size.height);\n      renderer.setViewport(size.width / 2, 0, size.width / 2, size.height);\n      renderer.render(scene, _stereo.cameraR);\n      renderer.setScissorTest(false);\n    };\n  }\n}\nexport { StereoEffect };","map":{"version":3,"sources":["../../src/effects/StereoEffect.js"],"names":[],"mappings":";AAEA,MAAM,YAAA,CAAa;EACjB,WAAA,CAAY,QAAA,EAAU;IACpB,MAAM,OAAA,GAAU,IAAI,YAAA,CAAc,CAAA;IAClC,OAAA,CAAQ,MAAA,GAAS,GAAA;IACjB,MAAM,IAAA,GAAO,IAAI,OAAA,CAAS,CAAA;IAE1B,IAAA,CAAK,gBAAA,GAAmB,UAAU,MAAA,EAAQ;MACxC,OAAA,CAAQ,MAAA,GAAS,MAAA;IAClB,CAAA;IAED,IAAA,CAAK,OAAA,GAAU,UAAU,KAAA,EAAO,MAAA,EAAQ;MACtC,QAAA,CAAS,OAAA,CAAQ,KAAA,EAAO,MAAM,CAAA;IAC/B,CAAA;IAED,IAAA,CAAK,MAAA,GAAS,UAAU,KAAA,EAAO,MAAA,EAAQ;MACrC,IAAI,KAAA,CAAM,qBAAA,KAA0B,IAAA,EAAM,KAAA,CAAM,iBAAA,CAAmB,CAAA;MAEnE,IAAI,MAAA,CAAO,MAAA,KAAW,IAAA,IAAQ,MAAA,CAAO,qBAAA,KAA0B,IAAA,EAAM,MAAA,CAAO,iBAAA,CAAmB,CAAA;MAE/F,OAAA,CAAQ,MAAA,CAAO,MAAM,CAAA;MAErB,QAAA,CAAS,OAAA,CAAQ,IAAI,CAAA;MAErB,IAAI,QAAA,CAAS,SAAA,EAAW,QAAA,CAAS,KAAA,CAAO,CAAA;MACxC,QAAA,CAAS,cAAA,CAAe,IAAI,CAAA;MAE5B,QAAA,CAAS,UAAA,CAAW,CAAA,EAAG,CAAA,EAAG,IAAA,CAAK,KAAA,GAAQ,CAAA,EAAG,IAAA,CAAK,MAAM,CAAA;MACrD,QAAA,CAAS,WAAA,CAAY,CAAA,EAAG,CAAA,EAAG,IAAA,CAAK,KAAA,GAAQ,CAAA,EAAG,IAAA,CAAK,MAAM,CAAA;MACtD,QAAA,CAAS,MAAA,CAAO,KAAA,EAAO,OAAA,CAAQ,OAAO,CAAA;MAEtC,QAAA,CAAS,UAAA,CAAW,IAAA,CAAK,KAAA,GAAQ,CAAA,EAAG,CAAA,EAAG,IAAA,CAAK,KAAA,GAAQ,CAAA,EAAG,IAAA,CAAK,MAAM,CAAA;MAClE,QAAA,CAAS,WAAA,CAAY,IAAA,CAAK,KAAA,GAAQ,CAAA,EAAG,CAAA,EAAG,IAAA,CAAK,KAAA,GAAQ,CAAA,EAAG,IAAA,CAAK,MAAM,CAAA;MACnE,QAAA,CAAS,MAAA,CAAO,KAAA,EAAO,OAAA,CAAQ,OAAO,CAAA;MAEtC,QAAA,CAAS,cAAA,CAAe,KAAK,CAAA;IAC9B,CAAA;EACF;AACH","sourcesContent":["import { StereoCamera, Vector2 } from 'three'\n\nclass StereoEffect {\n  constructor(renderer) {\n    const _stereo = new StereoCamera()\n    _stereo.aspect = 0.5\n    const size = new Vector2()\n\n    this.setEyeSeparation = function (eyeSep) {\n      _stereo.eyeSep = eyeSep\n    }\n\n    this.setSize = function (width, height) {\n      renderer.setSize(width, height)\n    }\n\n    this.render = function (scene, camera) {\n      if (scene.matrixWorldAutoUpdate === true) scene.updateMatrixWorld()\n\n      if (camera.parent === null && camera.matrixWorldAutoUpdate === true) camera.updateMatrixWorld()\n\n      _stereo.update(camera)\n\n      renderer.getSize(size)\n\n      if (renderer.autoClear) renderer.clear()\n      renderer.setScissorTest(true)\n\n      renderer.setScissor(0, 0, size.width / 2, size.height)\n      renderer.setViewport(0, 0, size.width / 2, size.height)\n      renderer.render(scene, _stereo.cameraL)\n\n      renderer.setScissor(size.width / 2, 0, size.width / 2, size.height)\n      renderer.setViewport(size.width / 2, 0, size.width / 2, size.height)\n      renderer.render(scene, _stereo.cameraR)\n\n      renderer.setScissorTest(false)\n    }\n  }\n}\n\nexport { StereoEffect }\n"]},"metadata":{},"sourceType":"module"}