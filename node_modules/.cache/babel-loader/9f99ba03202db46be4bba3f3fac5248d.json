{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport { Vector3 } from \"three\";\nconst target = new Vector3();\nconst speed = 0.025;\nexport default function Rig({\n  mouse\n}) {\n  _s();\n  const prevTheta = useRef(0);\n  const prevPhi = useRef(0.5 * Math.PI);\n  const prevR = useRef(4);\n  const {\n    camera\n  } = useThree();\n  useFrame(() => {\n    const theta = mouse.current[0] * 2 * Math.PI;\n    const phi = mouse.current[1] * Math.PI;\n    const r = mouse.current[2];\n    const newTheta = prevTheta.current + speed * (theta - prevTheta.current);\n    const newPhi = prevPhi.current + speed * (phi - prevPhi.current);\n    const newR = prevR.current + 0.1 * (r - prevR.current);\n    target.setFromSphericalCoords(newR, newPhi, newTheta);\n    camera.position.x = target.x;\n    camera.position.y = target.y;\n    camera.position.z = target.z;\n    camera.lookAt(0, 0, 0);\n    prevTheta.current = newTheta;\n    prevPhi.current = newPhi;\n    prevR.current = newR;\n  });\n  return null;\n}\n_s(Rig, \"RWdWejuRThjtJnROvwwgkFdpmbA=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = Rig;\nvar _c;\n$RefreshReg$(_c, \"Rig\");","map":{"version":3,"names":["useFrame","useThree","useRef","Vector3","target","speed","Rig","mouse","_s","prevTheta","prevPhi","Math","PI","prevR","camera","theta","current","phi","r","newTheta","newPhi","newR","setFromSphericalCoords","position","x","y","z","lookAt","_c","$RefreshReg$"],"sources":["C:/Users/Aviral Chawla/Downloads/Attractors-buffer/Attractors-buffer/src/Rig/Rig.js"],"sourcesContent":["import { useFrame, useThree } from \"@react-three/fiber\";\r\nimport { useRef } from \"react\";\r\nimport { Vector3 } from \"three\";\r\n\r\nconst target = new Vector3();\r\n\r\nconst speed = 0.025;\r\nexport default function Rig({ mouse }) {\r\n  const prevTheta = useRef(0);\r\n  const prevPhi = useRef(0.5 * Math.PI);\r\n  const prevR = useRef(4);\r\n  const { camera } = useThree();\r\n  useFrame(() => {\r\n    const theta = mouse.current[0] * 2 * Math.PI;\r\n    const phi = mouse.current[1] * Math.PI;\r\n    const r = mouse.current[2];\r\n    const newTheta = prevTheta.current + speed * (theta - prevTheta.current);\r\n    const newPhi = prevPhi.current + speed * (phi - prevPhi.current);\r\n    const newR = prevR.current + 0.1 * (r - prevR.current);\r\n    target.setFromSphericalCoords(newR, newPhi, newTheta);\r\n    camera.position.x = target.x;\r\n    camera.position.y = target.y;\r\n    camera.position.z = target.z;\r\n    camera.lookAt(0, 0, 0);\r\n    prevTheta.current = newTheta;\r\n    prevPhi.current = newPhi;\r\n    prevR.current = newR;\r\n  });\r\n  return null;\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,oBAAoB;AACvD,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,OAAO,QAAQ,OAAO;AAE/B,MAAMC,MAAM,GAAG,IAAID,OAAO,CAAC,CAAC;AAE5B,MAAME,KAAK,GAAG,KAAK;AACnB,eAAe,SAASC,GAAGA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAMC,SAAS,GAAGP,MAAM,CAAC,CAAC,CAAC;EAC3B,MAAMQ,OAAO,GAAGR,MAAM,CAAC,GAAG,GAAGS,IAAI,CAACC,EAAE,CAAC;EACrC,MAAMC,KAAK,GAAGX,MAAM,CAAC,CAAC,CAAC;EACvB,MAAM;IAAEY;EAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAC7BD,QAAQ,CAAC,MAAM;IACb,MAAMe,KAAK,GAAGR,KAAK,CAACS,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGL,IAAI,CAACC,EAAE;IAC5C,MAAMK,GAAG,GAAGV,KAAK,CAACS,OAAO,CAAC,CAAC,CAAC,GAAGL,IAAI,CAACC,EAAE;IACtC,MAAMM,CAAC,GAAGX,KAAK,CAACS,OAAO,CAAC,CAAC,CAAC;IAC1B,MAAMG,QAAQ,GAAGV,SAAS,CAACO,OAAO,GAAGX,KAAK,IAAIU,KAAK,GAAGN,SAAS,CAACO,OAAO,CAAC;IACxE,MAAMI,MAAM,GAAGV,OAAO,CAACM,OAAO,GAAGX,KAAK,IAAIY,GAAG,GAAGP,OAAO,CAACM,OAAO,CAAC;IAChE,MAAMK,IAAI,GAAGR,KAAK,CAACG,OAAO,GAAG,GAAG,IAAIE,CAAC,GAAGL,KAAK,CAACG,OAAO,CAAC;IACtDZ,MAAM,CAACkB,sBAAsB,CAACD,IAAI,EAAED,MAAM,EAAED,QAAQ,CAAC;IACrDL,MAAM,CAACS,QAAQ,CAACC,CAAC,GAAGpB,MAAM,CAACoB,CAAC;IAC5BV,MAAM,CAACS,QAAQ,CAACE,CAAC,GAAGrB,MAAM,CAACqB,CAAC;IAC5BX,MAAM,CAACS,QAAQ,CAACG,CAAC,GAAGtB,MAAM,CAACsB,CAAC;IAC5BZ,MAAM,CAACa,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACtBlB,SAAS,CAACO,OAAO,GAAGG,QAAQ;IAC5BT,OAAO,CAACM,OAAO,GAAGI,MAAM;IACxBP,KAAK,CAACG,OAAO,GAAGK,IAAI;EACtB,CAAC,CAAC;EACF,OAAO,IAAI;AACb;AAACb,EAAA,CAtBuBF,GAAG;EAAA,QAINL,QAAQ,EAC3BD,QAAQ;AAAA;AAAA4B,EAAA,GALctB,GAAG;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}