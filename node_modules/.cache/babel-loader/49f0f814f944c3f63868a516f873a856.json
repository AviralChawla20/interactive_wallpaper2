{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Quaternion, Vector3 } from \"three\";\nfunction contextmenu(event) {\n  event.preventDefault();\n}\nclass FlyControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\", null);\n    __publicField(this, \"movementSpeed\", 1);\n    __publicField(this, \"rollSpeed\", 5e-3);\n    __publicField(this, \"dragToLook\", false);\n    __publicField(this, \"autoForward\", false);\n    __publicField(this, \"changeEvent\", {\n      type: \"change\"\n    });\n    __publicField(this, \"EPS\", 1e-6);\n    __publicField(this, \"tmpQuaternion\", new Quaternion());\n    __publicField(this, \"mouseStatus\", 0);\n    __publicField(this, \"movementSpeedMultiplier\", 1);\n    __publicField(this, \"moveState\", {\n      up: 0,\n      down: 0,\n      left: 0,\n      right: 0,\n      forward: 0,\n      back: 0,\n      pitchUp: 0,\n      pitchDown: 0,\n      yawLeft: 0,\n      yawRight: 0,\n      rollLeft: 0,\n      rollRight: 0\n    });\n    __publicField(this, \"moveVector\", new Vector3(0, 0, 0));\n    __publicField(this, \"rotationVector\", new Vector3(0, 0, 0));\n    __publicField(this, \"keydown\", event => {\n      if (event.altKey) {\n        return;\n      }\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 0.1;\n          break;\n        case \"KeyW\":\n          this.moveState.forward = 1;\n          break;\n        case \"KeyS\":\n          this.moveState.back = 1;\n          break;\n        case \"KeyA\":\n          this.moveState.left = 1;\n          break;\n        case \"KeyD\":\n          this.moveState.right = 1;\n          break;\n        case \"KeyR\":\n          this.moveState.up = 1;\n          break;\n        case \"KeyF\":\n          this.moveState.down = 1;\n          break;\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 1;\n          break;\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 1;\n          break;\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 1;\n          break;\n        case \"ArrowRight\":\n          this.moveState.yawRight = 1;\n          break;\n        case \"KeyQ\":\n          this.moveState.rollLeft = 1;\n          break;\n        case \"KeyE\":\n          this.moveState.rollRight = 1;\n          break;\n      }\n      this.updateMovementVector();\n      this.updateRotationVector();\n    });\n    __publicField(this, \"keyup\", event => {\n      switch (event.code) {\n        case \"ShiftLeft\":\n        case \"ShiftRight\":\n          this.movementSpeedMultiplier = 1;\n          break;\n        case \"KeyW\":\n          this.moveState.forward = 0;\n          break;\n        case \"KeyS\":\n          this.moveState.back = 0;\n          break;\n        case \"KeyA\":\n          this.moveState.left = 0;\n          break;\n        case \"KeyD\":\n          this.moveState.right = 0;\n          break;\n        case \"KeyR\":\n          this.moveState.up = 0;\n          break;\n        case \"KeyF\":\n          this.moveState.down = 0;\n          break;\n        case \"ArrowUp\":\n          this.moveState.pitchUp = 0;\n          break;\n        case \"ArrowDown\":\n          this.moveState.pitchDown = 0;\n          break;\n        case \"ArrowLeft\":\n          this.moveState.yawLeft = 0;\n          break;\n        case \"ArrowRight\":\n          this.moveState.yawRight = 0;\n          break;\n        case \"KeyQ\":\n          this.moveState.rollLeft = 0;\n          break;\n        case \"KeyE\":\n          this.moveState.rollRight = 0;\n          break;\n      }\n      this.updateMovementVector();\n      this.updateRotationVector();\n    });\n    __publicField(this, \"pointerdown\", event => {\n      if (this.dragToLook) {\n        this.mouseStatus++;\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 1;\n            break;\n          case 2:\n            this.moveState.back = 1;\n            break;\n        }\n        this.updateMovementVector();\n      }\n    });\n    __publicField(this, \"pointermove\", event => {\n      if (!this.dragToLook || this.mouseStatus > 0) {\n        const container = this.getContainerDimensions();\n        const halfWidth = container.size[0] / 2;\n        const halfHeight = container.size[1] / 2;\n        this.moveState.yawLeft = -(event.pageX - container.offset[0] - halfWidth) / halfWidth;\n        this.moveState.pitchDown = (event.pageY - container.offset[1] - halfHeight) / halfHeight;\n        this.updateRotationVector();\n      }\n    });\n    __publicField(this, \"pointerup\", event => {\n      if (this.dragToLook) {\n        this.mouseStatus--;\n        this.moveState.yawLeft = this.moveState.pitchDown = 0;\n      } else {\n        switch (event.button) {\n          case 0:\n            this.moveState.forward = 0;\n            break;\n          case 2:\n            this.moveState.back = 0;\n            break;\n        }\n        this.updateMovementVector();\n      }\n      this.updateRotationVector();\n    });\n    __publicField(this, \"lastQuaternion\", new Quaternion());\n    __publicField(this, \"lastPosition\", new Vector3());\n    __publicField(this, \"update\", delta => {\n      const moveMult = delta * this.movementSpeed;\n      const rotMult = delta * this.rollSpeed;\n      this.object.translateX(this.moveVector.x * moveMult);\n      this.object.translateY(this.moveVector.y * moveMult);\n      this.object.translateZ(this.moveVector.z * moveMult);\n      this.tmpQuaternion.set(this.rotationVector.x * rotMult, this.rotationVector.y * rotMult, this.rotationVector.z * rotMult, 1).normalize();\n      this.object.quaternion.multiply(this.tmpQuaternion);\n      if (this.lastPosition.distanceToSquared(this.object.position) > this.EPS || 8 * (1 - this.lastQuaternion.dot(this.object.quaternion)) > this.EPS) {\n        this.dispatchEvent(this.changeEvent);\n        this.lastQuaternion.copy(this.object.quaternion);\n        this.lastPosition.copy(this.object.position);\n      }\n    });\n    __publicField(this, \"updateMovementVector\", () => {\n      const forward = this.moveState.forward || this.autoForward && !this.moveState.back ? 1 : 0;\n      this.moveVector.x = -this.moveState.left + this.moveState.right;\n      this.moveVector.y = -this.moveState.down + this.moveState.up;\n      this.moveVector.z = -forward + this.moveState.back;\n    });\n    __publicField(this, \"updateRotationVector\", () => {\n      this.rotationVector.x = -this.moveState.pitchDown + this.moveState.pitchUp;\n      this.rotationVector.y = -this.moveState.yawRight + this.moveState.yawLeft;\n      this.rotationVector.z = -this.moveState.rollRight + this.moveState.rollLeft;\n    });\n    __publicField(this, \"getContainerDimensions\", () => {\n      if (this.domElement != document && !(this.domElement instanceof Document)) {\n        return {\n          size: [this.domElement.offsetWidth, this.domElement.offsetHeight],\n          offset: [this.domElement.offsetLeft, this.domElement.offsetTop]\n        };\n      } else {\n        return {\n          size: [window.innerWidth, window.innerHeight],\n          offset: [0, 0]\n        };\n      }\n    });\n    // https://github.com/mrdoob/three.js/issues/20575\n    __publicField(this, \"connect\", domElement => {\n      this.domElement = domElement;\n      if (!(domElement instanceof Document)) {\n        domElement.setAttribute(\"tabindex\", -1);\n      }\n      this.domElement.addEventListener(\"contextmenu\", contextmenu);\n      this.domElement.addEventListener(\"pointermove\", this.pointermove);\n      this.domElement.addEventListener(\"pointerdown\", this.pointerdown);\n      this.domElement.addEventListener(\"pointerup\", this.pointerup);\n      window.addEventListener(\"keydown\", this.keydown);\n      window.addEventListener(\"keyup\", this.keyup);\n    });\n    __publicField(this, \"dispose\", () => {\n      this.domElement.removeEventListener(\"contextmenu\", contextmenu);\n      this.domElement.removeEventListener(\"pointermove\", this.pointermove);\n      this.domElement.removeEventListener(\"pointerdown\", this.pointerdown);\n      this.domElement.removeEventListener(\"pointerup\", this.pointerup);\n      window.removeEventListener(\"keydown\", this.keydown);\n      window.removeEventListener(\"keyup\", this.keyup);\n    });\n    this.object = object;\n    if (domElement !== void 0) this.connect(domElement);\n    this.updateMovementVector();\n    this.updateRotationVector();\n  }\n}\nexport { FlyControls };","map":{"version":3,"sources":["../../src/controls/FlyControls.ts"],"names":[],"mappings":"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","sourcesContent":["import { Camera, EventDispatcher, Quaternion, Vector3 } from 'three'\n\nfunction contextmenu(event: Event): void {\n  event.preventDefault()\n}\n\nclass FlyControls extends EventDispatcher {\n  public object: Camera\n  public domElement: HTMLElement | Document = null!\n\n  public movementSpeed = 1.0\n  public rollSpeed = 0.005\n\n  public dragToLook = false\n  public autoForward = false\n\n  private changeEvent = { type: 'change' }\n  private EPS = 0.000001\n\n  private tmpQuaternion = new Quaternion()\n\n  private mouseStatus = 0\n\n  private movementSpeedMultiplier = 1\n\n  private moveState = {\n    up: 0,\n    down: 0,\n    left: 0,\n    right: 0,\n    forward: 0,\n    back: 0,\n    pitchUp: 0,\n    pitchDown: 0,\n    yawLeft: 0,\n    yawRight: 0,\n    rollLeft: 0,\n    rollRight: 0,\n  }\n  private moveVector = new Vector3(0, 0, 0)\n  private rotationVector = new Vector3(0, 0, 0)\n\n  constructor(object: Camera, domElement?: HTMLElement | Document) {\n    super()\n\n    this.object = object\n\n    // connect events\n    if (domElement !== undefined) this.connect(domElement)\n\n    this.updateMovementVector()\n    this.updateRotationVector()\n  }\n\n  private keydown = (event: KeyboardEvent): void => {\n    if (event.altKey) {\n      return\n    }\n\n    switch (event.code) {\n      case 'ShiftLeft':\n      case 'ShiftRight':\n        this.movementSpeedMultiplier = 0.1\n        break\n\n      case 'KeyW':\n        this.moveState.forward = 1\n        break\n      case 'KeyS':\n        this.moveState.back = 1\n        break\n\n      case 'KeyA':\n        this.moveState.left = 1\n        break\n      case 'KeyD':\n        this.moveState.right = 1\n        break\n\n      case 'KeyR':\n        this.moveState.up = 1\n        break\n      case 'KeyF':\n        this.moveState.down = 1\n        break\n\n      case 'ArrowUp':\n        this.moveState.pitchUp = 1\n        break\n      case 'ArrowDown':\n        this.moveState.pitchDown = 1\n        break\n\n      case 'ArrowLeft':\n        this.moveState.yawLeft = 1\n        break\n      case 'ArrowRight':\n        this.moveState.yawRight = 1\n        break\n\n      case 'KeyQ':\n        this.moveState.rollLeft = 1\n        break\n      case 'KeyE':\n        this.moveState.rollRight = 1\n        break\n    }\n\n    this.updateMovementVector()\n    this.updateRotationVector()\n  }\n\n  private keyup = (event: KeyboardEvent): void => {\n    switch (event.code) {\n      case 'ShiftLeft':\n      case 'ShiftRight':\n        this.movementSpeedMultiplier = 1\n        break\n\n      case 'KeyW':\n        this.moveState.forward = 0\n        break\n      case 'KeyS':\n        this.moveState.back = 0\n        break\n\n      case 'KeyA':\n        this.moveState.left = 0\n        break\n      case 'KeyD':\n        this.moveState.right = 0\n        break\n\n      case 'KeyR':\n        this.moveState.up = 0\n        break\n      case 'KeyF':\n        this.moveState.down = 0\n        break\n\n      case 'ArrowUp':\n        this.moveState.pitchUp = 0\n        break\n      case 'ArrowDown':\n        this.moveState.pitchDown = 0\n        break\n\n      case 'ArrowLeft':\n        this.moveState.yawLeft = 0\n        break\n      case 'ArrowRight':\n        this.moveState.yawRight = 0\n        break\n\n      case 'KeyQ':\n        this.moveState.rollLeft = 0\n        break\n      case 'KeyE':\n        this.moveState.rollRight = 0\n        break\n    }\n\n    this.updateMovementVector()\n    this.updateRotationVector()\n  }\n\n  private pointerdown = (event: MouseEvent): void => {\n    if (this.dragToLook) {\n      this.mouseStatus++\n    } else {\n      switch (event.button) {\n        case 0:\n          this.moveState.forward = 1\n          break\n        case 2:\n          this.moveState.back = 1\n          break\n      }\n\n      this.updateMovementVector()\n    }\n  }\n\n  private pointermove = (event: MouseEvent): void => {\n    if (!this.dragToLook || this.mouseStatus > 0) {\n      const container = this.getContainerDimensions()\n      const halfWidth = container.size[0] / 2\n      const halfHeight = container.size[1] / 2\n\n      this.moveState.yawLeft = -(event.pageX - container.offset[0] - halfWidth) / halfWidth\n      this.moveState.pitchDown = (event.pageY - container.offset[1] - halfHeight) / halfHeight\n\n      this.updateRotationVector()\n    }\n  }\n\n  private pointerup = (event: MouseEvent): void => {\n    if (this.dragToLook) {\n      this.mouseStatus--\n\n      this.moveState.yawLeft = this.moveState.pitchDown = 0\n    } else {\n      switch (event.button) {\n        case 0:\n          this.moveState.forward = 0\n          break\n        case 2:\n          this.moveState.back = 0\n          break\n      }\n\n      this.updateMovementVector()\n    }\n\n    this.updateRotationVector()\n  }\n\n  private lastQuaternion = new Quaternion()\n  private lastPosition = new Vector3()\n\n  public update = (delta: number): void => {\n    const moveMult = delta * this.movementSpeed\n    const rotMult = delta * this.rollSpeed\n\n    this.object.translateX(this.moveVector.x * moveMult)\n    this.object.translateY(this.moveVector.y * moveMult)\n    this.object.translateZ(this.moveVector.z * moveMult)\n\n    this.tmpQuaternion\n      .set(this.rotationVector.x * rotMult, this.rotationVector.y * rotMult, this.rotationVector.z * rotMult, 1)\n      .normalize()\n    this.object.quaternion.multiply(this.tmpQuaternion)\n\n    if (\n      this.lastPosition.distanceToSquared(this.object.position) > this.EPS ||\n      8 * (1 - this.lastQuaternion.dot(this.object.quaternion)) > this.EPS\n    ) {\n      // @ts-ignore\n      this.dispatchEvent(this.changeEvent)\n      this.lastQuaternion.copy(this.object.quaternion)\n      this.lastPosition.copy(this.object.position)\n    }\n  }\n\n  private updateMovementVector = (): void => {\n    const forward = this.moveState.forward || (this.autoForward && !this.moveState.back) ? 1 : 0\n\n    this.moveVector.x = -this.moveState.left + this.moveState.right\n    this.moveVector.y = -this.moveState.down + this.moveState.up\n    this.moveVector.z = -forward + this.moveState.back\n  }\n\n  private updateRotationVector = (): void => {\n    this.rotationVector.x = -this.moveState.pitchDown + this.moveState.pitchUp\n    this.rotationVector.y = -this.moveState.yawRight + this.moveState.yawLeft\n    this.rotationVector.z = -this.moveState.rollRight + this.moveState.rollLeft\n  }\n\n  private getContainerDimensions = (): {\n    size: number[]\n    offset: number[]\n  } => {\n    if (this.domElement != document && !(this.domElement instanceof Document)) {\n      return {\n        size: [this.domElement.offsetWidth, this.domElement.offsetHeight],\n        offset: [this.domElement.offsetLeft, this.domElement.offsetTop],\n      }\n    } else {\n      return {\n        size: [window.innerWidth, window.innerHeight],\n        offset: [0, 0],\n      }\n    }\n  }\n\n  // https://github.com/mrdoob/three.js/issues/20575\n  public connect = (domElement: HTMLElement | Document): void => {\n    this.domElement = domElement\n\n    if (!(domElement instanceof Document)) {\n      domElement.setAttribute('tabindex', -1 as any)\n    }\n\n    this.domElement.addEventListener('contextmenu', contextmenu)\n    ;(this.domElement as HTMLElement).addEventListener('pointermove', this.pointermove)\n    ;(this.domElement as HTMLElement).addEventListener('pointerdown', this.pointerdown)\n    ;(this.domElement as HTMLElement).addEventListener('pointerup', this.pointerup)\n\n    window.addEventListener('keydown', this.keydown)\n    window.addEventListener('keyup', this.keyup)\n  }\n\n  public dispose = (): void => {\n    this.domElement.removeEventListener('contextmenu', contextmenu)\n    ;(this.domElement as HTMLElement).removeEventListener('pointermove', this.pointermove)\n    ;(this.domElement as HTMLElement).removeEventListener('pointerdown', this.pointerdown)\n    ;(this.domElement as HTMLElement).removeEventListener('pointerup', this.pointerup)\n\n    window.removeEventListener('keydown', this.keydown)\n    window.removeEventListener('keyup', this.keyup)\n  }\n}\n\nexport { FlyControls }\n"]},"metadata":{},"sourceType":"module"}