{"ast":null,"code":"const lottie = (() => {\n  if (typeof navigator === \"undefined\" || typeof document === \"undefined\") return {};\n  const svgNS = \"http://www.w3.org/2000/svg\";\n  let locationHref = \"\";\n  let _useWebWorker = false;\n  const initialDefaultFrame = -999999;\n  const setWebWorker = flag => {\n    _useWebWorker = !!flag;\n  };\n  const getWebWorker = () => _useWebWorker;\n  const setLocationHref = value2 => {\n    locationHref = value2;\n  };\n  const getLocationHref = () => locationHref;\n  function createTag(type) {\n    return document.createElement(type);\n  }\n  function extendPrototype(sources, destination) {\n    var i;\n    var len = sources.length;\n    var sourcePrototype;\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype;\n      for (var attr in sourcePrototype) {\n        if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];\n      }\n    }\n  }\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop);\n  }\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n    ProxyFunction.prototype = prototype;\n    return ProxyFunction;\n  }\n  const audioControllerFactory = function () {\n    function AudioController(audioFactory) {\n      this.audios = [];\n      this.audioFactory = audioFactory;\n      this._volume = 1;\n      this._isMuted = false;\n    }\n    AudioController.prototype = {\n      addAudio: function (audio) {\n        this.audios.push(audio);\n      },\n      pause: function () {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].pause();\n        }\n      },\n      resume: function () {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].resume();\n        }\n      },\n      setRate: function (rateValue) {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].setRate(rateValue);\n        }\n      },\n      createAudio: function (assetPath) {\n        if (this.audioFactory) {\n          return this.audioFactory(assetPath);\n        }\n        if (window.Howl) {\n          return new window.Howl({\n            src: [assetPath]\n          });\n        }\n        return {\n          isPlaying: false,\n          play: function () {\n            this.isPlaying = true;\n          },\n          seek: function () {\n            this.isPlaying = false;\n          },\n          playing: function () {},\n          rate: function () {},\n          setVolume: function () {}\n        };\n      },\n      setAudioFactory: function (audioFactory) {\n        this.audioFactory = audioFactory;\n      },\n      setVolume: function (value2) {\n        this._volume = value2;\n        this._updateVolume();\n      },\n      mute: function () {\n        this._isMuted = true;\n        this._updateVolume();\n      },\n      unmute: function () {\n        this._isMuted = false;\n        this._updateVolume();\n      },\n      getVolume: function () {\n        return this._volume;\n      },\n      _updateVolume: function () {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));\n        }\n      }\n    };\n    return function () {\n      return new AudioController();\n    };\n  }();\n  const createTypedArray = function () {\n    function createRegularArray(type, len) {\n      var i = 0;\n      var arr = [];\n      var value2;\n      switch (type) {\n        case \"int16\":\n        case \"uint8c\":\n          value2 = 1;\n          break;\n        default:\n          value2 = 1.1;\n          break;\n      }\n      for (i = 0; i < len; i += 1) {\n        arr.push(value2);\n      }\n      return arr;\n    }\n    function createTypedArrayFactory(type, len) {\n      if (type === \"float32\") {\n        return new Float32Array(len);\n      }\n      if (type === \"int16\") {\n        return new Int16Array(len);\n      }\n      if (type === \"uint8c\") {\n        return new Uint8ClampedArray(len);\n      }\n      return createRegularArray(type, len);\n    }\n    if (typeof Uint8ClampedArray === \"function\" && typeof Float32Array === \"function\") {\n      return createTypedArrayFactory;\n    }\n    return createRegularArray;\n  }();\n  function createSizedArray(len) {\n    return Array.apply(null, {\n      length: len\n    });\n  }\n  let subframeEnabled = true;\n  let expressionsPlugin = null;\n  let idPrefix$1 = \"\";\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  const bmPow = Math.pow;\n  const bmSqrt = Math.sqrt;\n  const bmFloor = Math.floor;\n  const bmMin = Math.min;\n  const BMMath = {};\n  (function () {\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\n    var i;\n    var len = propertyNames.length;\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]];\n    }\n  })();\n  BMMath.random = Math.random;\n  BMMath.abs = function (val2) {\n    var tOfVal = typeof val2;\n    if (tOfVal === \"object\" && val2.length) {\n      var absArr = createSizedArray(val2.length);\n      var i;\n      var len = val2.length;\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val2[i]);\n      }\n      return absArr;\n    }\n    return Math.abs(val2);\n  };\n  let defaultCurveSegments = 150;\n  const degToRads = Math.PI / 180;\n  const roundCorner = 0.5519;\n  function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\n    this.type = type;\n    this.currentTime = currentTime;\n    this.totalTime = totalTime;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n  function BMCompleteEvent(type, frameMultiplier) {\n    this.type = type;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n  function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\n    this.type = type;\n    this.currentLoop = currentLoop;\n    this.totalLoops = totalLoops;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n  function BMSegmentStartEvent(type, firstFrame, totalFrames) {\n    this.type = type;\n    this.firstFrame = firstFrame;\n    this.totalFrames = totalFrames;\n  }\n  function BMDestroyEvent(type, target) {\n    this.type = type;\n    this.target = target;\n  }\n  function BMRenderFrameErrorEvent(nativeError, currentTime) {\n    this.type = \"renderFrameError\";\n    this.nativeError = nativeError;\n    this.currentTime = currentTime;\n  }\n  function BMConfigErrorEvent(nativeError) {\n    this.type = \"configError\";\n    this.nativeError = nativeError;\n  }\n  const createElementID = function () {\n    var _count = 0;\n    return function createID() {\n      _count += 1;\n      return idPrefix$1 + \"__lottie_element_\" + _count;\n    };\n  }();\n  function HSVtoRGB(h, s, v) {\n    var r;\n    var g;\n    var b;\n    var i;\n    var f;\n    var p;\n    var q;\n    var t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n    return [r, g, b];\n  }\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var d = max - min;\n    var h;\n    var s = max === 0 ? 0 : d / max;\n    var v = max / 255;\n    switch (max) {\n      case min:\n        h = 0;\n        break;\n      case r:\n        h = g - b + d * (g < b ? 6 : 0);\n        h /= 6 * d;\n        break;\n      case g:\n        h = b - r + d * 2;\n        h /= 6 * d;\n        break;\n      case b:\n        h = r - g + d * 4;\n        h /= 6 * d;\n        break;\n    }\n    return [h, s, v];\n  }\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[1] += offset;\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0;\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[2] += offset;\n    if (hsv[2] > 1) {\n      hsv[2] = 1;\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0;\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[0] += offset / 360;\n    if (hsv[0] > 1) {\n      hsv[0] -= 1;\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1;\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n  (function () {\n    var colorMap = [];\n    var i;\n    var hex;\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16);\n      colorMap[i] = hex.length === 1 ? \"0\" + hex : hex;\n    }\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0;\n      }\n      if (g < 0) {\n        g = 0;\n      }\n      if (b < 0) {\n        b = 0;\n      }\n      return \"#\" + colorMap[r] + colorMap[g] + colorMap[b];\n    };\n  })();\n  const setSubframeEnabled = flag => {\n    subframeEnabled = !!flag;\n  };\n  const getSubframeEnabled = () => subframeEnabled;\n  const setExpressionsPlugin = value2 => {\n    expressionsPlugin = value2;\n  };\n  const getExpressionsPlugin = () => expressionsPlugin;\n  const setDefaultCurveSegments = value2 => {\n    defaultCurveSegments = value2;\n  };\n  const getDefaultCurveSegments = () => defaultCurveSegments;\n  const setIdPrefix = value2 => {\n    idPrefix$1 = value2;\n  };\n  function createNS(type) {\n    return document.createElementNS(svgNS, type);\n  }\n  const dataManager = function () {\n    var _counterId = 1;\n    var processes = [];\n    var workerFn;\n    var workerInstance;\n    var workerProxy = {\n      onmessage: function () {},\n      postMessage: function (path) {\n        workerFn({\n          data: path\n        });\n      }\n    };\n    var _workerSelf = {\n      postMessage: function (data2) {\n        workerProxy.onmessage({\n          data: data2\n        });\n      }\n    };\n    function createWorker(fn) {\n      if (window.Worker && window.Blob && getWebWorker()) {\n        var blob = new Blob([\"var _workerSelf = self; self.onmessage = \", fn.toString()], {\n          type: \"text/javascript\"\n        });\n        var url = URL.createObjectURL(blob);\n        return new Worker(url);\n      }\n      workerFn = fn;\n      return workerProxy;\n    }\n    function setupWorker() {\n      if (!workerInstance) {\n        workerInstance = createWorker(function workerStart(e) {\n          function dataFunctionManager() {\n            function completeLayers(layers, comps) {\n              var layerData;\n              var i;\n              var len = layers.length;\n              var j;\n              var jLen;\n              var k;\n              var kLen;\n              for (i = 0; i < len; i += 1) {\n                layerData = layers[i];\n                if (\"ks\" in layerData && !layerData.completed) {\n                  layerData.completed = true;\n                  if (layerData.tt) {\n                    layers[i - 1].td = layerData.tt;\n                  }\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 0) {\n                    layerData.layers = findCompLayers(layerData.refId, comps);\n                    completeLayers(layerData.layers, comps);\n                  } else if (layerData.ty === 4) {\n                    completeShapes(layerData.shapes);\n                  } else if (layerData.ty === 5) {\n                    completeText(layerData);\n                  }\n                }\n              }\n            }\n            function completeChars(chars, assets) {\n              if (chars) {\n                var i = 0;\n                var len = chars.length;\n                for (i = 0; i < len; i += 1) {\n                  if (chars[i].t === 1) {\n                    chars[i].data.layers = findCompLayers(chars[i].data.refId, assets);\n                    completeLayers(chars[i].data.layers, assets);\n                  }\n                }\n              }\n            }\n            function findComp(id, comps) {\n              var i = 0;\n              var len = comps.length;\n              while (i < len) {\n                if (comps[i].id === id) {\n                  return comps[i];\n                }\n                i += 1;\n              }\n              return null;\n            }\n            function findCompLayers(id, comps) {\n              var comp2 = findComp(id, comps);\n              if (comp2) {\n                if (!comp2.layers.__used) {\n                  comp2.layers.__used = true;\n                  return comp2.layers;\n                }\n                return JSON.parse(JSON.stringify(comp2.layers));\n              }\n              return null;\n            }\n            function completeShapes(arr) {\n              var i;\n              var len = arr.length;\n              var j;\n              var jLen;\n              for (i = len - 1; i >= 0; i -= 1) {\n                if (arr[i].ty === \"sh\") {\n                  if (arr[i].ks.k.i) {\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\n                  } else {\n                    jLen = arr[i].ks.k.length;\n                    for (j = 0; j < jLen; j += 1) {\n                      if (arr[i].ks.k[j].s) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\n                      }\n                      if (arr[i].ks.k[j].e) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\n                      }\n                    }\n                  }\n                } else if (arr[i].ty === \"gr\") {\n                  completeShapes(arr[i].it);\n                }\n              }\n            }\n            function convertPathsToAbsoluteValues(path) {\n              var i;\n              var len = path.i.length;\n              for (i = 0; i < len; i += 1) {\n                path.i[i][0] += path.v[i][0];\n                path.i[i][1] += path.v[i][1];\n                path.o[i][0] += path.v[i][0];\n                path.o[i][1] += path.v[i][1];\n              }\n            }\n            function checkVersion(minimum, animVersionString) {\n              var animVersion = animVersionString ? animVersionString.split(\".\") : [100, 100, 100];\n              if (minimum[0] > animVersion[0]) {\n                return true;\n              }\n              if (animVersion[0] > minimum[0]) {\n                return false;\n              }\n              if (minimum[1] > animVersion[1]) {\n                return true;\n              }\n              if (animVersion[1] > minimum[1]) {\n                return false;\n              }\n              if (minimum[2] > animVersion[2]) {\n                return true;\n              }\n              if (animVersion[2] > minimum[2]) {\n                return false;\n              }\n              return null;\n            }\n            var checkText = function () {\n              var minimumVersion = [4, 4, 14];\n              function updateTextLayer(textLayer) {\n                var documentData = textLayer.t.d;\n                textLayer.t.d = {\n                  k: [{\n                    s: documentData,\n                    t: 0\n                  }]\n                };\n              }\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkChars = function () {\n              var minimumVersion = [4, 7, 99];\n              return function (animationData) {\n                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n                  var i;\n                  var len = animationData.chars.length;\n                  for (i = 0; i < len; i += 1) {\n                    var charData = animationData.chars[i];\n                    if (charData.data && charData.data.shapes) {\n                      completeShapes(charData.data.shapes);\n                      charData.data.ip = 0;\n                      charData.data.op = 99999;\n                      charData.data.st = 0;\n                      charData.data.sr = 1;\n                      charData.data.ks = {\n                        p: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        s: {\n                          k: [100, 100],\n                          a: 0\n                        },\n                        a: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        r: {\n                          k: 0,\n                          a: 0\n                        },\n                        o: {\n                          k: 100,\n                          a: 0\n                        }\n                      };\n                      if (!animationData.chars[i].t) {\n                        charData.data.shapes.push({\n                          ty: \"no\"\n                        });\n                        charData.data.shapes[0].it.push({\n                          p: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          s: {\n                            k: [100, 100],\n                            a: 0\n                          },\n                          a: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          r: {\n                            k: 0,\n                            a: 0\n                          },\n                          o: {\n                            k: 100,\n                            a: 0\n                          },\n                          sk: {\n                            k: 0,\n                            a: 0\n                          },\n                          sa: {\n                            k: 0,\n                            a: 0\n                          },\n                          ty: \"tr\"\n                        });\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkPathProperties = function () {\n              var minimumVersion = [5, 7, 15];\n              function updateTextLayer(textLayer) {\n                var pathData = textLayer.t.p;\n                if (typeof pathData.a === \"number\") {\n                  pathData.a = {\n                    a: 0,\n                    k: pathData.a\n                  };\n                }\n                if (typeof pathData.p === \"number\") {\n                  pathData.p = {\n                    a: 0,\n                    k: pathData.p\n                  };\n                }\n                if (typeof pathData.r === \"number\") {\n                  pathData.r = {\n                    a: 0,\n                    k: pathData.r\n                  };\n                }\n              }\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkColors = function () {\n              var minimumVersion = [4, 1, 9];\n              function iterateShapes(shapes) {\n                var i;\n                var len = shapes.length;\n                var j;\n                var jLen;\n                for (i = 0; i < len; i += 1) {\n                  if (shapes[i].ty === \"gr\") {\n                    iterateShapes(shapes[i].it);\n                  } else if (shapes[i].ty === \"fl\" || shapes[i].ty === \"st\") {\n                    if (shapes[i].c.k && shapes[i].c.k[0].i) {\n                      jLen = shapes[i].c.k.length;\n                      for (j = 0; j < jLen; j += 1) {\n                        if (shapes[i].c.k[j].s) {\n                          shapes[i].c.k[j].s[0] /= 255;\n                          shapes[i].c.k[j].s[1] /= 255;\n                          shapes[i].c.k[j].s[2] /= 255;\n                          shapes[i].c.k[j].s[3] /= 255;\n                        }\n                        if (shapes[i].c.k[j].e) {\n                          shapes[i].c.k[j].e[0] /= 255;\n                          shapes[i].c.k[j].e[1] /= 255;\n                          shapes[i].c.k[j].e[2] /= 255;\n                          shapes[i].c.k[j].e[3] /= 255;\n                        }\n                      }\n                    } else {\n                      shapes[i].c.k[0] /= 255;\n                      shapes[i].c.k[1] /= 255;\n                      shapes[i].c.k[2] /= 255;\n                      shapes[i].c.k[3] /= 255;\n                    }\n                  }\n                }\n              }\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 4) {\n                    iterateShapes(layers[i].shapes);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkShapes = function () {\n              var minimumVersion = [4, 4, 18];\n              function completeClosingShapes(arr) {\n                var i;\n                var len = arr.length;\n                var j;\n                var jLen;\n                for (i = len - 1; i >= 0; i -= 1) {\n                  if (arr[i].ty === \"sh\") {\n                    if (arr[i].ks.k.i) {\n                      arr[i].ks.k.c = arr[i].closed;\n                    } else {\n                      jLen = arr[i].ks.k.length;\n                      for (j = 0; j < jLen; j += 1) {\n                        if (arr[i].ks.k[j].s) {\n                          arr[i].ks.k[j].s[0].c = arr[i].closed;\n                        }\n                        if (arr[i].ks.k[j].e) {\n                          arr[i].ks.k[j].e[0].c = arr[i].closed;\n                        }\n                      }\n                    }\n                  } else if (arr[i].ty === \"gr\") {\n                    completeClosingShapes(arr[i].it);\n                  }\n                }\n              }\n              function iterateLayers(layers) {\n                var layerData;\n                var i;\n                var len = layers.length;\n                var j;\n                var jLen;\n                var k;\n                var kLen;\n                for (i = 0; i < len; i += 1) {\n                  layerData = layers[i];\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        maskProps[j].pt.k.c = maskProps[j].cl;\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 4) {\n                    completeClosingShapes(layerData.shapes);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            function completeData(animationData) {\n              if (animationData.__complete) {\n                return;\n              }\n              checkColors(animationData);\n              checkText(animationData);\n              checkChars(animationData);\n              checkPathProperties(animationData);\n              checkShapes(animationData);\n              completeLayers(animationData.layers, animationData.assets);\n              completeChars(animationData.chars, animationData.assets);\n              animationData.__complete = true;\n            }\n            function completeText(data2) {\n              if (data2.t.a.length === 0 && !(\"m\" in data2.t.p)) ;\n            }\n            var moduleOb = {};\n            moduleOb.completeData = completeData;\n            moduleOb.checkColors = checkColors;\n            moduleOb.checkChars = checkChars;\n            moduleOb.checkPathProperties = checkPathProperties;\n            moduleOb.checkShapes = checkShapes;\n            moduleOb.completeLayers = completeLayers;\n            return moduleOb;\n          }\n          if (!_workerSelf.dataManager) {\n            _workerSelf.dataManager = dataFunctionManager();\n          }\n          if (!_workerSelf.assetLoader) {\n            _workerSelf.assetLoader = function () {\n              function formatResponse(xhr) {\n                var contentTypeHeader = xhr.getResponseHeader(\"content-type\");\n                if (contentTypeHeader && xhr.responseType === \"json\" && contentTypeHeader.indexOf(\"json\") !== -1) {\n                  return xhr.response;\n                }\n                if (xhr.response && typeof xhr.response === \"object\") {\n                  return xhr.response;\n                }\n                if (xhr.response && typeof xhr.response === \"string\") {\n                  return JSON.parse(xhr.response);\n                }\n                if (xhr.responseText) {\n                  return JSON.parse(xhr.responseText);\n                }\n                return null;\n              }\n              function loadAsset(path, fullPath, callback, errorCallback) {\n                var response;\n                var xhr = new XMLHttpRequest();\n                try {\n                  xhr.responseType = \"json\";\n                } catch (err) {}\n                xhr.onreadystatechange = function () {\n                  if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                      response = formatResponse(xhr);\n                      callback(response);\n                    } else {\n                      try {\n                        response = formatResponse(xhr);\n                        callback(response);\n                      } catch (err) {\n                        if (errorCallback) {\n                          errorCallback(err);\n                        }\n                      }\n                    }\n                  }\n                };\n                try {\n                  xhr.open(\"GET\", path, true);\n                } catch (error) {\n                  xhr.open(\"GET\", fullPath + \"/\" + path, true);\n                }\n                xhr.send();\n              }\n              return {\n                load: loadAsset\n              };\n            }();\n          }\n          if (e.data.type === \"loadAnimation\") {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data2) {\n              _workerSelf.dataManager.completeData(data2);\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data2,\n                status: \"success\"\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: \"error\"\n              });\n            });\n          } else if (e.data.type === \"complete\") {\n            var animation = e.data.animation;\n            _workerSelf.dataManager.completeData(animation);\n            _workerSelf.postMessage({\n              id: e.data.id,\n              payload: animation,\n              status: \"success\"\n            });\n          } else if (e.data.type === \"loadData\") {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data2) {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data2,\n                status: \"success\"\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: \"error\"\n              });\n            });\n          }\n        });\n        workerInstance.onmessage = function (event) {\n          var data2 = event.data;\n          var id = data2.id;\n          var process = processes[id];\n          processes[id] = null;\n          if (data2.status === \"success\") {\n            process.onComplete(data2.payload);\n          } else if (process.onError) {\n            process.onError();\n          }\n        };\n      }\n    }\n    function createProcess(onComplete, onError) {\n      _counterId += 1;\n      var id = \"processId_\" + _counterId;\n      processes[id] = {\n        onComplete,\n        onError\n      };\n      return id;\n    }\n    function loadAnimation2(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: \"loadAnimation\",\n        path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n    function loadData(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: \"loadData\",\n        path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n    function completeAnimation(anim, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: \"complete\",\n        animation: anim,\n        id: processId\n      });\n    }\n    return {\n      loadAnimation: loadAnimation2,\n      loadData,\n      completeAnimation\n    };\n  }();\n  const ImagePreloader = function () {\n    var proxyImage = function () {\n      var canvas = createTag(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = \"rgba(0,0,0,0)\";\n      ctx.fillRect(0, 0, 1, 1);\n      return canvas;\n    }();\n    function imageLoaded() {\n      this.loadedAssets += 1;\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n    function footageLoaded() {\n      this.loadedFootagesCount += 1;\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n    function getAssetsPath(assetData, assetsPath, originalPath) {\n      var path = \"\";\n      if (assetData.e) {\n        path = assetData.p;\n      } else if (assetsPath) {\n        var imagePath = assetData.p;\n        if (imagePath.indexOf(\"images/\") !== -1) {\n          imagePath = imagePath.split(\"/\")[1];\n        }\n        path = assetsPath + imagePath;\n      } else {\n        path = originalPath;\n        path += assetData.u ? assetData.u : \"\";\n        path += assetData.p;\n      }\n      return path;\n    }\n    function testImageLoaded(img) {\n      var _count = 0;\n      var intervalId = setInterval(function () {\n        var box = img.getBBox();\n        if (box.width || _count > 500) {\n          this._imageLoaded();\n          clearInterval(intervalId);\n        }\n        _count += 1;\n      }.bind(this), 50);\n    }\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createNS(\"image\");\n      if (isSafari) {\n        this.testImageLoaded(img);\n      } else {\n        img.addEventListener(\"load\", this._imageLoaded, false);\n      }\n      img.addEventListener(\"error\", function () {\n        ob2.img = proxyImage;\n        this._imageLoaded();\n      }.bind(this), false);\n      img.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", path);\n      if (this._elementHelper.append) {\n        this._elementHelper.append(img);\n      } else {\n        this._elementHelper.appendChild(img);\n      }\n      var ob2 = {\n        img,\n        assetData\n      };\n      return ob2;\n    }\n    function createImgData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createTag(\"img\");\n      img.crossOrigin = \"anonymous\";\n      img.addEventListener(\"load\", this._imageLoaded, false);\n      img.addEventListener(\"error\", function () {\n        ob2.img = proxyImage;\n        this._imageLoaded();\n      }.bind(this), false);\n      img.src = path;\n      var ob2 = {\n        img,\n        assetData\n      };\n      return ob2;\n    }\n    function createFootageData(data2) {\n      var ob2 = {\n        assetData: data2\n      };\n      var path = getAssetsPath(data2, this.assetsPath, this.path);\n      dataManager.loadData(path, function (footageData) {\n        ob2.img = footageData;\n        this._footageLoaded();\n      }.bind(this), function () {\n        ob2.img = {};\n        this._footageLoaded();\n      }.bind(this));\n      return ob2;\n    }\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb;\n      var i;\n      var len = assets.length;\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          if (!assets[i].t || assets[i].t === \"seq\") {\n            this.totalImages += 1;\n            this.images.push(this._createImageData(assets[i]));\n          } else if (assets[i].t === 3) {\n            this.totalFootages += 1;\n            this.images.push(this.createFootageData(assets[i]));\n          }\n        }\n      }\n    }\n    function setPath(path) {\n      this.path = path || \"\";\n    }\n    function setAssetsPath(path) {\n      this.assetsPath = path || \"\";\n    }\n    function getAsset(assetData) {\n      var i = 0;\n      var len = this.images.length;\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img;\n        }\n        i += 1;\n      }\n      return null;\n    }\n    function destroy() {\n      this.imagesLoadedCb = null;\n      this.images.length = 0;\n    }\n    function loadedImages() {\n      return this.totalImages === this.loadedAssets;\n    }\n    function loadedFootages() {\n      return this.totalFootages === this.loadedFootagesCount;\n    }\n    function setCacheType(type, elementHelper) {\n      if (type === \"svg\") {\n        this._elementHelper = elementHelper;\n        this._createImageData = this.createImageData.bind(this);\n      } else {\n        this._createImageData = this.createImgData.bind(this);\n      }\n    }\n    function ImagePreloaderFactory() {\n      this._imageLoaded = imageLoaded.bind(this);\n      this._footageLoaded = footageLoaded.bind(this);\n      this.testImageLoaded = testImageLoaded.bind(this);\n      this.createFootageData = createFootageData.bind(this);\n      this.assetsPath = \"\";\n      this.path = \"\";\n      this.totalImages = 0;\n      this.totalFootages = 0;\n      this.loadedAssets = 0;\n      this.loadedFootagesCount = 0;\n      this.imagesLoadedCb = null;\n      this.images = [];\n    }\n    ImagePreloaderFactory.prototype = {\n      loadAssets,\n      setAssetsPath,\n      setPath,\n      loadedImages,\n      loadedFootages,\n      destroy,\n      getAsset,\n      createImgData,\n      createImageData,\n      imageLoaded,\n      footageLoaded,\n      setCacheType\n    };\n    return ImagePreloaderFactory;\n  }();\n  function BaseEvent() {}\n  BaseEvent.prototype = {\n    triggerEvent: function (eventName, args) {\n      if (this._cbs[eventName]) {\n        var callbacks = this._cbs[eventName];\n        for (var i = 0; i < callbacks.length; i += 1) {\n          callbacks[i](args);\n        }\n      }\n    },\n    addEventListener: function (eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = [];\n      }\n      this._cbs[eventName].push(callback);\n      return function () {\n        this.removeEventListener(eventName, callback);\n      }.bind(this);\n    },\n    removeEventListener: function (eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null;\n      } else if (this._cbs[eventName]) {\n        var i = 0;\n        var len = this._cbs[eventName].length;\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1);\n            i -= 1;\n            len -= 1;\n          }\n          i += 1;\n        }\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null;\n        }\n      }\n    }\n  };\n  const markerParser = function () {\n    function parsePayloadLines(payload) {\n      var lines = payload.split(\"\\r\\n\");\n      var keys = {};\n      var line;\n      var keysCount = 0;\n      for (var i = 0; i < lines.length; i += 1) {\n        line = lines[i].split(\":\");\n        if (line.length === 2) {\n          keys[line[0]] = line[1].trim();\n          keysCount += 1;\n        }\n      }\n      if (keysCount === 0) {\n        throw new Error();\n      }\n      return keys;\n    }\n    return function (_markers) {\n      var markers = [];\n      for (var i = 0; i < _markers.length; i += 1) {\n        var _marker = _markers[i];\n        var markerData = {\n          time: _marker.tm,\n          duration: _marker.dr\n        };\n        try {\n          markerData.payload = JSON.parse(_markers[i].cm);\n        } catch (_) {\n          try {\n            markerData.payload = parsePayloadLines(_markers[i].cm);\n          } catch (__) {\n            markerData.payload = {\n              name: _markers[i].cm\n            };\n          }\n        }\n        markers.push(markerData);\n      }\n      return markers;\n    };\n  }();\n  const ProjectInterface = function () {\n    function registerComposition(comp2) {\n      this.compositions.push(comp2);\n    }\n    return function () {\n      function _thisProjectFunction(name2) {\n        var i = 0;\n        var len = this.compositions.length;\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name2) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame);\n            }\n            return this.compositions[i].compInterface;\n          }\n          i += 1;\n        }\n        return null;\n      }\n      _thisProjectFunction.compositions = [];\n      _thisProjectFunction.currentFrame = 0;\n      _thisProjectFunction.registerComposition = registerComposition;\n      return _thisProjectFunction;\n    };\n  }();\n  const renderers = {};\n  const registerRenderer = (key2, value2) => {\n    renderers[key2] = value2;\n  };\n  function getRenderer(key2) {\n    return renderers[key2];\n  }\n  const AnimationItem = function () {\n    this._cbs = [];\n    this.name = \"\";\n    this.path = \"\";\n    this.isLoaded = false;\n    this.currentFrame = 0;\n    this.currentRawFrame = 0;\n    this.firstFrame = 0;\n    this.totalFrames = 0;\n    this.frameRate = 0;\n    this.frameMult = 0;\n    this.playSpeed = 1;\n    this.playDirection = 1;\n    this.playCount = 0;\n    this.animationData = {};\n    this.assets = [];\n    this.isPaused = true;\n    this.autoplay = false;\n    this.loop = true;\n    this.renderer = null;\n    this.animationID = createElementID();\n    this.assetsPath = \"\";\n    this.timeCompleted = 0;\n    this.segmentPos = 0;\n    this.isSubframeEnabled = getSubframeEnabled();\n    this.segments = [];\n    this._idle = true;\n    this._completedLoop = false;\n    this.projectInterface = ProjectInterface();\n    this.imagePreloader = new ImagePreloader();\n    this.audioController = audioControllerFactory();\n    this.markers = [];\n    this.configAnimation = this.configAnimation.bind(this);\n    this.onSetupError = this.onSetupError.bind(this);\n    this.onSegmentComplete = this.onSegmentComplete.bind(this);\n    this.drawnFrameEvent = new BMEnterFrameEvent(\"drawnFrame\", 0, 0, 0);\n  };\n  extendPrototype([BaseEvent], AnimationItem);\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container;\n    }\n    var animType = \"svg\";\n    if (params.animType) {\n      animType = params.animType;\n    } else if (params.renderer) {\n      animType = params.renderer;\n    }\n    const RendererClass = getRenderer(animType);\n    this.renderer = new RendererClass(this, params.rendererSettings);\n    this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);\n    this.renderer.setProjectInterface(this.projectInterface);\n    this.animType = animType;\n    if (params.loop === \"\" || params.loop === null || params.loop === void 0 || params.loop === true) {\n      this.loop = true;\n    } else if (params.loop === false) {\n      this.loop = false;\n    } else {\n      this.loop = parseInt(params.loop, 10);\n    }\n    this.autoplay = \"autoplay\" in params ? params.autoplay : true;\n    this.name = params.name ? params.name : \"\";\n    this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, \"autoloadSegments\") ? params.autoloadSegments : true;\n    this.assetsPath = params.assetsPath;\n    this.initialSegment = params.initialSegment;\n    if (params.audioFactory) {\n      this.audioController.setAudioFactory(params.audioFactory);\n    }\n    if (params.animationData) {\n      this.setupAnimation(params.animationData);\n    } else if (params.path) {\n      if (params.path.lastIndexOf(\"\\\\\") !== -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf(\"\\\\\") + 1);\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf(\"/\") + 1);\n      }\n      this.fileName = params.path.substr(params.path.lastIndexOf(\"/\") + 1);\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(\".json\"));\n      dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError);\n    }\n  };\n  AnimationItem.prototype.onSetupError = function () {\n    this.trigger(\"data_failed\");\n  };\n  AnimationItem.prototype.setupAnimation = function (data2) {\n    dataManager.completeAnimation(data2, this.configAnimation);\n  };\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    if (animationData) {\n      if (typeof animationData !== \"object\") {\n        animationData = JSON.parse(animationData);\n      }\n    }\n    var params = {\n      wrapper,\n      animationData\n    };\n    var wrapperAttributes = wrapper.attributes;\n    params.path = wrapperAttributes.getNamedItem(\"data-animation-path\") ? wrapperAttributes.getNamedItem(\"data-animation-path\").value : wrapperAttributes.getNamedItem(\"data-bm-path\") ? wrapperAttributes.getNamedItem(\"data-bm-path\").value : wrapperAttributes.getNamedItem(\"bm-path\") ? wrapperAttributes.getNamedItem(\"bm-path\").value : \"\";\n    params.animType = wrapperAttributes.getNamedItem(\"data-anim-type\") ? wrapperAttributes.getNamedItem(\"data-anim-type\").value : wrapperAttributes.getNamedItem(\"data-bm-type\") ? wrapperAttributes.getNamedItem(\"data-bm-type\").value : wrapperAttributes.getNamedItem(\"bm-type\") ? wrapperAttributes.getNamedItem(\"bm-type\").value : wrapperAttributes.getNamedItem(\"data-bm-renderer\") ? wrapperAttributes.getNamedItem(\"data-bm-renderer\").value : wrapperAttributes.getNamedItem(\"bm-renderer\") ? wrapperAttributes.getNamedItem(\"bm-renderer\").value : \"canvas\";\n    var loop = wrapperAttributes.getNamedItem(\"data-anim-loop\") ? wrapperAttributes.getNamedItem(\"data-anim-loop\").value : wrapperAttributes.getNamedItem(\"data-bm-loop\") ? wrapperAttributes.getNamedItem(\"data-bm-loop\").value : wrapperAttributes.getNamedItem(\"bm-loop\") ? wrapperAttributes.getNamedItem(\"bm-loop\").value : \"\";\n    if (loop === \"false\") {\n      params.loop = false;\n    } else if (loop === \"true\") {\n      params.loop = true;\n    } else if (loop !== \"\") {\n      params.loop = parseInt(loop, 10);\n    }\n    var autoplay = wrapperAttributes.getNamedItem(\"data-anim-autoplay\") ? wrapperAttributes.getNamedItem(\"data-anim-autoplay\").value : wrapperAttributes.getNamedItem(\"data-bm-autoplay\") ? wrapperAttributes.getNamedItem(\"data-bm-autoplay\").value : wrapperAttributes.getNamedItem(\"bm-autoplay\") ? wrapperAttributes.getNamedItem(\"bm-autoplay\").value : true;\n    params.autoplay = autoplay !== \"false\";\n    params.name = wrapperAttributes.getNamedItem(\"data-name\") ? wrapperAttributes.getNamedItem(\"data-name\").value : wrapperAttributes.getNamedItem(\"data-bm-name\") ? wrapperAttributes.getNamedItem(\"data-bm-name\").value : wrapperAttributes.getNamedItem(\"bm-name\") ? wrapperAttributes.getNamedItem(\"bm-name\").value : \"\";\n    var prerender = wrapperAttributes.getNamedItem(\"data-anim-prerender\") ? wrapperAttributes.getNamedItem(\"data-anim-prerender\").value : wrapperAttributes.getNamedItem(\"data-bm-prerender\") ? wrapperAttributes.getNamedItem(\"data-bm-prerender\").value : wrapperAttributes.getNamedItem(\"bm-prerender\") ? wrapperAttributes.getNamedItem(\"bm-prerender\").value : \"\";\n    if (prerender === \"false\") {\n      params.prerender = false;\n    }\n    this.setParams(params);\n  };\n  AnimationItem.prototype.includeLayers = function (data2) {\n    if (data2.op > this.animationData.op) {\n      this.animationData.op = data2.op;\n      this.totalFrames = Math.floor(data2.op - this.animationData.ip);\n    }\n    var layers = this.animationData.layers;\n    var i;\n    var len = layers.length;\n    var newLayers = data2.layers;\n    var j;\n    var jLen = newLayers.length;\n    for (j = 0; j < jLen; j += 1) {\n      i = 0;\n      while (i < len) {\n        if (layers[i].id === newLayers[j].id) {\n          layers[i] = newLayers[j];\n          break;\n        }\n        i += 1;\n      }\n    }\n    if (data2.chars || data2.fonts) {\n      this.renderer.globalData.fontManager.addChars(data2.chars);\n      this.renderer.globalData.fontManager.addFonts(data2.fonts, this.renderer.globalData.defs);\n    }\n    if (data2.assets) {\n      len = data2.assets.length;\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data2.assets[i]);\n      }\n    }\n    this.animationData.__complete = false;\n    dataManager.completeAnimation(this.animationData, this.onSegmentComplete);\n  };\n  AnimationItem.prototype.onSegmentComplete = function (data2) {\n    this.animationData = data2;\n    var expressionsPlugin2 = getExpressionsPlugin();\n    if (expressionsPlugin2) {\n      expressionsPlugin2.initExpressions(this);\n    }\n    this.loadNextSegment();\n  };\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments;\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger(\"data_ready\");\n      this.timeCompleted = this.totalFrames;\n      return;\n    }\n    var segment = segments.shift();\n    this.timeCompleted = segment.time * this.frameRate;\n    var segmentPath = this.path + this.fileName + \"_\" + this.segmentPos + \".json\";\n    this.segmentPos += 1;\n    dataManager.loadData(segmentPath, this.includeLayers.bind(this), function () {\n      this.trigger(\"data_failed\");\n    }.bind(this));\n  };\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments;\n    if (!segments) {\n      this.timeCompleted = this.totalFrames;\n    }\n    this.loadNextSegment();\n  };\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger(\"loaded_images\");\n    this.checkLoaded();\n  };\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath);\n    this.imagePreloader.setPath(this.path);\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\n  };\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return;\n    }\n    try {\n      this.animationData = animData;\n      if (this.initialSegment) {\n        this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);\n        this.firstFrame = Math.round(this.initialSegment[0]);\n      } else {\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\n        this.firstFrame = Math.round(this.animationData.ip);\n      }\n      this.renderer.configAnimation(animData);\n      if (!animData.assets) {\n        animData.assets = [];\n      }\n      this.assets = this.animationData.assets;\n      this.frameRate = this.animationData.fr;\n      this.frameMult = this.animationData.fr / 1e3;\n      this.renderer.searchExtraCompositions(animData.assets);\n      this.markers = markerParser(animData.markers || []);\n      this.trigger(\"config_ready\");\n      this.preloadImages();\n      this.loadSegments();\n      this.updaFrameModifier();\n      this.waitForFontsLoaded();\n      if (this.isPaused) {\n        this.audioController.pause();\n      }\n    } catch (error) {\n      this.triggerConfigError(error);\n    }\n  };\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return;\n    }\n    if (this.renderer.globalData.fontManager.isLoaded) {\n      this.checkLoaded();\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20);\n    }\n  };\n  AnimationItem.prototype.checkLoaded = function () {\n    if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== \"canvas\") && this.imagePreloader.loadedFootages()) {\n      this.isLoaded = true;\n      var expressionsPlugin2 = getExpressionsPlugin();\n      if (expressionsPlugin2) {\n        expressionsPlugin2.initExpressions(this);\n      }\n      this.renderer.initItems();\n      setTimeout(function () {\n        this.trigger(\"DOMLoaded\");\n      }.bind(this), 0);\n      this.gotoFrame();\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n  };\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize();\n  };\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.isSubframeEnabled = !!flag;\n  };\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted;\n    }\n    this.trigger(\"enterFrame\");\n    this.renderFrame();\n    this.trigger(\"drawnFrame\");\n  };\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false || !this.renderer) {\n      return;\n    }\n    try {\n      this.renderer.renderFrame(this.currentFrame + this.firstFrame);\n    } catch (error) {\n      this.triggerRenderFrameError(error);\n    }\n  };\n  AnimationItem.prototype.play = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    if (this.isPaused === true) {\n      this.isPaused = false;\n      this.trigger(\"_pause\");\n      this.audioController.resume();\n      if (this._idle) {\n        this._idle = false;\n        this.trigger(\"_active\");\n      }\n    }\n  };\n  AnimationItem.prototype.pause = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    if (this.isPaused === false) {\n      this.isPaused = true;\n      this.trigger(\"_play\");\n      this._idle = true;\n      this.trigger(\"_idle\");\n      this.audioController.pause();\n    }\n  };\n  AnimationItem.prototype.togglePause = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    if (this.isPaused === true) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n  AnimationItem.prototype.stop = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    this.pause();\n    this.playCount = 0;\n    this._completedLoop = false;\n    this.setCurrentRawFrameValue(0);\n  };\n  AnimationItem.prototype.getMarkerData = function (markerName) {\n    var marker;\n    for (var i = 0; i < this.markers.length; i += 1) {\n      marker = this.markers[i];\n      if (marker.payload && marker.payload.name === markerName) {\n        return marker;\n      }\n    }\n    return null;\n  };\n  AnimationItem.prototype.goToAndStop = function (value2, isFrame, name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    var numValue = Number(value2);\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value2);\n      if (marker) {\n        this.goToAndStop(marker.time, true);\n      }\n    } else if (isFrame) {\n      this.setCurrentRawFrameValue(value2);\n    } else {\n      this.setCurrentRawFrameValue(value2 * this.frameModifier);\n    }\n    this.pause();\n  };\n  AnimationItem.prototype.goToAndPlay = function (value2, isFrame, name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    var numValue = Number(value2);\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value2);\n      if (marker) {\n        if (!marker.duration) {\n          this.goToAndStop(marker.time, true);\n        } else {\n          this.playSegments([marker.time, marker.time + marker.duration], true);\n        }\n      }\n    } else {\n      this.goToAndStop(numValue, isFrame, name2);\n    }\n    this.play();\n  };\n  AnimationItem.prototype.advanceTime = function (value2) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return;\n    }\n    var nextValue = this.currentRawFrame + value2 * this.frameModifier;\n    var _isComplete = false;\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true;\n          nextValue = this.totalFrames - 1;\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1;\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames);\n          this._completedLoop = true;\n          this.trigger(\"loopComplete\");\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue);\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);\n          if (!this._completedLoop) {\n            this._completedLoop = true;\n          } else {\n            this.trigger(\"loopComplete\");\n          }\n        } else {\n          _isComplete = true;\n          nextValue = 0;\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue);\n    }\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue);\n      this.pause();\n      this.trigger(\"complete\");\n    }\n  };\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0;\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(-1);\n        }\n      }\n      this.totalFrames = arr[0] - arr[1];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[1];\n      this.setCurrentRawFrameValue(this.totalFrames - 1e-3 - offset);\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(1);\n        }\n      }\n      this.totalFrames = arr[1] - arr[0];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[0];\n      this.setCurrentRawFrameValue(1e-3 + offset);\n    }\n    this.trigger(\"segmentStart\");\n  };\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1;\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init;\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init;\n      }\n    }\n    this.firstFrame = init;\n    this.totalFrames = end - init;\n    this.timeCompleted = this.totalFrames;\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true);\n    }\n  };\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0;\n    }\n    if (typeof arr[0] === \"object\") {\n      var i;\n      var len = arr.length;\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i]);\n      }\n    } else {\n      this.segments.push(arr);\n    }\n    if (this.segments.length && forceFlag) {\n      this.adjustSegment(this.segments.shift(), 0);\n    }\n    if (this.isPaused) {\n      this.play();\n    }\n  };\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0;\n    this.segments.push([this.animationData.ip, this.animationData.op]);\n    if (forceFlag) {\n      this.checkSegments(0);\n    }\n  };\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset);\n      return true;\n    }\n    return false;\n  };\n  AnimationItem.prototype.destroy = function (name2) {\n    if (name2 && this.name !== name2 || !this.renderer) {\n      return;\n    }\n    this.renderer.destroy();\n    this.imagePreloader.destroy();\n    this.trigger(\"destroy\");\n    this._cbs = null;\n    this.onEnterFrame = null;\n    this.onLoopComplete = null;\n    this.onComplete = null;\n    this.onSegmentStart = null;\n    this.onDestroy = null;\n    this.renderer = null;\n    this.renderer = null;\n    this.imagePreloader = null;\n    this.projectInterface = null;\n  };\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value2) {\n    this.currentRawFrame = value2;\n    this.gotoFrame();\n  };\n  AnimationItem.prototype.setSpeed = function (val2) {\n    this.playSpeed = val2;\n    this.updaFrameModifier();\n  };\n  AnimationItem.prototype.setDirection = function (val2) {\n    this.playDirection = val2 < 0 ? -1 : 1;\n    this.updaFrameModifier();\n  };\n  AnimationItem.prototype.setVolume = function (val2, name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    this.audioController.setVolume(val2);\n  };\n  AnimationItem.prototype.getVolume = function () {\n    return this.audioController.getVolume();\n  };\n  AnimationItem.prototype.mute = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    this.audioController.mute();\n  };\n  AnimationItem.prototype.unmute = function (name2) {\n    if (name2 && this.name !== name2) {\n      return;\n    }\n    this.audioController.unmute();\n  };\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\n    this.audioController.setRate(this.playSpeed * this.playDirection);\n  };\n  AnimationItem.prototype.getPath = function () {\n    return this.path;\n  };\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = \"\";\n    if (assetData.e) {\n      path = assetData.p;\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p;\n      if (imagePath.indexOf(\"images/\") !== -1) {\n        imagePath = imagePath.split(\"/\")[1];\n      }\n      path = this.assetsPath + imagePath;\n    } else {\n      path = this.path;\n      path += assetData.u ? assetData.u : \"\";\n      path += assetData.p;\n    }\n    return path;\n  };\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0;\n    var len = this.assets.length;\n    while (i < len) {\n      if (id === this.assets[i].id) {\n        return this.assets[i];\n      }\n      i += 1;\n    }\n    return null;\n  };\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide();\n  };\n  AnimationItem.prototype.show = function () {\n    this.renderer.show();\n  };\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\n  };\n  AnimationItem.prototype.updateDocumentData = function (path, documentData, index2) {\n    try {\n      var element = this.renderer.getElementByPath(path);\n      element.updateDocumentData(documentData, index2);\n    } catch (error) {}\n  };\n  AnimationItem.prototype.trigger = function (name2) {\n    if (this._cbs && this._cbs[name2]) {\n      switch (name2) {\n        case \"enterFrame\":\n          this.triggerEvent(name2, new BMEnterFrameEvent(name2, this.currentFrame, this.totalFrames, this.frameModifier));\n          break;\n        case \"drawnFrame\":\n          this.drawnFrameEvent.currentTime = this.currentFrame;\n          this.drawnFrameEvent.totalTime = this.totalFrames;\n          this.drawnFrameEvent.direction = this.frameModifier;\n          this.triggerEvent(name2, this.drawnFrameEvent);\n          break;\n        case \"loopComplete\":\n          this.triggerEvent(name2, new BMCompleteLoopEvent(name2, this.loop, this.playCount, this.frameMult));\n          break;\n        case \"complete\":\n          this.triggerEvent(name2, new BMCompleteEvent(name2, this.frameMult));\n          break;\n        case \"segmentStart\":\n          this.triggerEvent(name2, new BMSegmentStartEvent(name2, this.firstFrame, this.totalFrames));\n          break;\n        case \"destroy\":\n          this.triggerEvent(name2, new BMDestroyEvent(name2, this));\n          break;\n        default:\n          this.triggerEvent(name2);\n      }\n    }\n    if (name2 === \"enterFrame\" && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name2, this.currentFrame, this.totalFrames, this.frameMult));\n    }\n    if (name2 === \"loopComplete\" && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name2, this.loop, this.playCount, this.frameMult));\n    }\n    if (name2 === \"complete\" && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name2, this.frameMult));\n    }\n    if (name2 === \"segmentStart\" && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name2, this.firstFrame, this.totalFrames));\n    }\n    if (name2 === \"destroy\" && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name2, this));\n    }\n  };\n  AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent(\"error\", error);\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n  AnimationItem.prototype.triggerConfigError = function (nativeError) {\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent(\"error\", error);\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n  const animationManager = function () {\n    var moduleOb = {};\n    var registeredAnimations = [];\n    var initTime = 0;\n    var len = 0;\n    var playingAnimationsNum = 0;\n    var _stopped = true;\n    var _isFrozen = false;\n    function removeElement(ev) {\n      var i = 0;\n      var animItem = ev.target;\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1);\n          i -= 1;\n          len -= 1;\n          if (!animItem.isPaused) {\n            subtractPlayingCount();\n          }\n        }\n        i += 1;\n      }\n    }\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null;\n      }\n      var i = 0;\n      while (i < len) {\n        if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation;\n        }\n        i += 1;\n      }\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, element);\n      animItem.setData(element, animationData);\n      return animItem;\n    }\n    function getRegisteredAnimations() {\n      var i;\n      var lenAnims = registeredAnimations.length;\n      var animations = [];\n      for (i = 0; i < lenAnims; i += 1) {\n        animations.push(registeredAnimations[i].animation);\n      }\n      return animations;\n    }\n    function addPlayingCount() {\n      playingAnimationsNum += 1;\n      activate();\n    }\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1;\n    }\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener(\"destroy\", removeElement);\n      animItem.addEventListener(\"_active\", addPlayingCount);\n      animItem.addEventListener(\"_idle\", subtractPlayingCount);\n      registeredAnimations.push({\n        elem: element,\n        animation: animItem\n      });\n      len += 1;\n    }\n    function loadAnimation2(params) {\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, null);\n      animItem.setParams(params);\n      return animItem;\n    }\n    function setSpeed(val2, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val2, animation);\n      }\n    }\n    function setDirection(val2, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val2, animation);\n      }\n    }\n    function play(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation);\n      }\n    }\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime;\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime);\n      }\n      initTime = nowTime;\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume);\n      } else {\n        _stopped = true;\n      }\n    }\n    function first(nowTime) {\n      initTime = nowTime;\n      window.requestAnimationFrame(resume);\n    }\n    function pause(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation);\n      }\n    }\n    function goToAndStop(value2, isFrame, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value2, isFrame, animation);\n      }\n    }\n    function stop(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation);\n      }\n    }\n    function togglePause(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation);\n      }\n    }\n    function destroy(animation) {\n      var i;\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation);\n      }\n    }\n    function searchAnimations2(animationData, standalone, renderer) {\n      var animElements = [].concat([].slice.call(document.getElementsByClassName(\"lottie\")), [].slice.call(document.getElementsByClassName(\"bodymovin\")));\n      var i;\n      var lenAnims = animElements.length;\n      for (i = 0; i < lenAnims; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute(\"data-bm-type\", renderer);\n        }\n        registerAnimation(animElements[i], animationData);\n      }\n      if (standalone && lenAnims === 0) {\n        if (!renderer) {\n          renderer = \"svg\";\n        }\n        var body = document.getElementsByTagName(\"body\")[0];\n        body.innerText = \"\";\n        var div2 = createTag(\"div\");\n        div2.style.width = \"100%\";\n        div2.style.height = \"100%\";\n        div2.setAttribute(\"data-bm-type\", renderer);\n        body.appendChild(div2);\n        registerAnimation(div2, animationData);\n      }\n    }\n    function resize() {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize();\n      }\n    }\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first);\n          _stopped = false;\n        }\n      }\n    }\n    function freeze() {\n      _isFrozen = true;\n    }\n    function unfreeze() {\n      _isFrozen = false;\n      activate();\n    }\n    function setVolume(val2, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setVolume(val2, animation);\n      }\n    }\n    function mute(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.mute(animation);\n      }\n    }\n    function unmute(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.unmute(animation);\n      }\n    }\n    moduleOb.registerAnimation = registerAnimation;\n    moduleOb.loadAnimation = loadAnimation2;\n    moduleOb.setSpeed = setSpeed;\n    moduleOb.setDirection = setDirection;\n    moduleOb.play = play;\n    moduleOb.pause = pause;\n    moduleOb.stop = stop;\n    moduleOb.togglePause = togglePause;\n    moduleOb.searchAnimations = searchAnimations2;\n    moduleOb.resize = resize;\n    moduleOb.goToAndStop = goToAndStop;\n    moduleOb.destroy = destroy;\n    moduleOb.freeze = freeze;\n    moduleOb.unfreeze = unfreeze;\n    moduleOb.setVolume = setVolume;\n    moduleOb.mute = mute;\n    moduleOb.unmute = unmute;\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\n    return moduleOb;\n  }();\n  const BezierFactory = function () {\n    var ob2 = {};\n    ob2.getBezierEasing = getBezierEasing;\n    var beziers = {};\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || (\"bez_\" + a + \"_\" + b + \"_\" + c + \"_\" + d).replace(/\\./g, \"p\");\n      if (beziers[str]) {\n        return beziers[str];\n      }\n      var bezEasing = new BezierEasing([a, b, c, d]);\n      beziers[str] = bezEasing;\n      return bezEasing;\n    }\n    var NEWTON_ITERATIONS = 4;\n    var NEWTON_MIN_SLOPE = 1e-3;\n    var SUBDIVISION_PRECISION = 1e-7;\n    var SUBDIVISION_MAX_ITERATIONS = 10;\n    var kSplineTableSize = 11;\n    var kSampleStepSize = 1 / (kSplineTableSize - 1);\n    var float32ArraySupported = typeof Float32Array === \"function\";\n    function A(aA1, aA2) {\n      return 1 - 3 * aA2 + 3 * aA1;\n    }\n    function B(aA1, aA2) {\n      return 3 * aA2 - 6 * aA1;\n    }\n    function C(aA1) {\n      return 3 * aA1;\n    }\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    }\n    function getSlope(aT, aA1, aA2) {\n      return 3 * A(aA1, aA2) * aT * aT + 2 * B(aA1, aA2) * aT + C(aA1);\n    }\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n        currentT,\n        i = 0;\n      do {\n        currentT = aA + (aB - aA) / 2;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n      return currentT;\n    }\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0) return aGuessT;\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n      return aGuessT;\n    }\n    function BezierEasing(points) {\n      this._p = points;\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n      this._precomputed = false;\n      this.get = this.get.bind(this);\n    }\n    BezierEasing.prototype = {\n      get: function (x) {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3];\n        if (!this._precomputed) this._precompute();\n        if (mX1 === mY1 && mX2 === mY2) return x;\n        if (x === 0) return 0;\n        if (x === 1) return 1;\n        return calcBezier(this._getTForX(x), mY1, mY2);\n      },\n      // Private part\n      _precompute: function () {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3];\n        this._precomputed = true;\n        if (mX1 !== mY1 || mX2 !== mY2) {\n          this._calcSampleValues();\n        }\n      },\n      _calcSampleValues: function () {\n        var mX1 = this._p[0],\n          mX2 = this._p[2];\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n        }\n      },\n      /**\n       * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\n       */\n      _getTForX: function (aX) {\n        var mX1 = this._p[0],\n          mX2 = this._p[2],\n          mSampleValues = this._mSampleValues;\n        var intervalStart = 0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        if (initialSlope === 0) {\n          return guessForT;\n        }\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    };\n    return ob2;\n  }();\n  const pooling = function () {\n    function double(arr) {\n      return arr.concat(createSizedArray(arr.length));\n    }\n    return {\n      double\n    };\n  }();\n  const poolFactory = function () {\n    return function (initialLength, _create, _release) {\n      var _length = 0;\n      var _maxLength = initialLength;\n      var pool = createSizedArray(_maxLength);\n      var ob2 = {\n        newElement,\n        release\n      };\n      function newElement() {\n        var element;\n        if (_length) {\n          _length -= 1;\n          element = pool[_length];\n        } else {\n          element = _create();\n        }\n        return element;\n      }\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling.double(pool);\n          _maxLength *= 2;\n        }\n        if (_release) {\n          _release(element);\n        }\n        pool[_length] = element;\n        _length += 1;\n      }\n      return ob2;\n    };\n  }();\n  const bezierLengthPool = function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray(\"float32\", getDefaultCurveSegments()),\n        lengths: createTypedArray(\"float32\", getDefaultCurveSegments())\n      };\n    }\n    return poolFactory(8, create);\n  }();\n  const segmentsLengthPool = function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0\n      };\n    }\n    function release(element) {\n      var i;\n      var len = element.lengths.length;\n      for (i = 0; i < len; i += 1) {\n        bezierLengthPool.release(element.lengths[i]);\n      }\n      element.lengths.length = 0;\n    }\n    return poolFactory(8, create, release);\n  }();\n  function bezFunction() {\n    var math = Math;\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;\n      return det1 > -1e-3 && det1 < 1e-3;\n    }\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3);\n      }\n      var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));\n      var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));\n      var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));\n      var diffDist;\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3;\n        } else {\n          diffDist = dist3 - dist2 - dist1;\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1;\n      } else {\n        diffDist = dist2 - dist1 - dist3;\n      }\n      return diffDist > -1e-4 && diffDist < 1e-4;\n    }\n    var getBezierLength = function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = getDefaultCurveSegments();\n        var k;\n        var i;\n        var len;\n        var ptCoord;\n        var perc;\n        var addedLength = 0;\n        var ptDistance;\n        var point = [];\n        var lastPoint = [];\n        var lengthData = bezierLengthPool.newElement();\n        len = pt3.length;\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n            if (lastPoint[i] !== null) {\n              ptDistance += bmPow(point[i] - lastPoint[i], 2);\n            }\n            lastPoint[i] = point[i];\n          }\n          if (ptDistance) {\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n          }\n          lengthData.percents[k] = perc;\n          lengthData.lengths[k] = addedLength;\n        }\n        lengthData.addedLength = addedLength;\n        return lengthData;\n      };\n    }();\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segmentsLengthPool.newElement();\n      var closed = shapeData.c;\n      var pathV = shapeData.v;\n      var pathO = shapeData.o;\n      var pathI = shapeData.i;\n      var i;\n      var len = shapeData._length;\n      var lengths = segmentsLength.lengths;\n      var totalLength = 0;\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\n        totalLength += lengths[i].addedLength;\n      }\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\n        totalLength += lengths[i].addedLength;\n      }\n      segmentsLength.totalLength = totalLength;\n      return segmentsLength;\n    }\n    function BezierData(length2) {\n      this.segmentLength = 0;\n      this.points = new Array(length2);\n    }\n    function PointData(partial, point) {\n      this.partialLength = partial;\n      this.point = point;\n    }\n    var buildBezierData = function () {\n      var storedData = {};\n      return function (pt1, pt2, pt3, pt4) {\n        var bezierName = (pt1[0] + \"_\" + pt1[1] + \"_\" + pt2[0] + \"_\" + pt2[1] + \"_\" + pt3[0] + \"_\" + pt3[1] + \"_\" + pt4[0] + \"_\" + pt4[1]).replace(/\\./g, \"p\");\n        if (!storedData[bezierName]) {\n          var curveSegments = getDefaultCurveSegments();\n          var k;\n          var i;\n          var len;\n          var ptCoord;\n          var perc;\n          var addedLength = 0;\n          var ptDistance;\n          var point;\n          var lastPoint = null;\n          if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\n            curveSegments = 2;\n          }\n          var bezierData = new BezierData(curveSegments);\n          len = pt3.length;\n          for (k = 0; k < curveSegments; k += 1) {\n            point = createSizedArray(len);\n            perc = k / (curveSegments - 1);\n            ptDistance = 0;\n            for (i = 0; i < len; i += 1) {\n              ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];\n              point[i] = ptCoord;\n              if (lastPoint !== null) {\n                ptDistance += bmPow(point[i] - lastPoint[i], 2);\n              }\n            }\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n            bezierData.points[k] = new PointData(ptDistance, point);\n            lastPoint = point;\n          }\n          bezierData.segmentLength = addedLength;\n          storedData[bezierName] = bezierData;\n        }\n        return storedData[bezierName];\n      };\n    }();\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents;\n      var lengths = bezierData.lengths;\n      var len = percents.length;\n      var initPos = bmFloor((len - 1) * perc);\n      var lengthPos = perc * bezierData.addedLength;\n      var lPerc = 0;\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos];\n      }\n      var dir = lengths[initPos] > lengthPos ? -1 : 1;\n      var flag = true;\n      while (flag) {\n        if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n          lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);\n          flag = false;\n        } else {\n          initPos += dir;\n        }\n        if (initPos < 0 || initPos >= len - 1) {\n          if (initPos === len - 1) {\n            return percents[initPos];\n          }\n          flag = false;\n        }\n      }\n      return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;\n    }\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData);\n      var u1 = 1 - t1;\n      var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1e3) / 1e3;\n      var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1e3) / 1e3;\n      return [ptX, ptY];\n    }\n    var bezierSegmentPoints = createTypedArray(\"float32\", 8);\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      if (startPerc < 0) {\n        startPerc = 0;\n      } else if (startPerc > 1) {\n        startPerc = 1;\n      }\n      var t0 = getDistancePerc(startPerc, bezierData);\n      endPerc = endPerc > 1 ? 1 : endPerc;\n      var t1 = getDistancePerc(endPerc, bezierData);\n      var i;\n      var len = pt1.length;\n      var u0 = 1 - t0;\n      var u1 = 1 - t1;\n      var u0u0u0 = u0 * u0 * u0;\n      var t0u0u0_3 = t0 * u0 * u0 * 3;\n      var t0t0u0_3 = t0 * t0 * u0 * 3;\n      var t0t0t0 = t0 * t0 * t0;\n      var u0u0u1 = u0 * u0 * u1;\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1;\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1;\n      var t0t0t1 = t0 * t0 * t1;\n      var u0u1u1 = u0 * u1 * u1;\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1;\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1;\n      var t0t1t1 = t0 * t1 * t1;\n      var u1u1u1 = u1 * u1 * u1;\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1;\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1;\n      var t1t1t1 = t1 * t1 * t1;\n      for (i = 0; i < len; i += 1) {\n        bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1e3) / 1e3;\n        bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1e3) / 1e3;\n        bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1e3) / 1e3;\n        bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1e3) / 1e3;\n      }\n      return bezierSegmentPoints;\n    }\n    return {\n      getSegmentsLength,\n      getNewSegment,\n      getPointInSegment,\n      buildBezierData,\n      pointOnLine2D,\n      pointOnLine3D\n    };\n  }\n  const bez = bezFunction();\n  const PropertyFactory = function () {\n    var initFrame = initialDefaultFrame;\n    var mathAbs = Math.abs;\n    function interpolateValue(frameNum, caching) {\n      var offsetTime = this.offsetTime;\n      var newValue;\n      if (this.propType === \"multidimensional\") {\n        newValue = createTypedArray(\"float32\", this.pv.length);\n      }\n      var iterationIndex = caching.lastIndex;\n      var i = iterationIndex;\n      var len = this.keyframes.length - 1;\n      var flag = true;\n      var keyData;\n      var nextKeyData;\n      var keyframeMetadata;\n      while (flag) {\n        keyData = this.keyframes[i];\n        nextKeyData = this.keyframes[i + 1];\n        if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData;\n          }\n          iterationIndex = 0;\n          break;\n        }\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i;\n          break;\n        }\n        if (i < len - 1) {\n          i += 1;\n        } else {\n          iterationIndex = 0;\n          flag = false;\n        }\n      }\n      keyframeMetadata = this.keyframesMetadata[i] || {};\n      var k;\n      var kLen;\n      var perc;\n      var jLen;\n      var j;\n      var fnc;\n      var nextKeyTime = nextKeyData.t - offsetTime;\n      var keyTime = keyData.t - offsetTime;\n      var endValue;\n      if (keyData.to) {\n        if (!keyframeMetadata.bezierData) {\n          keyframeMetadata.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\n        }\n        var bezierData = keyframeMetadata.bezierData;\n        if (frameNum >= nextKeyTime || frameNum < keyTime) {\n          var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\n          kLen = bezierData.points[ind].point.length;\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k];\n          }\n        } else {\n          if (keyframeMetadata.__fnct) {\n            fnc = keyframeMetadata.__fnct;\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\n            keyframeMetadata.__fnct = fnc;\n          }\n          perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n          var distanceInLine = bezierData.segmentLength * perc;\n          var segmentPerc;\n          var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;\n          j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;\n          flag = true;\n          jLen = bezierData.points.length;\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength;\n            if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length;\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k];\n              }\n              break;\n            } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\n              kLen = bezierData.points[j].point.length;\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\n              }\n              break;\n            }\n            if (j < jLen - 1) {\n              j += 1;\n            } else {\n              flag = false;\n            }\n          }\n          caching._lastPoint = j;\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\n          caching._lastKeyframeIndex = i;\n        }\n      } else {\n        var outX;\n        var outY;\n        var inX;\n        var inY;\n        var keyValue;\n        len = keyData.s.length;\n        endValue = nextKeyData.s || keyData.e;\n        if (this.sh && keyData.h !== 1) {\n          if (frameNum >= nextKeyTime) {\n            newValue[0] = endValue[0];\n            newValue[1] = endValue[1];\n            newValue[2] = endValue[2];\n          } else if (frameNum <= keyTime) {\n            newValue[0] = keyData.s[0];\n            newValue[1] = keyData.s[1];\n            newValue[2] = keyData.s[2];\n          } else {\n            var quatStart = createQuaternion(keyData.s);\n            var quatEnd = createQuaternion(endValue);\n            var time2 = (frameNum - keyTime) / (nextKeyTime - keyTime);\n            quaternionToEuler(newValue, slerp(quatStart, quatEnd, time2));\n          }\n        } else {\n          for (i = 0; i < len; i += 1) {\n            if (keyData.h !== 1) {\n              if (frameNum >= nextKeyTime) {\n                perc = 1;\n              } else if (frameNum < keyTime) {\n                perc = 0;\n              } else {\n                if (keyData.o.x.constructor === Array) {\n                  if (!keyframeMetadata.__fnct) {\n                    keyframeMetadata.__fnct = [];\n                  }\n                  if (!keyframeMetadata.__fnct[i]) {\n                    outX = keyData.o.x[i] === void 0 ? keyData.o.x[0] : keyData.o.x[i];\n                    outY = keyData.o.y[i] === void 0 ? keyData.o.y[0] : keyData.o.y[i];\n                    inX = keyData.i.x[i] === void 0 ? keyData.i.x[0] : keyData.i.x[i];\n                    inY = keyData.i.y[i] === void 0 ? keyData.i.y[0] : keyData.i.y[i];\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                    keyframeMetadata.__fnct[i] = fnc;\n                  } else {\n                    fnc = keyframeMetadata.__fnct[i];\n                  }\n                } else if (!keyframeMetadata.__fnct) {\n                  outX = keyData.o.x;\n                  outY = keyData.o.y;\n                  inX = keyData.i.x;\n                  inY = keyData.i.y;\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                  keyData.keyframeMetadata = fnc;\n                } else {\n                  fnc = keyframeMetadata.__fnct;\n                }\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n              }\n            }\n            endValue = nextKeyData.s || keyData.e;\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\n            if (this.propType === \"multidimensional\") {\n              newValue[i] = keyValue;\n            } else {\n              newValue = keyValue;\n            }\n          }\n        }\n      }\n      caching.lastIndex = iterationIndex;\n      return newValue;\n    }\n    function slerp(a, b, t) {\n      var out = [];\n      var ax = a[0];\n      var ay = a[1];\n      var az = a[2];\n      var aw = a[3];\n      var bx = b[0];\n      var by = b[1];\n      var bz = b[2];\n      var bw = b[3];\n      var omega;\n      var cosom;\n      var sinom;\n      var scale0;\n      var scale1;\n      cosom = ax * bx + ay * by + az * bz + aw * bw;\n      if (cosom < 0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n      }\n      if (1 - cosom > 1e-6) {\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n      } else {\n        scale0 = 1 - t;\n        scale1 = t;\n      }\n      out[0] = scale0 * ax + scale1 * bx;\n      out[1] = scale0 * ay + scale1 * by;\n      out[2] = scale0 * az + scale1 * bz;\n      out[3] = scale0 * aw + scale1 * bw;\n      return out;\n    }\n    function quaternionToEuler(out, quat) {\n      var qx = quat[0];\n      var qy = quat[1];\n      var qz = quat[2];\n      var qw = quat[3];\n      var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);\n      var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);\n      var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);\n      out[0] = heading / degToRads;\n      out[1] = attitude / degToRads;\n      out[2] = bank / degToRads;\n    }\n    function createQuaternion(values) {\n      var heading = values[0] * degToRads;\n      var attitude = values[1] * degToRads;\n      var bank = values[2] * degToRads;\n      var c1 = Math.cos(heading / 2);\n      var c2 = Math.cos(attitude / 2);\n      var c3 = Math.cos(bank / 2);\n      var s1 = Math.sin(heading / 2);\n      var s2 = Math.sin(attitude / 2);\n      var s3 = Math.sin(bank / 2);\n      var w = c1 * c2 * c3 - s1 * s2 * s3;\n      var x = s1 * s2 * c3 + c1 * c2 * s3;\n      var y = s1 * c2 * c3 + c1 * s2 * s3;\n      var z = c1 * s2 * c3 - s1 * c2 * s3;\n      return [x, y, z, w];\n    }\n    function getValueAtCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {\n        if (this._caching.lastFrame >= frameNum) {\n          this._caching._lastKeyframeIndex = -1;\n          this._caching.lastIndex = 0;\n        }\n        var renderResult = this.interpolateValue(frameNum, this._caching);\n        this.pv = renderResult;\n      }\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n    function setVValue(val2) {\n      var multipliedValue;\n      if (this.propType === \"unidimensional\") {\n        multipliedValue = val2 * this.mult;\n        if (mathAbs(this.v - multipliedValue) > 1e-5) {\n          this.v = multipliedValue;\n          this._mdf = true;\n        }\n      } else {\n        var i = 0;\n        var len = this.v.length;\n        while (i < len) {\n          multipliedValue = val2[i] * this.mult;\n          if (mathAbs(this.v[i] - multipliedValue) > 1e-5) {\n            this.v[i] = multipliedValue;\n            this._mdf = true;\n          }\n          i += 1;\n        }\n      }\n    }\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return;\n      }\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n      this.lock = true;\n      this._mdf = this._isFirstFrame;\n      var i;\n      var len = this.effectsSequence.length;\n      var finalValue = this.kf ? this.pv : this.data.k;\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n      this.setVValue(finalValue);\n      this._isFirstFrame = false;\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n    function ValueProperty(elem2, data2, mult, container) {\n      this.propType = \"unidimensional\";\n      this.mult = mult || 1;\n      this.data = data2;\n      this.v = mult ? data2.k * mult : data2.k;\n      this.pv = data2.k;\n      this._mdf = false;\n      this.elem = elem2;\n      this.container = container;\n      this.comp = elem2.comp;\n      this.k = false;\n      this.kf = false;\n      this.vel = 0;\n      this.effectsSequence = [];\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n    function MultiDimensionalProperty(elem2, data2, mult, container) {\n      this.propType = \"multidimensional\";\n      this.mult = mult || 1;\n      this.data = data2;\n      this._mdf = false;\n      this.elem = elem2;\n      this.container = container;\n      this.comp = elem2.comp;\n      this.k = false;\n      this.kf = false;\n      this.frameId = -1;\n      var i;\n      var len = data2.k.length;\n      this.v = createTypedArray(\"float32\", len);\n      this.pv = createTypedArray(\"float32\", len);\n      this.vel = createTypedArray(\"float32\", len);\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = data2.k[i] * this.mult;\n        this.pv[i] = data2.k[i];\n      }\n      this._isFirstFrame = true;\n      this.effectsSequence = [];\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n    function KeyframedValueProperty(elem2, data2, mult, container) {\n      this.propType = \"unidimensional\";\n      this.keyframes = data2.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem2.data.st;\n      this.frameId = -1;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: 0,\n        _lastKeyframeIndex: -1\n      };\n      this.k = true;\n      this.kf = true;\n      this.data = data2;\n      this.mult = mult || 1;\n      this.elem = elem2;\n      this.container = container;\n      this.comp = elem2.comp;\n      this.v = initFrame;\n      this.pv = initFrame;\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.addEffect = addEffect;\n    }\n    function KeyframedMultidimensionalProperty(elem2, data2, mult, container) {\n      this.propType = \"multidimensional\";\n      var i;\n      var len = data2.k.length;\n      var s;\n      var e;\n      var to;\n      var ti;\n      for (i = 0; i < len - 1; i += 1) {\n        if (data2.k[i].to && data2.k[i].s && data2.k[i + 1] && data2.k[i + 1].s) {\n          s = data2.k[i].s;\n          e = data2.k[i + 1].s;\n          to = data2.k[i].to;\n          ti = data2.k[i].ti;\n          if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {\n            data2.k[i].to = null;\n            data2.k[i].ti = null;\n          }\n          if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n            if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {\n              data2.k[i].to = null;\n              data2.k[i].ti = null;\n            }\n          }\n        }\n      }\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.data = data2;\n      this.keyframes = data2.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem2.data.st;\n      this.k = true;\n      this.kf = true;\n      this._isFirstFrame = true;\n      this.mult = mult || 1;\n      this.elem = elem2;\n      this.container = container;\n      this.comp = elem2.comp;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.frameId = -1;\n      var arrLen = data2.k[0].s.length;\n      this.v = createTypedArray(\"float32\", arrLen);\n      this.pv = createTypedArray(\"float32\", arrLen);\n      for (i = 0; i < arrLen; i += 1) {\n        this.v[i] = initFrame;\n        this.pv[i] = initFrame;\n      }\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: createTypedArray(\"float32\", arrLen)\n      };\n      this.addEffect = addEffect;\n    }\n    function getProp(elem2, data2, type, mult, container) {\n      var p;\n      if (!data2.k.length) {\n        p = new ValueProperty(elem2, data2, mult, container);\n      } else if (typeof data2.k[0] === \"number\") {\n        p = new MultiDimensionalProperty(elem2, data2, mult, container);\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem2, data2, mult, container);\n            break;\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem2, data2, mult, container);\n            break;\n        }\n      }\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p);\n      }\n      return p;\n    }\n    var ob2 = {\n      getProp\n    };\n    return ob2;\n  }();\n  function DynamicPropertyContainer() {}\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n        this.container.addDynamicProperty(this);\n        this._isAnimated = true;\n      }\n    },\n    iterateDynamicProperties: function () {\n      this._mdf = false;\n      var i;\n      var len = this.dynamicProperties.length;\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue();\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    },\n    initDynamicPropertyContainer: function (container) {\n      this.container = container;\n      this.dynamicProperties = [];\n      this._mdf = false;\n      this._isAnimated = false;\n    }\n  };\n  const pointPool = function () {\n    function create() {\n      return createTypedArray(\"float32\", 2);\n    }\n    return poolFactory(8, create);\n  }();\n  function ShapePath() {\n    this.c = false;\n    this._length = 0;\n    this._maxLength = 8;\n    this.v = createSizedArray(this._maxLength);\n    this.o = createSizedArray(this._maxLength);\n    this.i = createSizedArray(this._maxLength);\n  }\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed;\n    this.setLength(len);\n    var i = 0;\n    while (i < len) {\n      this.v[i] = pointPool.newElement();\n      this.o[i] = pointPool.newElement();\n      this.i[i] = pointPool.newElement();\n      i += 1;\n    }\n  };\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength();\n    }\n    this._length = len;\n  };\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength));\n    this.i = this.i.concat(createSizedArray(this._maxLength));\n    this.o = this.o.concat(createSizedArray(this._maxLength));\n    this._maxLength *= 2;\n  };\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr;\n    this._length = Math.max(this._length, pos + 1);\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength();\n    }\n    switch (type) {\n      case \"v\":\n        arr = this.v;\n        break;\n      case \"i\":\n        arr = this.i;\n        break;\n      case \"o\":\n        arr = this.o;\n        break;\n      default:\n        arr = [];\n        break;\n    }\n    if (!arr[pos] || arr[pos] && !replace) {\n      arr[pos] = pointPool.newElement();\n    }\n    arr[pos][0] = x;\n    arr[pos][1] = y;\n  };\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, \"v\", pos, replace);\n    this.setXYAt(oX, oY, \"o\", pos, replace);\n    this.setXYAt(iX, iY, \"i\", pos, replace);\n  };\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath();\n    newPath.setPathData(this.c, this._length);\n    var vertices = this.v;\n    var outPoints = this.o;\n    var inPoints = this.i;\n    var init = 0;\n    if (this.c) {\n      newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\n      init = 1;\n    }\n    var cnt = this._length - 1;\n    var len = this._length;\n    var i;\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\n      cnt -= 1;\n    }\n    return newPath;\n  };\n  const shapePool = function () {\n    function create() {\n      return new ShapePath();\n    }\n    function release(shapePath) {\n      var len = shapePath._length;\n      var i;\n      for (i = 0; i < len; i += 1) {\n        pointPool.release(shapePath.v[i]);\n        pointPool.release(shapePath.i[i]);\n        pointPool.release(shapePath.o[i]);\n        shapePath.v[i] = null;\n        shapePath.i[i] = null;\n        shapePath.o[i] = null;\n      }\n      shapePath._length = 0;\n      shapePath.c = false;\n    }\n    function clone(shape) {\n      var cloned = factory.newElement();\n      var i;\n      var len = shape._length === void 0 ? shape.v.length : shape._length;\n      cloned.setLength(len);\n      cloned.c = shape.c;\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\n      }\n      return cloned;\n    }\n    var factory = poolFactory(4, create, release);\n    factory.clone = clone;\n    return factory;\n  }();\n  function ShapeCollection() {\n    this._length = 0;\n    this._maxLength = 4;\n    this.shapes = createSizedArray(this._maxLength);\n  }\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength));\n      this._maxLength *= 2;\n    }\n    this.shapes[this._length] = shapeData;\n    this._length += 1;\n  };\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i;\n    for (i = 0; i < this._length; i += 1) {\n      shapePool.release(this.shapes[i]);\n    }\n    this._length = 0;\n  };\n  const shapeCollectionPool = function () {\n    var ob2 = {\n      newShapeCollection,\n      release\n    };\n    var _length = 0;\n    var _maxLength = 4;\n    var pool = createSizedArray(_maxLength);\n    function newShapeCollection() {\n      var shapeCollection;\n      if (_length) {\n        _length -= 1;\n        shapeCollection = pool[_length];\n      } else {\n        shapeCollection = new ShapeCollection();\n      }\n      return shapeCollection;\n    }\n    function release(shapeCollection) {\n      var i;\n      var len = shapeCollection._length;\n      for (i = 0; i < len; i += 1) {\n        shapePool.release(shapeCollection.shapes[i]);\n      }\n      shapeCollection._length = 0;\n      if (_length === _maxLength) {\n        pool = pooling.double(pool);\n        _maxLength *= 2;\n      }\n      pool[_length] = shapeCollection;\n      _length += 1;\n    }\n    return ob2;\n  }();\n  const ShapePropertyFactory = function () {\n    var initFrame = -999999;\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex;\n      var keyPropS;\n      var keyPropE;\n      var isHold;\n      var j;\n      var k;\n      var jLen;\n      var kLen;\n      var perc;\n      var vertexValue;\n      var kf = this.keyframes;\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0];\n        isHold = true;\n        iterationIndex = 0;\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\n        isHold = true;\n      } else {\n        var i = iterationIndex;\n        var len = kf.length - 1;\n        var flag = true;\n        var keyData;\n        var nextKeyData;\n        var keyframeMetadata;\n        while (flag) {\n          keyData = kf[i];\n          nextKeyData = kf[i + 1];\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break;\n          }\n          if (i < len - 1) {\n            i += 1;\n          } else {\n            flag = false;\n          }\n        }\n        keyframeMetadata = this.keyframesMetadata[i] || {};\n        isHold = keyData.h === 1;\n        iterationIndex = i;\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1;\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0;\n          } else {\n            var fnc;\n            if (keyframeMetadata.__fnct) {\n              fnc = keyframeMetadata.__fnct;\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\n              keyframeMetadata.__fnct = fnc;\n            }\n            perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));\n          }\n          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\n        }\n        keyPropS = keyData.s[0];\n      }\n      jLen = previousValue._length;\n      kLen = keyPropS.i[0].length;\n      caching.lastIndex = iterationIndex;\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\n          previousValue.i[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\n          previousValue.o[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\n          previousValue.v[j][k] = vertexValue;\n        }\n      }\n    }\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      var lastFrame = this._caching.lastFrame;\n      if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\n        this.interpolateShape(frameNum, this.pv, this._caching);\n      }\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n    function resetShape() {\n      this.paths = this.localShapeCollection;\n    }\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false;\n      }\n      var i;\n      var len = shape1._length;\n      for (i = 0; i < len; i += 1) {\n        if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shapePool.clone(newPath);\n        this.localShapeCollection.releaseShapes();\n        this.localShapeCollection.addShape(this.v);\n        this._mdf = true;\n        this.paths = this.localShapeCollection;\n      }\n    }\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n      if (!this.effectsSequence.length) {\n        this._mdf = false;\n        return;\n      }\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n      this.lock = true;\n      this._mdf = false;\n      var finalValue;\n      if (this.kf) {\n        finalValue = this.pv;\n      } else if (this.data.ks) {\n        finalValue = this.data.ks.k;\n      } else {\n        finalValue = this.data.pt.k;\n      }\n      var i;\n      var len = this.effectsSequence.length;\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n      this.setVValue(finalValue);\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n    function ShapeProperty(elem2, data2, type) {\n      this.propType = \"shape\";\n      this.comp = elem2.comp;\n      this.container = elem2;\n      this.elem = elem2;\n      this.data = data2;\n      this.k = false;\n      this.kf = false;\n      this._mdf = false;\n      var pathData = type === 3 ? data2.pt.k : data2.ks.k;\n      this.v = shapePool.clone(pathData);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.reset = resetShape;\n      this.effectsSequence = [];\n    }\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\n    ShapeProperty.prototype.getValue = processEffectsSequence;\n    ShapeProperty.prototype.setVValue = setVValue;\n    ShapeProperty.prototype.addEffect = addEffect;\n    function KeyframedShapeProperty(elem2, data2, type) {\n      this.propType = \"shape\";\n      this.comp = elem2.comp;\n      this.elem = elem2;\n      this.container = elem2;\n      this.offsetTime = elem2.data.st;\n      this.keyframes = type === 3 ? data2.pt.k : data2.ks.k;\n      this.keyframesMetadata = [];\n      this.k = true;\n      this.kf = true;\n      var len = this.keyframes[0].s[0].i.length;\n      this.v = shapePool.newElement();\n      this.v.setPathData(this.keyframes[0].s[0].c, len);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.lastFrame = initFrame;\n      this.reset = resetShape;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0\n      };\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\n    }\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\n    var EllShapeProperty = function () {\n      var cPoint = roundCorner;\n      function EllShapePropertyFactory(elem2, data2) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 4);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.paths = this.localShapeCollection;\n        this.localShapeCollection.addShape(this.v);\n        this.d = data2.d;\n        this.elem = elem2;\n        this.comp = elem2.comp;\n        this.frameId = -1;\n        this.initDynamicPropertyContainer(elem2);\n        this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem2, data2.s, 1, 0, this);\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertEllToPath();\n        }\n      }\n      EllShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n          if (this._mdf) {\n            this.convertEllToPath();\n          }\n        },\n        convertEllToPath: function () {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var s0 = this.s.v[0] / 2;\n          var s1 = this.s.v[1] / 2;\n          var _cw = this.d !== 3;\n          var _v = this.v;\n          _v.v[0][0] = p0;\n          _v.v[0][1] = p1 - s1;\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.v[1][1] = p1;\n          _v.v[2][0] = p0;\n          _v.v[2][1] = p1 + s1;\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.v[3][1] = p1;\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.i[0][1] = p1 - s1;\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.i[1][1] = p1 - s1 * cPoint;\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.i[2][1] = p1 + s1;\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.i[3][1] = p1 + s1 * cPoint;\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.o[0][1] = p1 - s1;\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.o[1][1] = p1 + s1 * cPoint;\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.o[2][1] = p1 + s1;\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.o[3][1] = p1 - s1 * cPoint;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);\n      return EllShapePropertyFactory;\n    }();\n    var StarShapeProperty = function () {\n      function StarShapePropertyFactory(elem2, data2) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 0);\n        this.elem = elem2;\n        this.comp = elem2.comp;\n        this.data = data2;\n        this.frameId = -1;\n        this.d = data2.d;\n        this.initDynamicPropertyContainer(elem2);\n        if (data2.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem2, data2.ir, 0, 0, this);\n          this.is = PropertyFactory.getProp(elem2, data2.is, 0, 0.01, this);\n          this.convertToPath = this.convertStarToPath;\n        } else {\n          this.convertToPath = this.convertPolygonToPath;\n        }\n        this.pt = PropertyFactory.getProp(elem2, data2.pt, 0, 0, this);\n        this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem2, data2.r, 0, degToRads, this);\n        this.or = PropertyFactory.getProp(elem2, data2.or, 0, 0, this);\n        this.os = PropertyFactory.getProp(elem2, data2.os, 0, 0.01, this);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertToPath();\n        }\n      }\n      StarShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n          if (this._mdf) {\n            this.convertToPath();\n          }\n        },\n        convertStarToPath: function () {\n          var numPts = Math.floor(this.pt.v) * 2;\n          var angle = Math.PI * 2 / numPts;\n          var longFlag = true;\n          var longRad = this.or.v;\n          var shortRad = this.ir.v;\n          var longRound = this.os.v;\n          var shortRound = this.is.v;\n          var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);\n          var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);\n          var i;\n          var rad;\n          var roundness;\n          var perimSegment;\n          var currentAng = -Math.PI / 2;\n          currentAng += this.r.v;\n          var dir = this.data.d === 3 ? -1 : 1;\n          this.v._length = 0;\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad;\n            roundness = longFlag ? longRound : shortRound;\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            longFlag = !longFlag;\n            currentAng += angle * dir;\n          }\n        },\n        convertPolygonToPath: function () {\n          var numPts = Math.floor(this.pt.v);\n          var angle = Math.PI * 2 / numPts;\n          var rad = this.or.v;\n          var roundness = this.os.v;\n          var perimSegment = 2 * Math.PI * rad / (numPts * 4);\n          var i;\n          var currentAng = -Math.PI * 0.5;\n          var dir = this.data.d === 3 ? -1 : 1;\n          currentAng += this.r.v;\n          this.v._length = 0;\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            currentAng += angle * dir;\n          }\n          this.paths.length = 0;\n          this.paths[0] = this.v;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);\n      return StarShapePropertyFactory;\n    }();\n    var RectShapeProperty = function () {\n      function RectShapePropertyFactory(elem2, data2) {\n        this.v = shapePool.newElement();\n        this.v.c = true;\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        this.elem = elem2;\n        this.comp = elem2.comp;\n        this.frameId = -1;\n        this.d = data2.d;\n        this.initDynamicPropertyContainer(elem2);\n        this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem2, data2.s, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem2, data2.r, 0, 0, this);\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertRectToPath();\n        }\n      }\n      RectShapePropertyFactory.prototype = {\n        convertRectToPath: function () {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var v0 = this.s.v[0] / 2;\n          var v1 = this.s.v[1] / 2;\n          var round = bmMin(v0, v1, this.r.v);\n          var cPoint = round * (1 - roundCorner);\n          this.v._length = 0;\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\n            }\n          }\n        },\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n          if (this._mdf) {\n            this.convertRectToPath();\n          }\n        },\n        reset: resetShape\n      };\n      extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);\n      return RectShapePropertyFactory;\n    }();\n    function getShapeProp(elem2, data2, type) {\n      var prop;\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data2.pt : data2.ks;\n        var keys = dataProp.k;\n        if (keys.length) {\n          prop = new KeyframedShapeProperty(elem2, data2, type);\n        } else {\n          prop = new ShapeProperty(elem2, data2, type);\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem2, data2);\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem2, data2);\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem2, data2);\n      }\n      if (prop.k) {\n        elem2.addDynamicProperty(prop);\n      }\n      return prop;\n    }\n    function getConstructorFunction() {\n      return ShapeProperty;\n    }\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty;\n    }\n    var ob2 = {};\n    ob2.getShapeProp = getShapeProp;\n    ob2.getConstructorFunction = getConstructorFunction;\n    ob2.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\n    return ob2;\n  }();\n  /*!\n  Transformation Matrix v2.0\n  (c) Epistemex 2014-2015\n  www.epistemex.com\n  By Ken Fyrstenberg\n  Contributions by leeoniya.\n  License: MIT, header required.\n  */\n  const Matrix = function () {\n    var _cos = Math.cos;\n    var _sin = Math.sin;\n    var _tan = Math.tan;\n    var _rnd = Math.round;\n    function reset() {\n      this.props[0] = 1;\n      this.props[1] = 0;\n      this.props[2] = 0;\n      this.props[3] = 0;\n      this.props[4] = 0;\n      this.props[5] = 1;\n      this.props[6] = 0;\n      this.props[7] = 0;\n      this.props[8] = 0;\n      this.props[9] = 0;\n      this.props[10] = 1;\n      this.props[11] = 0;\n      this.props[12] = 0;\n      this.props[13] = 0;\n      this.props[14] = 0;\n      this.props[15] = 1;\n      return this;\n    }\n    function rotate(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\n    }\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\n    }\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0);\n    }\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay));\n    }\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    function scale2(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1;\n      }\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this;\n      }\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\n    }\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a;\n      this.props[1] = b;\n      this.props[2] = c;\n      this.props[3] = d;\n      this.props[4] = e;\n      this.props[5] = f;\n      this.props[6] = g;\n      this.props[7] = h;\n      this.props[8] = i;\n      this.props[9] = j;\n      this.props[10] = k;\n      this.props[11] = l;\n      this.props[12] = m;\n      this.props[13] = n;\n      this.props[14] = o;\n      this.props[15] = p;\n      return this;\n    }\n    function translate(tx, ty, tz) {\n      tz = tz || 0;\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\n      }\n      return this;\n    }\n    function transform2(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props;\n      if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\n        _p[12] = _p[12] * a2 + _p[15] * m2;\n        _p[13] = _p[13] * f2 + _p[15] * n2;\n        _p[14] = _p[14] * k2 + _p[15] * o2;\n        _p[15] *= p2;\n        this._identityCalculated = false;\n        return this;\n      }\n      var a1 = _p[0];\n      var b1 = _p[1];\n      var c1 = _p[2];\n      var d1 = _p[3];\n      var e1 = _p[4];\n      var f1 = _p[5];\n      var g1 = _p[6];\n      var h1 = _p[7];\n      var i1 = _p[8];\n      var j1 = _p[9];\n      var k1 = _p[10];\n      var l1 = _p[11];\n      var m1 = _p[12];\n      var n1 = _p[13];\n      var o1 = _p[14];\n      var p1 = _p[15];\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\n      this._identityCalculated = false;\n      return this;\n    }\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\n        this._identityCalculated = true;\n      }\n      return this._identity;\n    }\n    function equals(matr) {\n      var i = 0;\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false;\n        }\n        i += 1;\n      }\n      return true;\n    }\n    function clone(matr) {\n      var i;\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i];\n      }\n      return matr;\n    }\n    function cloneFromProps(props) {\n      var i;\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i];\n      }\n    }\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n      };\n    }\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\n    }\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\n    }\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\n    }\n    function getInverseMatrix() {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\n      var a = this.props[5] / determinant;\n      var b = -this.props[1] / determinant;\n      var c = -this.props[4] / determinant;\n      var d = this.props[0] / determinant;\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\n      var inverseMatrix = new Matrix();\n      inverseMatrix.props[0] = a;\n      inverseMatrix.props[1] = b;\n      inverseMatrix.props[4] = c;\n      inverseMatrix.props[5] = d;\n      inverseMatrix.props[12] = e;\n      inverseMatrix.props[13] = f;\n      return inverseMatrix;\n    }\n    function inversePoint(pt) {\n      var inverseMatrix = this.getInverseMatrix();\n      return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);\n    }\n    function inversePoints(pts) {\n      var i;\n      var len = pts.length;\n      var retPts = [];\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i]);\n      }\n      return retPts;\n    }\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray(\"float32\", 6);\n      if (this.isIdentity()) {\n        arr[0] = pt1[0];\n        arr[1] = pt1[1];\n        arr[2] = pt2[0];\n        arr[3] = pt2[1];\n        arr[4] = pt3[0];\n        arr[5] = pt3[1];\n      } else {\n        var p0 = this.props[0];\n        var p1 = this.props[1];\n        var p4 = this.props[4];\n        var p5 = this.props[5];\n        var p12 = this.props[12];\n        var p13 = this.props[13];\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\n      }\n      return arr;\n    }\n    function applyToPointArray(x, y, z) {\n      var arr;\n      if (this.isIdentity()) {\n        arr = [x, y, z];\n      } else {\n        arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\n      }\n      return arr;\n    }\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + \",\" + y;\n      }\n      var _p = this.props;\n      return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + \",\" + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\n    }\n    function toCSS() {\n      var i = 0;\n      var props = this.props;\n      var cssValue = \"matrix3d(\";\n      var v = 1e4;\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v;\n        cssValue += i === 15 ? \")\" : \",\";\n        i += 1;\n      }\n      return cssValue;\n    }\n    function roundMatrixProperty(val2) {\n      var v = 1e4;\n      if (val2 < 1e-6 && val2 > 0 || val2 > -1e-6 && val2 < 0) {\n        return _rnd(val2 * v) / v;\n      }\n      return val2;\n    }\n    function to2dCSS() {\n      var props = this.props;\n      var _a = roundMatrixProperty(props[0]);\n      var _b = roundMatrixProperty(props[1]);\n      var _c = roundMatrixProperty(props[4]);\n      var _d = roundMatrixProperty(props[5]);\n      var _e = roundMatrixProperty(props[12]);\n      var _f = roundMatrixProperty(props[13]);\n      return \"matrix(\" + _a + \",\" + _b + \",\" + _c + \",\" + _d + \",\" + _e + \",\" + _f + \")\";\n    }\n    return function () {\n      this.reset = reset;\n      this.rotate = rotate;\n      this.rotateX = rotateX;\n      this.rotateY = rotateY;\n      this.rotateZ = rotateZ;\n      this.skew = skew;\n      this.skewFromAxis = skewFromAxis;\n      this.shear = shear;\n      this.scale = scale2;\n      this.setTransform = setTransform;\n      this.translate = translate;\n      this.transform = transform2;\n      this.applyToPoint = applyToPoint;\n      this.applyToX = applyToX;\n      this.applyToY = applyToY;\n      this.applyToZ = applyToZ;\n      this.applyToPointArray = applyToPointArray;\n      this.applyToTriplePoints = applyToTriplePoints;\n      this.applyToPointStringified = applyToPointStringified;\n      this.toCSS = toCSS;\n      this.to2dCSS = to2dCSS;\n      this.clone = clone;\n      this.cloneFromProps = cloneFromProps;\n      this.equals = equals;\n      this.inversePoints = inversePoints;\n      this.inversePoint = inversePoint;\n      this.getInverseMatrix = getInverseMatrix;\n      this._t = this.transform;\n      this.isIdentity = isIdentity;\n      this._identity = true;\n      this._identityCalculated = false;\n      this.props = createTypedArray(\"float32\", 16);\n      this.reset();\n    };\n  }();\n  const lottie = {};\n  function setLocation(href) {\n    setLocationHref(href);\n  }\n  function searchAnimations() {\n    {\n      animationManager.searchAnimations();\n    }\n  }\n  function setSubframeRendering(flag) {\n    setSubframeEnabled(flag);\n  }\n  function setPrefix(prefix) {\n    setIdPrefix(prefix);\n  }\n  function loadAnimation(params) {\n    return animationManager.loadAnimation(params);\n  }\n  function setQuality(value2) {\n    if (typeof value2 === \"string\") {\n      switch (value2) {\n        case \"high\":\n          setDefaultCurveSegments(200);\n          break;\n        default:\n        case \"medium\":\n          setDefaultCurveSegments(50);\n          break;\n        case \"low\":\n          setDefaultCurveSegments(10);\n          break;\n      }\n    } else if (!isNaN(value2) && value2 > 1) {\n      setDefaultCurveSegments(value2);\n    }\n  }\n  function inBrowser() {\n    return typeof navigator !== \"undefined\";\n  }\n  function installPlugin(type, plugin) {\n    if (type === \"expressions\") {\n      setExpressionsPlugin(plugin);\n    }\n  }\n  function getFactory(name2) {\n    switch (name2) {\n      case \"propertyFactory\":\n        return PropertyFactory;\n      case \"shapePropertyFactory\":\n        return ShapePropertyFactory;\n      case \"matrix\":\n        return Matrix;\n      default:\n        return null;\n    }\n  }\n  lottie.play = animationManager.play;\n  lottie.pause = animationManager.pause;\n  lottie.setLocationHref = setLocation;\n  lottie.togglePause = animationManager.togglePause;\n  lottie.setSpeed = animationManager.setSpeed;\n  lottie.setDirection = animationManager.setDirection;\n  lottie.stop = animationManager.stop;\n  lottie.searchAnimations = searchAnimations;\n  lottie.registerAnimation = animationManager.registerAnimation;\n  lottie.loadAnimation = loadAnimation;\n  lottie.setSubframeRendering = setSubframeRendering;\n  lottie.resize = animationManager.resize;\n  lottie.goToAndStop = animationManager.goToAndStop;\n  lottie.destroy = animationManager.destroy;\n  lottie.setQuality = setQuality;\n  lottie.inBrowser = inBrowser;\n  lottie.installPlugin = installPlugin;\n  lottie.freeze = animationManager.freeze;\n  lottie.unfreeze = animationManager.unfreeze;\n  lottie.setVolume = animationManager.setVolume;\n  lottie.mute = animationManager.mute;\n  lottie.unmute = animationManager.unmute;\n  lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;\n  lottie.useWebWorker = setWebWorker;\n  lottie.setIDPrefix = setPrefix;\n  lottie.__getFactory = getFactory;\n  lottie.version = \"[[BM_VERSION]]\";\n  function checkReady() {\n    if (document.readyState === \"complete\") {\n      clearInterval(readyStateCheckInterval);\n      searchAnimations();\n    }\n  }\n  function getQueryVariable(variable) {\n    var vars = queryString.split(\"&\");\n    for (var i = 0; i < vars.length; i += 1) {\n      var pair = vars[i].split(\"=\");\n      if (decodeURIComponent(pair[0]) == variable) {\n        return decodeURIComponent(pair[1]);\n      }\n    }\n    return null;\n  }\n  var queryString = \"\";\n  {\n    var scripts = document.getElementsByTagName(\"script\");\n    var index = scripts.length - 1;\n    var myScript = scripts[index] || {\n      src: \"\"\n    };\n    queryString = myScript.src ? myScript.src.replace(/^[^\\?]+\\??/, \"\") : \"\";\n    getQueryVariable(\"renderer\");\n  }\n  var readyStateCheckInterval = setInterval(checkReady, 100);\n  try {\n    if (!(typeof exports === \"object\" && typeof module !== \"undefined\") && !(typeof define === \"function\" && define.amd)) {\n      window.bodymovin = lottie;\n    }\n  } catch (err) {}\n  const ShapeModifiers = function () {\n    var ob2 = {};\n    var modifiers = {};\n    ob2.registerModifier = registerModifier;\n    ob2.getModifier = getModifier;\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory;\n      }\n    }\n    function getModifier(nm, elem2, data2) {\n      return new modifiers[nm](elem2, data2);\n    }\n    return ob2;\n  }();\n  function ShapeModifier() {}\n  ShapeModifier.prototype.initModifierProperties = function () {};\n  ShapeModifier.prototype.addShapeToModifier = function () {};\n  ShapeModifier.prototype.addShape = function (data2) {\n    if (!this.closed) {\n      data2.sh.container.addDynamicProperty(data2.sh);\n      var shapeData = {\n        shape: data2.sh,\n        data: data2,\n        localShapeCollection: shapeCollectionPool.newShapeCollection()\n      };\n      this.shapes.push(shapeData);\n      this.addShapeToModifier(shapeData);\n      if (this._isAnimated) {\n        data2.setAsAnimated();\n      }\n    }\n  };\n  ShapeModifier.prototype.init = function (elem2, data2) {\n    this.shapes = [];\n    this.elem = elem2;\n    this.initDynamicPropertyContainer(elem2);\n    this.initModifierProperties(elem2, data2);\n    this.frameId = initialDefaultFrame;\n    this.closed = false;\n    this.k = false;\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return;\n    }\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n  extendPrototype([DynamicPropertyContainer], ShapeModifier);\n  function TrimModifier() {}\n  extendPrototype([ShapeModifier], TrimModifier);\n  TrimModifier.prototype.initModifierProperties = function (elem2, data2) {\n    this.s = PropertyFactory.getProp(elem2, data2.s, 0, 0.01, this);\n    this.e = PropertyFactory.getProp(elem2, data2.e, 0, 0.01, this);\n    this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0, this);\n    this.sValue = 0;\n    this.eValue = 0;\n    this.getValue = this.processKeys;\n    this.m = data2.m;\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\n  };\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = [];\n  };\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = [];\n    if (e <= 1) {\n      segments.push({\n        s,\n        e\n      });\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1\n      });\n    } else {\n      segments.push({\n        s,\n        e: 1\n      });\n      segments.push({\n        s: 0,\n        e: e - 1\n      });\n    }\n    var shapeSegments = [];\n    var i;\n    var len = segments.length;\n    var segmentOb;\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i];\n      if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {\n        var shapeS;\n        var shapeE;\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0;\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\n        }\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1;\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;\n        }\n        shapeSegments.push([shapeS, shapeE]);\n      }\n    }\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0]);\n    }\n    return shapeSegments;\n  };\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i;\n    var len = pathsData.length;\n    for (i = 0; i < len; i += 1) {\n      segmentsLengthPool.release(pathsData[i]);\n    }\n    pathsData.length = 0;\n    return pathsData;\n  };\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s;\n    var e;\n    if (this._mdf || _isFirstFrame) {\n      var o = this.o.v % 360 / 360;\n      if (o < 0) {\n        o += 1;\n      }\n      if (this.s.v > 1) {\n        s = 1 + o;\n      } else if (this.s.v < 0) {\n        s = 0 + o;\n      } else {\n        s = this.s.v + o;\n      }\n      if (this.e.v > 1) {\n        e = 1 + o;\n      } else if (this.e.v < 0) {\n        e = 0 + o;\n      } else {\n        e = this.e.v + o;\n      }\n      if (s > e) {\n        var _s = s;\n        s = e;\n        e = _s;\n      }\n      s = Math.round(s * 1e4) * 1e-4;\n      e = Math.round(e * 1e4) * 1e-4;\n      this.sValue = s;\n      this.eValue = e;\n    } else {\n      s = this.sValue;\n      e = this.eValue;\n    }\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var pathsData;\n    var pathData;\n    var totalShapeLength;\n    var totalModifierLength = 0;\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes();\n        this.shapes[i].shape._mdf = true;\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\n        if (this._mdf) {\n          this.shapes[i].pathsData.length = 0;\n        }\n      }\n    } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {\n      var segments = [];\n      var shapeData;\n      var localShapeCollection;\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection;\n        } else {\n          shapePaths = shapeData.shape.paths;\n          jLen = shapePaths._length;\n          totalShapeLength = 0;\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength;\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData);\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\n              pathsData.push(pathData);\n              totalShapeLength += pathData.totalLength;\n            }\n            shapeData.totalShapeLength = totalShapeLength;\n            shapeData.pathsData = pathsData;\n          }\n          totalModifierLength += totalShapeLength;\n          shapeData.shape._mdf = true;\n        }\n      }\n      var shapeS = s;\n      var shapeE = e;\n      var addedLength = 0;\n      var edges;\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i];\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection;\n          localShapeCollection.releaseShapes();\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\n            addedLength += shapeData.totalShapeLength;\n          } else {\n            edges = [[shapeS, shapeE]];\n          }\n          jLen = edges.length;\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0];\n            shapeE = edges[j][1];\n            segments.length = 0;\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE\n              });\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength\n              });\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            }\n            var newShapesData = this.addShapes(shapeData, segments[0]);\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop();\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape);\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1]);\n                }\n              }\n              this.addPaths(newShapesData, localShapeCollection);\n            }\n          }\n          shapeData.shape.paths = localShapeCollection;\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].pathsData.length = 0;\n        this.shapes[i].shape._mdf = true;\n      }\n    }\n  };\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i;\n    var len = newPaths.length;\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i]);\n    }\n  };\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], \"o\", pos);\n    shapePath.setXYAt(pt3[0], pt3[1], \"i\", pos + 1);\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], \"v\", pos);\n    }\n    shapePath.setXYAt(pt4[0], pt4[1], \"v\", pos + 1);\n  };\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], \"o\", pos);\n    shapePath.setXYAt(points[2], points[6], \"i\", pos + 1);\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], \"v\", pos);\n    }\n    shapePath.setXYAt(points[3], points[7], \"v\", pos + 1);\n  };\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData;\n    var shapePaths = shapeData.shape.paths.shapes;\n    var i;\n    var len = shapeData.shape.paths._length;\n    var j;\n    var jLen;\n    var addedLength = 0;\n    var currentLengthData;\n    var segmentCount;\n    var lengths;\n    var segment;\n    var shapes = [];\n    var initPos;\n    var newShape = true;\n    if (!shapePath) {\n      shapePath = shapePool.newElement();\n      segmentCount = 0;\n      initPos = 0;\n    } else {\n      segmentCount = shapePath._length;\n      initPos = shapePath._length;\n    }\n    shapes.push(shapePath);\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths;\n      shapePath.c = shapePaths[i].c;\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1];\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength;\n          shapePath.c = false;\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false;\n          break;\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\n            newShape = false;\n            shapePath.c = false;\n          }\n          addedLength += currentLengthData.addedLength;\n          segmentCount += 1;\n        }\n      }\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1];\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength;\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\n            newShape = false;\n            shapePath.c = false;\n          }\n        } else {\n          shapePath.c = false;\n        }\n        addedLength += currentLengthData.addedLength;\n        segmentCount += 1;\n      }\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], \"i\", initPos);\n        shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], \"o\", shapePath._length - 1);\n      }\n      if (addedLength > shapeSegment.e) {\n        break;\n      }\n      if (i < len - 1) {\n        shapePath = shapePool.newElement();\n        newShape = true;\n        shapes.push(shapePath);\n        segmentCount = 0;\n      }\n    }\n    return shapes;\n  };\n  function PuckerAndBloatModifier() {}\n  extendPrototype([ShapeModifier], PuckerAndBloatModifier);\n  PuckerAndBloatModifier.prototype.initModifierProperties = function (elem2, data2) {\n    this.getValue = this.processKeys;\n    this.amount = PropertyFactory.getProp(elem2, data2.a, 0, null, this);\n    this._isAnimated = !!this.amount.effectsSequence.length;\n  };\n  PuckerAndBloatModifier.prototype.processPath = function (path, amount) {\n    var percent = amount / 100;\n    var centerPoint = [0, 0];\n    var pathLength = path._length;\n    var i = 0;\n    for (i = 0; i < pathLength; i += 1) {\n      centerPoint[0] += path.v[i][0];\n      centerPoint[1] += path.v[i][1];\n    }\n    centerPoint[0] /= pathLength;\n    centerPoint[1] /= pathLength;\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n    for (i = 0; i < pathLength; i += 1) {\n      vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;\n      vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;\n      oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;\n      oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;\n      iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;\n      iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;\n      clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);\n    }\n    return clonedPath;\n  };\n  PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var amount = this.amount.v;\n    if (amount !== 0) {\n      var shapeData;\n      var localShapeCollection;\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amount));\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n  const TransformPropertyFactory = function () {\n    var defaultVector = [0, 0];\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf;\n      this.iterateDynamicProperties();\n      this._mdf = this._mdf || _mdf;\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n      }\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n      }\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v);\n      }\n      if (this.r) {\n        mat.rotate(-this.r.v);\n      } else {\n        mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n      }\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v);\n        } else {\n          mat.translate(this.px.v, this.py.v, 0);\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n      }\n    }\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n      if (this._isDirty) {\n        this.precalculateMatrix();\n        this._isDirty = false;\n      }\n      this.iterateDynamicProperties();\n      if (this._mdf || forceRender) {\n        var frameRate;\n        this.v.cloneFromProps(this.pre.props);\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        }\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        }\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v);\n        }\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v);\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        }\n        if (this.autoOriented) {\n          var v1;\n          var v2;\n          frameRate = this.elem.globalData.frameRate;\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\n            } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);\n            } else {\n              v1 = this.p.pv;\n              v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\n            }\n          } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\n            v1 = [];\n            v2 = [];\n            var px = this.px;\n            var py = this.py;\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);\n            } else {\n              v1 = [px.pv, py.pv];\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);\n            }\n          } else {\n            v2 = defaultVector;\n            v1 = v2;\n          }\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\n        }\n        if (this.data.p && this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v);\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0);\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n        }\n      }\n      this.frameId = this.elem.globalData.frameId;\n    }\n    function precalculateMatrix() {\n      if (!this.a.k) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        this.appliedTransformations = 1;\n      } else {\n        return;\n      }\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        this.appliedTransformations = 2;\n      } else {\n        return;\n      }\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v);\n          this.appliedTransformations = 3;\n        } else {\n          return;\n        }\n      }\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v);\n          this.appliedTransformations = 4;\n        }\n      } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\n        this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        this.appliedTransformations = 4;\n      }\n    }\n    function autoOrient() {}\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop);\n      this.elem.addDynamicProperty(prop);\n      this._isDirty = true;\n    }\n    function TransformProperty(elem2, data2, container) {\n      this.elem = elem2;\n      this.frameId = -1;\n      this.propType = \"transform\";\n      this.data = data2;\n      this.v = new Matrix();\n      this.pre = new Matrix();\n      this.appliedTransformations = 0;\n      this.initDynamicPropertyContainer(container || elem2);\n      if (data2.p && data2.p.s) {\n        this.px = PropertyFactory.getProp(elem2, data2.p.x, 0, 0, this);\n        this.py = PropertyFactory.getProp(elem2, data2.p.y, 0, 0, this);\n        if (data2.p.z) {\n          this.pz = PropertyFactory.getProp(elem2, data2.p.z, 0, 0, this);\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem2, data2.p || {\n          k: [0, 0, 0]\n        }, 1, 0, this);\n      }\n      if (data2.rx) {\n        this.rx = PropertyFactory.getProp(elem2, data2.rx, 0, degToRads, this);\n        this.ry = PropertyFactory.getProp(elem2, data2.ry, 0, degToRads, this);\n        this.rz = PropertyFactory.getProp(elem2, data2.rz, 0, degToRads, this);\n        if (data2.or.k[0].ti) {\n          var i;\n          var len = data2.or.k.length;\n          for (i = 0; i < len; i += 1) {\n            data2.or.k[i].to = null;\n            data2.or.k[i].ti = null;\n          }\n        }\n        this.or = PropertyFactory.getProp(elem2, data2.or, 1, degToRads, this);\n        this.or.sh = true;\n      } else {\n        this.r = PropertyFactory.getProp(elem2, data2.r || {\n          k: 0\n        }, 0, degToRads, this);\n      }\n      if (data2.sk) {\n        this.sk = PropertyFactory.getProp(elem2, data2.sk, 0, degToRads, this);\n        this.sa = PropertyFactory.getProp(elem2, data2.sa, 0, degToRads, this);\n      }\n      this.a = PropertyFactory.getProp(elem2, data2.a || {\n        k: [0, 0, 0]\n      }, 1, 0, this);\n      this.s = PropertyFactory.getProp(elem2, data2.s || {\n        k: [100, 100, 100]\n      }, 1, 0.01, this);\n      if (data2.o) {\n        this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, elem2);\n      } else {\n        this.o = {\n          _mdf: false,\n          v: 1\n        };\n      }\n      this._isDirty = true;\n      if (!this.dynamicProperties.length) {\n        this.getValue(true);\n      }\n    }\n    TransformProperty.prototype = {\n      applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix,\n      autoOrient\n    };\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\n    function getTransformProperty(elem2, data2, container) {\n      return new TransformProperty(elem2, data2, container);\n    }\n    return {\n      getTransformProperty\n    };\n  }();\n  function RepeaterModifier() {}\n  extendPrototype([ShapeModifier], RepeaterModifier);\n  RepeaterModifier.prototype.initModifierProperties = function (elem2, data2) {\n    this.getValue = this.processKeys;\n    this.c = PropertyFactory.getProp(elem2, data2.c, 0, null, this);\n    this.o = PropertyFactory.getProp(elem2, data2.o, 0, null, this);\n    this.tr = TransformPropertyFactory.getTransformProperty(elem2, data2.tr, this);\n    this.so = PropertyFactory.getProp(elem2, data2.tr.so, 0, 0.01, this);\n    this.eo = PropertyFactory.getProp(elem2, data2.tr.eo, 0, 0.01, this);\n    this.data = data2;\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n    this._isAnimated = !!this.dynamicProperties.length;\n    this.pMatrix = new Matrix();\n    this.rMatrix = new Matrix();\n    this.sMatrix = new Matrix();\n    this.tMatrix = new Matrix();\n    this.matrix = new Matrix();\n  };\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform2, perc, inv) {\n    var dir = inv ? -1 : 1;\n    var scaleX = transform2.s.v[0] + (1 - transform2.s.v[0]) * (1 - perc);\n    var scaleY = transform2.s.v[1] + (1 - transform2.s.v[1]) * (1 - perc);\n    pMatrix.translate(transform2.p.v[0] * dir * perc, transform2.p.v[1] * dir * perc, transform2.p.v[2]);\n    rMatrix.translate(-transform2.a.v[0], -transform2.a.v[1], transform2.a.v[2]);\n    rMatrix.rotate(-transform2.r.v * dir * perc);\n    rMatrix.translate(transform2.a.v[0], transform2.a.v[1], transform2.a.v[2]);\n    sMatrix.translate(-transform2.a.v[0], -transform2.a.v[1], transform2.a.v[2]);\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\n    sMatrix.translate(transform2.a.v[0], transform2.a.v[1], transform2.a.v[2]);\n  };\n  RepeaterModifier.prototype.init = function (elem2, arr, pos, elemsData) {\n    this.elem = elem2;\n    this.arr = arr;\n    this.pos = pos;\n    this.elemsData = elemsData;\n    this._currentCopies = 0;\n    this._elements = [];\n    this._groups = [];\n    this.frameId = -1;\n    this.initDynamicPropertyContainer(elem2);\n    this.initModifierProperties(elem2, arr[pos]);\n    while (pos > 0) {\n      pos -= 1;\n      this._elements.unshift(arr[pos]);\n    }\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i;\n    var len = elements.length;\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false;\n      if (elements[i].ty === \"gr\") {\n        this.resetElements(elements[i].it);\n      }\n    }\n  };\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var newElements = JSON.parse(JSON.stringify(elements));\n    this.resetElements(newElements);\n    return newElements;\n  };\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i;\n    var len = elements.length;\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag;\n      if (elements[i].ty === \"gr\") {\n        this.changeGroupRender(elements[i].it, renderFlag);\n      }\n    }\n  };\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items;\n    var itemsTransform;\n    var i;\n    var dir;\n    var cont;\n    var hasReloaded = false;\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v);\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: \"gr\"\n          };\n          group.it.push({\n            a: {\n              a: 0,\n              ix: 1,\n              k: [0, 0]\n            },\n            nm: \"Transform\",\n            o: {\n              a: 0,\n              ix: 7,\n              k: 100\n            },\n            p: {\n              a: 0,\n              ix: 2,\n              k: [0, 0]\n            },\n            r: {\n              a: 1,\n              ix: 6,\n              k: [{\n                s: 0,\n                e: 0,\n                t: 0\n              }, {\n                s: 0,\n                e: 0,\n                t: 1\n              }]\n            },\n            s: {\n              a: 0,\n              ix: 3,\n              k: [100, 100]\n            },\n            sa: {\n              a: 0,\n              ix: 5,\n              k: 0\n            },\n            sk: {\n              a: 0,\n              ix: 4,\n              k: 0\n            },\n            ty: \"tr\"\n          });\n          this.arr.splice(0, 0, group);\n          this._groups.splice(0, 0, group);\n          this._currentCopies += 1;\n        }\n        this.elem.reloadShapes();\n        hasReloaded = true;\n      }\n      cont = 0;\n      var renderFlag;\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies;\n        this._groups[i]._render = renderFlag;\n        this.changeGroupRender(this._groups[i].it, renderFlag);\n        if (!renderFlag) {\n          var elems = this.elemsData[i].it;\n          var transformData = elems[elems.length - 1];\n          if (transformData.transform.op.v !== 0) {\n            transformData.transform.op._mdf = true;\n            transformData.transform.op.v = 0;\n          } else {\n            transformData.transform.op._mdf = false;\n          }\n        }\n        cont += 1;\n      }\n      this._currentCopies = copies;\n      var offset = this.o.v;\n      var offsetModulo = offset % 1;\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n      var pProps = this.pMatrix.props;\n      var rProps = this.rMatrix.props;\n      var sProps = this.sMatrix.props;\n      this.pMatrix.reset();\n      this.rMatrix.reset();\n      this.sMatrix.reset();\n      this.tMatrix.reset();\n      this.matrix.reset();\n      var iteration = 0;\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          iteration += 1;\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\n          iteration += offsetModulo;\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\n          iteration -= 1;\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\n          iteration -= offsetModulo;\n        }\n      }\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1;\n      dir = this.data.m === 1 ? 1 : -1;\n      cont = this._currentCopies;\n      var j;\n      var jLen;\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        jLen = itemsTransform.length;\n        items[items.length - 1].transform.mProps._mdf = true;\n        items[items.length - 1].transform.op._mdf = true;\n        items[items.length - 1].transform.op.v = this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\n        if (iteration !== 0) {\n          if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          }\n          this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\n          this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\n          this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n          this.matrix.reset();\n        } else {\n          this.matrix.reset();\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n        }\n        iteration += 1;\n        cont -= 1;\n        i += dir;\n      }\n    } else {\n      cont = this._currentCopies;\n      i = 0;\n      dir = 1;\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        items[items.length - 1].transform.mProps._mdf = false;\n        items[items.length - 1].transform.op._mdf = false;\n        cont -= 1;\n        i += dir;\n      }\n    }\n    return hasReloaded;\n  };\n  RepeaterModifier.prototype.addShape = function () {};\n  function RoundCornersModifier() {}\n  extendPrototype([ShapeModifier], RoundCornersModifier);\n  RoundCornersModifier.prototype.initModifierProperties = function (elem2, data2) {\n    this.getValue = this.processKeys;\n    this.rd = PropertyFactory.getProp(elem2, data2.r, 0, null, this);\n    this._isAnimated = !!this.rd.effectsSequence.length;\n  };\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var i;\n    var len = path._length;\n    var currentV;\n    var currentI;\n    var currentO;\n    var closerV;\n    var distance;\n    var newPosPerc;\n    var index2 = 0;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i];\n      currentO = path.o[i];\n      currentI = path.i[i];\n      if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index2);\n          index2 += 1;\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1];\n          } else {\n            closerV = path.v[i - 1];\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = iX;\n          iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\n          vY = iY;\n          oX = vX - (vX - currentV[0]) * roundCorner;\n          oY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);\n          index2 += 1;\n          if (i === len - 1) {\n            closerV = path.v[0];\n          } else {\n            closerV = path.v[i + 1];\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = oX;\n          oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\n          vY = oY;\n          iX = vX - (vX - currentV[0]) * roundCorner;\n          iY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);\n          index2 += 1;\n        }\n      } else {\n        clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index2);\n        index2 += 1;\n      }\n    }\n    return clonedPath;\n  };\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var rd = this.rd.v;\n    if (rd !== 0) {\n      var shapeData;\n      var localShapeCollection;\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n  function getFontProperties(fontData) {\n    var styles = fontData.fStyle ? fontData.fStyle.split(\" \") : [];\n    var fWeight = \"normal\";\n    var fStyle = \"normal\";\n    var len = styles.length;\n    var styleName;\n    for (var i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase();\n      switch (styleName) {\n        case \"italic\":\n          fStyle = \"italic\";\n          break;\n        case \"bold\":\n          fWeight = \"700\";\n          break;\n        case \"black\":\n          fWeight = \"900\";\n          break;\n        case \"medium\":\n          fWeight = \"500\";\n          break;\n        case \"regular\":\n        case \"normal\":\n          fWeight = \"400\";\n          break;\n        case \"light\":\n        case \"thin\":\n          fWeight = \"200\";\n          break;\n      }\n    }\n    return {\n      style: fStyle,\n      weight: fontData.fWeight || fWeight\n    };\n  }\n  const FontManager = function () {\n    var maxWaitingTime = 5e3;\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: [],\n      data: {\n        shapes: []\n      }\n    };\n    var combinedCharacters = [];\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\n    var surrogateModifiers = [\"d83cdffb\", \"d83cdffc\", \"d83cdffd\", \"d83cdffe\", \"d83cdfff\"];\n    var zeroWidthJoiner = [65039, 8205];\n    function trimFontOptions(font) {\n      var familyArray = font.split(\",\");\n      var i;\n      var len = familyArray.length;\n      var enabledFamilies = [];\n      for (i = 0; i < len; i += 1) {\n        if (familyArray[i] !== \"sans-serif\" && familyArray[i] !== \"monospace\") {\n          enabledFamilies.push(familyArray[i]);\n        }\n      }\n      return enabledFamilies.join(\",\");\n    }\n    function setUpNode(font, family) {\n      var parentNode = createTag(\"span\");\n      parentNode.setAttribute(\"aria-hidden\", true);\n      parentNode.style.fontFamily = family;\n      var node = createTag(\"span\");\n      node.innerText = \"giItT1WQy@!-/#\";\n      parentNode.style.position = \"absolute\";\n      parentNode.style.left = \"-10000px\";\n      parentNode.style.top = \"-10000px\";\n      parentNode.style.fontSize = \"300px\";\n      parentNode.style.fontVariant = \"normal\";\n      parentNode.style.fontStyle = \"normal\";\n      parentNode.style.fontWeight = \"normal\";\n      parentNode.style.letterSpacing = \"0\";\n      parentNode.appendChild(node);\n      document.body.appendChild(parentNode);\n      var width2 = node.offsetWidth;\n      node.style.fontFamily = trimFontOptions(font) + \", \" + family;\n      return {\n        node,\n        w: width2,\n        parent: parentNode\n      };\n    }\n    function checkLoadedFonts() {\n      var i;\n      var len = this.fonts.length;\n      var node;\n      var w;\n      var loadedCount = len;\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1;\n        } else if (this.fonts[i].fOrigin === \"n\" || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true;\n        } else {\n          node = this.fonts[i].monoCase.node;\n          w = this.fonts[i].monoCase.w;\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1;\n            this.fonts[i].loaded = true;\n          } else {\n            node = this.fonts[i].sansCase.node;\n            w = this.fonts[i].sansCase.w;\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1;\n              this.fonts[i].loaded = true;\n            }\n          }\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\n          }\n        }\n      }\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFontsBinded, 20);\n      } else {\n        setTimeout(this.setIsLoadedBinded, 10);\n      }\n    }\n    function createHelper(fontData, def) {\n      var engine = document.body && def ? \"svg\" : \"canvas\";\n      var helper;\n      var fontProps = getFontProperties(fontData);\n      if (engine === \"svg\") {\n        var tHelper = createNS(\"text\");\n        tHelper.style.fontSize = \"100px\";\n        tHelper.setAttribute(\"font-family\", fontData.fFamily);\n        tHelper.setAttribute(\"font-style\", fontProps.style);\n        tHelper.setAttribute(\"font-weight\", fontProps.weight);\n        tHelper.textContent = \"1\";\n        if (fontData.fClass) {\n          tHelper.style.fontFamily = \"inherit\";\n          tHelper.setAttribute(\"class\", fontData.fClass);\n        } else {\n          tHelper.style.fontFamily = fontData.fFamily;\n        }\n        def.appendChild(tHelper);\n        helper = tHelper;\n      } else {\n        var tCanvasHelper = new OffscreenCanvas(500, 500).getContext(\"2d\");\n        tCanvasHelper.font = fontProps.style + \" \" + fontProps.weight + \" 100px \" + fontData.fFamily;\n        helper = tCanvasHelper;\n      }\n      function measure(text2) {\n        if (engine === \"svg\") {\n          helper.textContent = text2;\n          return helper.getComputedTextLength();\n        }\n        return helper.measureText(text2).width;\n      }\n      return {\n        measureText: measure\n      };\n    }\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true;\n        return;\n      }\n      if (this.chars) {\n        this.isLoaded = true;\n        this.fonts = fontData.list;\n        return;\n      }\n      if (!document.body) {\n        this.isLoaded = true;\n        fontData.list.forEach(data2 => {\n          data2.helper = createHelper(data2);\n          data2.cache = {};\n        });\n        this.fonts = fontData.list;\n        return;\n      }\n      var fontArr = fontData.list;\n      var i;\n      var len = fontArr.length;\n      var _pendingFonts = len;\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true;\n        var loadedSelector;\n        var j;\n        fontArr[i].loaded = false;\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, \"monospace\");\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, \"sans-serif\");\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true;\n          _pendingFonts -= 1;\n        } else if (fontArr[i].fOrigin === \"p\" || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + fontArr[i].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + fontArr[i].fFamily + '\"]');\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false;\n          }\n          if (shouldLoadFont) {\n            var s = createTag(\"style\");\n            s.setAttribute(\"f-forigin\", fontArr[i].fOrigin);\n            s.setAttribute(\"f-origin\", fontArr[i].origin);\n            s.setAttribute(\"f-family\", fontArr[i].fFamily);\n            s.type = \"text/css\";\n            s.innerText = \"@font-face {font-family: \" + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\n            defs.appendChild(s);\n          }\n        } else if (fontArr[i].fOrigin === \"g\" || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              shouldLoadFont = false;\n            }\n          }\n          if (shouldLoadFont) {\n            var l = createTag(\"link\");\n            l.setAttribute(\"f-forigin\", fontArr[i].fOrigin);\n            l.setAttribute(\"f-origin\", fontArr[i].origin);\n            l.type = \"text/css\";\n            l.rel = \"stylesheet\";\n            l.href = fontArr[i].fPath;\n            document.body.appendChild(l);\n          }\n        } else if (fontArr[i].fOrigin === \"t\" || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              shouldLoadFont = false;\n            }\n          }\n          if (shouldLoadFont) {\n            var sc = createTag(\"link\");\n            sc.setAttribute(\"f-forigin\", fontArr[i].fOrigin);\n            sc.setAttribute(\"f-origin\", fontArr[i].origin);\n            sc.setAttribute(\"rel\", \"stylesheet\");\n            sc.setAttribute(\"href\", fontArr[i].fPath);\n            defs.appendChild(sc);\n          }\n        }\n        fontArr[i].helper = createHelper(fontArr[i], defs);\n        fontArr[i].cache = {};\n        this.fonts.push(fontArr[i]);\n      }\n      if (_pendingFonts === 0) {\n        this.isLoaded = true;\n      } else {\n        setTimeout(this.checkLoadedFonts.bind(this), 100);\n      }\n    }\n    function addChars(chars) {\n      if (!chars) {\n        return;\n      }\n      if (!this.chars) {\n        this.chars = [];\n      }\n      var i;\n      var len = chars.length;\n      var j;\n      var jLen = this.chars.length;\n      var found;\n      for (i = 0; i < len; i += 1) {\n        j = 0;\n        found = false;\n        while (j < jLen) {\n          if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\n            found = true;\n          }\n          j += 1;\n        }\n        if (!found) {\n          this.chars.push(chars[i]);\n          jLen += 1;\n        }\n      }\n    }\n    function getCharData(char, style, font) {\n      var i = 0;\n      var len = this.chars.length;\n      while (i < len) {\n        if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i];\n        }\n        i += 1;\n      }\n      if ((typeof char === \"string\" && char.charCodeAt(0) !== 13 || !char) && console && console.warn &&\n      // eslint-disable-line no-console\n      !this._warned) {\n        this._warned = true;\n        console.warn(\"Missing character from exported characters list: \", char, style, font);\n      }\n      return emptyChar;\n    }\n    function measureText(char, fontName, size) {\n      var fontData = this.getFontByName(fontName);\n      var index2 = char.charCodeAt(0);\n      if (!fontData.cache[index2 + 1]) {\n        var tHelper = fontData.helper;\n        if (char === \" \") {\n          var doubleSize = tHelper.measureText(\"|\" + char + \"|\");\n          var singleSize = tHelper.measureText(\"||\");\n          fontData.cache[index2 + 1] = (doubleSize - singleSize) / 100;\n        } else {\n          fontData.cache[index2 + 1] = tHelper.measureText(char) / 100;\n        }\n      }\n      return fontData.cache[index2 + 1] * size;\n    }\n    function getFontByName(name2) {\n      var i = 0;\n      var len = this.fonts.length;\n      while (i < len) {\n        if (this.fonts[i].fName === name2) {\n          return this.fonts[i];\n        }\n        i += 1;\n      }\n      return this.fonts[0];\n    }\n    function isModifier(firstCharCode, secondCharCode) {\n      var sum2 = firstCharCode.toString(16) + secondCharCode.toString(16);\n      return surrogateModifiers.indexOf(sum2) !== -1;\n    }\n    function isZeroWidthJoiner(firstCharCode, secondCharCode) {\n      if (!secondCharCode) {\n        return firstCharCode === zeroWidthJoiner[1];\n      }\n      return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1];\n    }\n    function isCombinedCharacter(char) {\n      return combinedCharacters.indexOf(char) !== -1;\n    }\n    function setIsLoaded() {\n      this.isLoaded = true;\n    }\n    var Font = function () {\n      this.fonts = [];\n      this.chars = null;\n      this.typekitLoaded = 0;\n      this.isLoaded = false;\n      this._warned = false;\n      this.initTime = Date.now();\n      this.setIsLoadedBinded = this.setIsLoaded.bind(this);\n      this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);\n    };\n    Font.isModifier = isModifier;\n    Font.isZeroWidthJoiner = isZeroWidthJoiner;\n    Font.isCombinedCharacter = isCombinedCharacter;\n    var fontPrototype = {\n      addChars,\n      addFonts,\n      getCharData,\n      getFontByName,\n      measureText,\n      checkLoadedFonts,\n      setIsLoaded\n    };\n    Font.prototype = fontPrototype;\n    return Font;\n  }();\n  function RenderableElement() {}\n  RenderableElement.prototype = {\n    initRenderable: function () {\n      this.isInRange = false;\n      this.hidden = false;\n      this.isTransparent = false;\n      this.renderableComponents = [];\n    },\n    addRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component);\n      }\n    },\n    removeRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\n      }\n    },\n    prepareRenderableFrame: function (num) {\n      this.checkLayerLimits(num);\n    },\n    checkTransparency: function () {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true;\n          this.hide();\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false;\n        this.show();\n      }\n    },\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     *\n     */\n    checkLayerLimits: function (num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true;\n          this._mdf = true;\n          this.isInRange = true;\n          this.show();\n        }\n      } else if (this.isInRange !== false) {\n        this.globalData._mdf = true;\n        this.isInRange = false;\n        this.hide();\n      }\n    },\n    renderRenderable: function () {\n      var i;\n      var len = this.renderableComponents.length;\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame);\n      }\n    },\n    sourceRectAtTime: function () {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100\n      };\n    },\n    getLayerSize: function () {\n      if (this.data.ty === 5) {\n        return {\n          w: this.data.textData.width,\n          h: this.data.textData.height\n        };\n      }\n      return {\n        w: this.data.width,\n        h: this.data.height\n      };\n    }\n  };\n  const MaskManagerInterface = function () {\n    function MaskInterface(mask2, data2) {\n      this._mask = mask2;\n      this._data = data2;\n    }\n    Object.defineProperty(MaskInterface.prototype, \"maskPath\", {\n      get: function () {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue();\n        }\n        return this._mask.prop;\n      }\n    });\n    Object.defineProperty(MaskInterface.prototype, \"maskOpacity\", {\n      get: function () {\n        if (this._mask.op.k) {\n          this._mask.op.getValue();\n        }\n        return this._mask.op.v * 100;\n      }\n    });\n    var MaskManager = function (maskManager) {\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length);\n      var i;\n      var len = maskManager.viewData.length;\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\n      }\n      var maskFunction = function (name2) {\n        i = 0;\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name2) {\n            return _masksInterfaces[i];\n          }\n          i += 1;\n        }\n        return null;\n      };\n      return maskFunction;\n    };\n    return MaskManager;\n  }();\n  const ExpressionPropertyInterface = function () {\n    var defaultUnidimensionalValue = {\n      pv: 0,\n      v: 0,\n      mult: 1\n    };\n    var defaultMultidimensionalValue = {\n      pv: [0, 0, 0],\n      v: [0, 0, 0],\n      mult: 1\n    };\n    function completeProperty(expressionValue, property2, type) {\n      Object.defineProperty(expressionValue, \"velocity\", {\n        get: function () {\n          return property2.getVelocityAtTime(property2.comp.currentFrame);\n        }\n      });\n      expressionValue.numKeys = property2.keyframes ? property2.keyframes.length : 0;\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0;\n        }\n        var value2 = \"\";\n        if (\"s\" in property2.keyframes[pos - 1]) {\n          value2 = property2.keyframes[pos - 1].s;\n        } else if (\"e\" in property2.keyframes[pos - 2]) {\n          value2 = property2.keyframes[pos - 2].e;\n        } else {\n          value2 = property2.keyframes[pos - 2].s;\n        }\n        var valueProp = type === \"unidimensional\" ? new Number(value2) : Object.assign({}, value2);\n        valueProp.time = property2.keyframes[pos - 1].t / property2.elem.comp.globalData.frameRate;\n        valueProp.value = type === \"unidimensional\" ? value2[0] : value2;\n        return valueProp;\n      };\n      expressionValue.valueAtTime = property2.getValueAtTime;\n      expressionValue.speedAtTime = property2.getSpeedAtTime;\n      expressionValue.velocityAtTime = property2.getVelocityAtTime;\n      expressionValue.propertyGroup = property2.propertyGroup;\n    }\n    function UnidimensionalPropertyInterface(property2) {\n      if (!property2 || !(\"pv\" in property2)) {\n        property2 = defaultUnidimensionalValue;\n      }\n      var mult = 1 / property2.mult;\n      var val2 = property2.pv * mult;\n      var expressionValue = new Number(val2);\n      expressionValue.value = val2;\n      completeProperty(expressionValue, property2, \"unidimensional\");\n      return function () {\n        if (property2.k) {\n          property2.getValue();\n        }\n        val2 = property2.v * mult;\n        if (expressionValue.value !== val2) {\n          expressionValue = new Number(val2);\n          expressionValue.value = val2;\n          completeProperty(expressionValue, property2, \"unidimensional\");\n        }\n        return expressionValue;\n      };\n    }\n    function MultidimensionalPropertyInterface(property2) {\n      if (!property2 || !(\"pv\" in property2)) {\n        property2 = defaultMultidimensionalValue;\n      }\n      var mult = 1 / property2.mult;\n      var len = property2.data && property2.data.l || property2.pv.length;\n      var expressionValue = createTypedArray(\"float32\", len);\n      var arrValue = createTypedArray(\"float32\", len);\n      expressionValue.value = arrValue;\n      completeProperty(expressionValue, property2, \"multidimensional\");\n      return function () {\n        if (property2.k) {\n          property2.getValue();\n        }\n        for (var i = 0; i < len; i += 1) {\n          arrValue[i] = property2.v[i] * mult;\n          expressionValue[i] = arrValue[i];\n        }\n        return expressionValue;\n      };\n    }\n    function defaultGetter() {\n      return defaultUnidimensionalValue;\n    }\n    return function (property2) {\n      if (!property2) {\n        return defaultGetter;\n      }\n      if (property2.propType === \"unidimensional\") {\n        return UnidimensionalPropertyInterface(property2);\n      }\n      return MultidimensionalPropertyInterface(property2);\n    };\n  }();\n  const TransformExpressionInterface = function () {\n    return function (transform2) {\n      function _thisFunction(name2) {\n        switch (name2) {\n          case \"scale\":\n          case \"Scale\":\n          case \"ADBE Scale\":\n          case 6:\n            return _thisFunction.scale;\n          case \"rotation\":\n          case \"Rotation\":\n          case \"ADBE Rotation\":\n          case \"ADBE Rotate Z\":\n          case 10:\n            return _thisFunction.rotation;\n          case \"ADBE Rotate X\":\n            return _thisFunction.xRotation;\n          case \"ADBE Rotate Y\":\n            return _thisFunction.yRotation;\n          case \"position\":\n          case \"Position\":\n          case \"ADBE Position\":\n          case 2:\n            return _thisFunction.position;\n          case \"ADBE Position_0\":\n            return _thisFunction.xPosition;\n          case \"ADBE Position_1\":\n            return _thisFunction.yPosition;\n          case \"ADBE Position_2\":\n            return _thisFunction.zPosition;\n          case \"anchorPoint\":\n          case \"AnchorPoint\":\n          case \"Anchor Point\":\n          case \"ADBE AnchorPoint\":\n          case 1:\n            return _thisFunction.anchorPoint;\n          case \"opacity\":\n          case \"Opacity\":\n          case 11:\n            return _thisFunction.opacity;\n          default:\n            return null;\n        }\n      }\n      Object.defineProperty(_thisFunction, \"rotation\", {\n        get: ExpressionPropertyInterface(transform2.r || transform2.rz)\n      });\n      Object.defineProperty(_thisFunction, \"zRotation\", {\n        get: ExpressionPropertyInterface(transform2.rz || transform2.r)\n      });\n      Object.defineProperty(_thisFunction, \"xRotation\", {\n        get: ExpressionPropertyInterface(transform2.rx)\n      });\n      Object.defineProperty(_thisFunction, \"yRotation\", {\n        get: ExpressionPropertyInterface(transform2.ry)\n      });\n      Object.defineProperty(_thisFunction, \"scale\", {\n        get: ExpressionPropertyInterface(transform2.s)\n      });\n      var _px;\n      var _py;\n      var _pz;\n      var _transformFactory;\n      if (transform2.p) {\n        _transformFactory = ExpressionPropertyInterface(transform2.p);\n      } else {\n        _px = ExpressionPropertyInterface(transform2.px);\n        _py = ExpressionPropertyInterface(transform2.py);\n        if (transform2.pz) {\n          _pz = ExpressionPropertyInterface(transform2.pz);\n        }\n      }\n      Object.defineProperty(_thisFunction, \"position\", {\n        get: function () {\n          if (transform2.p) {\n            return _transformFactory();\n          }\n          return [_px(), _py(), _pz ? _pz() : 0];\n        }\n      });\n      Object.defineProperty(_thisFunction, \"xPosition\", {\n        get: ExpressionPropertyInterface(transform2.px)\n      });\n      Object.defineProperty(_thisFunction, \"yPosition\", {\n        get: ExpressionPropertyInterface(transform2.py)\n      });\n      Object.defineProperty(_thisFunction, \"zPosition\", {\n        get: ExpressionPropertyInterface(transform2.pz)\n      });\n      Object.defineProperty(_thisFunction, \"anchorPoint\", {\n        get: ExpressionPropertyInterface(transform2.a)\n      });\n      Object.defineProperty(_thisFunction, \"opacity\", {\n        get: ExpressionPropertyInterface(transform2.o)\n      });\n      Object.defineProperty(_thisFunction, \"skew\", {\n        get: ExpressionPropertyInterface(transform2.sk)\n      });\n      Object.defineProperty(_thisFunction, \"skewAxis\", {\n        get: ExpressionPropertyInterface(transform2.sa)\n      });\n      Object.defineProperty(_thisFunction, \"orientation\", {\n        get: ExpressionPropertyInterface(transform2.or)\n      });\n      return _thisFunction;\n    };\n  }();\n  const LayerExpressionInterface = function () {\n    function getMatrix(time2) {\n      var toWorldMat = new Matrix();\n      if (time2 !== void 0) {\n        var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time2);\n        propMatrix.clone(toWorldMat);\n      } else {\n        var transformMat = this._elem.finalTransform.mProp;\n        transformMat.applyToMatrix(toWorldMat);\n      }\n      return toWorldMat;\n    }\n    function toWorldVec(arr, time2) {\n      var toWorldMat = this.getMatrix(time2);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.applyPoint(toWorldMat, arr);\n    }\n    function toWorld2(arr, time2) {\n      var toWorldMat = this.getMatrix(time2);\n      return this.applyPoint(toWorldMat, arr);\n    }\n    function fromWorldVec(arr, time2) {\n      var toWorldMat = this.getMatrix(time2);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.invertPoint(toWorldMat, arr);\n    }\n    function fromWorld2(arr, time2) {\n      var toWorldMat = this.getMatrix(time2);\n      return this.invertPoint(toWorldMat, arr);\n    }\n    function applyPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n      return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n    }\n    function invertPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n      return matrix.inversePoint(arr);\n    }\n    function fromComp2(arr) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n        return toWorldMat.inversePoint(arr);\n      }\n      return toWorldMat.inversePoint(arr);\n    }\n    function sampleImage() {\n      return [1, 1, 1, 1];\n    }\n    return function (elem2) {\n      var transformInterface;\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem2);\n      }\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects;\n      }\n      function _thisLayerFunction(name2) {\n        switch (name2) {\n          case \"ADBE Root Vectors Group\":\n          case \"Contents\":\n          case 2:\n            return _thisLayerFunction.shapeInterface;\n          case 1:\n          case 6:\n          case \"Transform\":\n          case \"transform\":\n          case \"ADBE Transform Group\":\n            return transformInterface;\n          case 4:\n          case \"ADBE Effect Parade\":\n          case \"effects\":\n          case \"Effects\":\n            return _thisLayerFunction.effect;\n          case \"ADBE Text Properties\":\n            return _thisLayerFunction.textInterface;\n          default:\n            return null;\n        }\n      }\n      _thisLayerFunction.getMatrix = getMatrix;\n      _thisLayerFunction.invertPoint = invertPoint;\n      _thisLayerFunction.applyPoint = applyPoint;\n      _thisLayerFunction.toWorld = toWorld2;\n      _thisLayerFunction.toWorldVec = toWorldVec;\n      _thisLayerFunction.fromWorld = fromWorld2;\n      _thisLayerFunction.fromWorldVec = fromWorldVec;\n      _thisLayerFunction.toComp = toWorld2;\n      _thisLayerFunction.fromComp = fromComp2;\n      _thisLayerFunction.sampleImage = sampleImage;\n      _thisLayerFunction.sourceRectAtTime = elem2.sourceRectAtTime.bind(elem2);\n      _thisLayerFunction._elem = elem2;\n      transformInterface = TransformExpressionInterface(elem2.finalTransform.mProp);\n      var anchorPointDescriptor = getDescriptor(transformInterface, \"anchorPoint\");\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function () {\n            return elem2.hierarchy.length;\n          }\n        },\n        parent: {\n          get: function () {\n            return elem2.hierarchy[0].layerInterface;\n          }\n        },\n        rotation: getDescriptor(transformInterface, \"rotation\"),\n        scale: getDescriptor(transformInterface, \"scale\"),\n        position: getDescriptor(transformInterface, \"position\"),\n        opacity: getDescriptor(transformInterface, \"opacity\"),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function () {\n            return transformInterface;\n          }\n        },\n        active: {\n          get: function () {\n            return elem2.isInRange;\n          }\n        }\n      });\n      _thisLayerFunction.startTime = elem2.data.st;\n      _thisLayerFunction.index = elem2.data.ind;\n      _thisLayerFunction.source = elem2.data.refId;\n      _thisLayerFunction.height = elem2.data.ty === 0 ? elem2.data.h : 100;\n      _thisLayerFunction.width = elem2.data.ty === 0 ? elem2.data.w : 100;\n      _thisLayerFunction.inPoint = elem2.data.ip / elem2.comp.globalData.frameRate;\n      _thisLayerFunction.outPoint = elem2.data.op / elem2.comp.globalData.frameRate;\n      _thisLayerFunction._name = elem2.data.nm;\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\n      return _thisLayerFunction;\n    };\n  }();\n  const propertyGroupFactory = function () {\n    return function (interfaceFunction, parentPropertyGroup) {\n      return function (val2) {\n        val2 = val2 === void 0 ? 1 : val2;\n        if (val2 <= 0) {\n          return interfaceFunction;\n        }\n        return parentPropertyGroup(val2 - 1);\n      };\n    };\n  }();\n  const PropertyInterface = function () {\n    return function (propertyName, propertyGroup) {\n      var interfaceFunction = {\n        _name: propertyName\n      };\n      function _propertyGroup(val2) {\n        val2 = val2 === void 0 ? 1 : val2;\n        if (val2 <= 0) {\n          return interfaceFunction;\n        }\n        return propertyGroup(val2 - 1);\n      }\n      return _propertyGroup;\n    };\n  }();\n  const EffectsExpressionInterface = function () {\n    var ob2 = {\n      createEffectsInterface\n    };\n    function createEffectsInterface(elem2, propertyGroup) {\n      if (elem2.effectsManager) {\n        var effectElements = [];\n        var effectsData = elem2.data.ef;\n        var i;\n        var len = elem2.effectsManager.effectElements.length;\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(createGroupInterface(effectsData[i], elem2.effectsManager.effectElements[i], propertyGroup, elem2));\n        }\n        var effects = elem2.data.ef || [];\n        var groupInterface = function (name2) {\n          i = 0;\n          len = effects.length;\n          while (i < len) {\n            if (name2 === effects[i].nm || name2 === effects[i].mn || name2 === effects[i].ix) {\n              return effectElements[i];\n            }\n            i += 1;\n          }\n          return null;\n        };\n        Object.defineProperty(groupInterface, \"numProperties\", {\n          get: function () {\n            return effects.length;\n          }\n        });\n        return groupInterface;\n      }\n      return null;\n    }\n    function createGroupInterface(data2, elements, propertyGroup, elem2) {\n      function groupInterface(name2) {\n        var effects = data2.ef;\n        var i2 = 0;\n        var len2 = effects.length;\n        while (i2 < len2) {\n          if (name2 === effects[i2].nm || name2 === effects[i2].mn || name2 === effects[i2].ix) {\n            if (effects[i2].ty === 5) {\n              return effectElements[i2];\n            }\n            return effectElements[i2]();\n          }\n          i2 += 1;\n        }\n        throw new Error();\n      }\n      var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);\n      var effectElements = [];\n      var i;\n      var len = data2.ef.length;\n      for (i = 0; i < len; i += 1) {\n        if (data2.ef[i].ty === 5) {\n          effectElements.push(createGroupInterface(data2.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem2));\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data2.ef[i].ty, elem2, _propertyGroup));\n        }\n      }\n      if (data2.mn === \"ADBE Color Control\") {\n        Object.defineProperty(groupInterface, \"color\", {\n          get: function () {\n            return effectElements[0]();\n          }\n        });\n      }\n      Object.defineProperties(groupInterface, {\n        numProperties: {\n          get: function () {\n            return data2.np;\n          }\n        },\n        _name: {\n          value: data2.nm\n        },\n        propertyGroup: {\n          value: _propertyGroup\n        }\n      });\n      groupInterface.enabled = data2.en !== 0;\n      groupInterface.active = groupInterface.enabled;\n      return groupInterface;\n    }\n    function createValueInterface(element, type, elem2, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p);\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem2.comp.compInterface(element.p.v);\n        }\n        return expressionProperty();\n      }\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(PropertyInterface(\"\", propertyGroup));\n      }\n      return interfaceFunction;\n    }\n    return ob2;\n  }();\n  const CompExpressionInterface = function () {\n    return function (comp2) {\n      function _thisLayerFunction(name2) {\n        var i = 0;\n        var len = comp2.layers.length;\n        while (i < len) {\n          if (comp2.layers[i].nm === name2 || comp2.layers[i].ind === name2) {\n            return comp2.elements[i].layerInterface;\n          }\n          i += 1;\n        }\n        return null;\n      }\n      Object.defineProperty(_thisLayerFunction, \"_name\", {\n        value: comp2.data.nm\n      });\n      _thisLayerFunction.layer = _thisLayerFunction;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.height = comp2.data.h || comp2.globalData.compSize.h;\n      _thisLayerFunction.width = comp2.data.w || comp2.globalData.compSize.w;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.frameDuration = 1 / comp2.globalData.frameRate;\n      _thisLayerFunction.displayStartTime = 0;\n      _thisLayerFunction.numLayers = comp2.layers.length;\n      return _thisLayerFunction;\n    };\n  }();\n  const ShapePathInterface = function () {\n    return function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh;\n      function interfaceFunction(val2) {\n        if (val2 === \"Shape\" || val2 === \"shape\" || val2 === \"Path\" || val2 === \"path\" || val2 === \"ADBE Vector Shape\" || val2 === 2) {\n          return interfaceFunction.path;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      prop.setGroupProperty(PropertyInterface(\"Path\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        path: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue();\n            }\n            return prop;\n          }\n        },\n        shape: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue();\n            }\n            return prop;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        ix: {\n          value: shape.ix\n        },\n        propertyIndex: {\n          value: shape.ix\n        },\n        mn: {\n          value: shape.mn\n        },\n        propertyGroup: {\n          value: propertyGroup\n        }\n      });\n      return interfaceFunction;\n    };\n  }();\n  const ShapeExpressionInterface = function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = [];\n      var i;\n      var len = shapes ? shapes.length : 0;\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty === \"gr\") {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"fl\") {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"st\") {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"tm\") {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"tr\") ;else if (shapes[i].ty === \"el\") {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"sr\") {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"sh\") {\n          arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"rc\") {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"rd\") {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"rp\") {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"gf\") {\n          arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else {\n          arr.push(defaultInterfaceFactory(shapes[i], view[i]));\n        }\n      }\n      return arr;\n    }\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces;\n      var interfaceFunction = function _interfaceFunction(value2) {\n        var i = 0;\n        var len = interfaces.length;\n        while (i < len) {\n          if (interfaces[i]._name === value2 || interfaces[i].mn === value2 || interfaces[i].propertyIndex === value2 || interfaces[i].ix === value2 || interfaces[i].ind === value2) {\n            return interfaces[i];\n          }\n          i += 1;\n        }\n        if (typeof value2 === \"number\") {\n          return interfaces[value2 - 1];\n        }\n        return null;\n      };\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\n      interfaceFunction.numProperties = interfaces.length;\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.transform = transformInterface;\n      interfaceFunction.propertyIndex = shape.cix;\n      interfaceFunction._name = shape.nm;\n      return interfaceFunction;\n    }\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value2) {\n        switch (value2) {\n          case \"ADBE Vectors Group\":\n          case \"Contents\":\n          case 2:\n            return interfaceFunction.content;\n          default:\n            return interfaceFunction.transform;\n        }\n      };\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var content2 = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.content = content2;\n      interfaceFunction.transform = transformInterface;\n      Object.defineProperty(interfaceFunction, \"_name\", {\n        get: function () {\n          return shape.nm;\n        }\n      });\n      interfaceFunction.numProperties = shape.np;\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.nm = shape.nm;\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val2) {\n        if (val2 === \"Color\" || val2 === \"color\") {\n          return interfaceFunction.color;\n        }\n        if (val2 === \"Opacity\" || val2 === \"opacity\") {\n          return interfaceFunction.opacity;\n        }\n        return null;\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface(\"Color\", propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Opacity\", propertyGroup));\n      return interfaceFunction;\n    }\n    function gradientFillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val2) {\n        if (val2 === \"Start Point\" || val2 === \"start point\") {\n          return interfaceFunction.startPoint;\n        }\n        if (val2 === \"End Point\" || val2 === \"end point\") {\n          return interfaceFunction.endPoint;\n        }\n        if (val2 === \"Opacity\" || val2 === \"opacity\") {\n          return interfaceFunction.opacity;\n        }\n        return null;\n      }\n      Object.defineProperties(interfaceFunction, {\n        startPoint: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        endPoint: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        type: {\n          get: function () {\n            return \"a\";\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.s.setGroupProperty(PropertyInterface(\"Start Point\", propertyGroup));\n      view.e.setGroupProperty(PropertyInterface(\"End Point\", propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Opacity\", propertyGroup));\n      return interfaceFunction;\n    }\n    function defaultInterfaceFactory() {\n      function interfaceFunction() {\n        return null;\n      }\n      return interfaceFunction;\n    }\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);\n      function addPropertyToDashOb(i2) {\n        Object.defineProperty(dashOb, shape.d[i2].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i2].p)\n        });\n      }\n      var i;\n      var len = shape.d ? shape.d.length : 0;\n      var dashOb = {};\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i);\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\n      }\n      function interfaceFunction(val2) {\n        if (val2 === \"Color\" || val2 === \"color\") {\n          return interfaceFunction.color;\n        }\n        if (val2 === \"Opacity\" || val2 === \"opacity\") {\n          return interfaceFunction.opacity;\n        }\n        if (val2 === \"Stroke Width\" || val2 === \"stroke width\") {\n          return interfaceFunction.strokeWidth;\n        }\n        return null;\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        strokeWidth: {\n          get: ExpressionPropertyInterface(view.w)\n        },\n        dash: {\n          get: function () {\n            return dashOb;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface(\"Color\", _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Opacity\", _propertyGroup));\n      view.w.setGroupProperty(PropertyInterface(\"Stroke Width\", _propertyGroup));\n      return interfaceFunction;\n    }\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val2) {\n        if (val2 === shape.e.ix || val2 === \"End\" || val2 === \"end\") {\n          return interfaceFunction.end;\n        }\n        if (val2 === shape.s.ix) {\n          return interfaceFunction.start;\n        }\n        if (val2 === shape.o.ix) {\n          return interfaceFunction.offset;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaceFunction.propertyIndex = shape.ix;\n      view.s.setGroupProperty(PropertyInterface(\"Start\", _propertyGroup));\n      view.e.setGroupProperty(PropertyInterface(\"End\", _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Offset\", _propertyGroup));\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.propertyGroup = propertyGroup;\n      Object.defineProperties(interfaceFunction, {\n        start: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        end: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.a.ix === value2 || value2 === \"Anchor Point\") {\n          return interfaceFunction.anchorPoint;\n        }\n        if (shape.o.ix === value2 || value2 === \"Opacity\") {\n          return interfaceFunction.opacity;\n        }\n        if (shape.p.ix === value2 || value2 === \"Position\") {\n          return interfaceFunction.position;\n        }\n        if (shape.r.ix === value2 || value2 === \"Rotation\" || value2 === \"ADBE Vector Rotation\") {\n          return interfaceFunction.rotation;\n        }\n        if (shape.s.ix === value2 || value2 === \"Scale\") {\n          return interfaceFunction.scale;\n        }\n        if (shape.sk && shape.sk.ix === value2 || value2 === \"Skew\") {\n          return interfaceFunction.skew;\n        }\n        if (shape.sa && shape.sa.ix === value2 || value2 === \"Skew Axis\") {\n          return interfaceFunction.skewAxis;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      view.transform.mProps.o.setGroupProperty(PropertyInterface(\"Opacity\", _propertyGroup));\n      view.transform.mProps.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      view.transform.mProps.a.setGroupProperty(PropertyInterface(\"Anchor Point\", _propertyGroup));\n      view.transform.mProps.s.setGroupProperty(PropertyInterface(\"Scale\", _propertyGroup));\n      view.transform.mProps.r.setGroupProperty(PropertyInterface(\"Rotation\", _propertyGroup));\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(PropertyInterface(\"Skew\", _propertyGroup));\n        view.transform.mProps.sa.setGroupProperty(PropertyInterface(\"Skew Angle\", _propertyGroup));\n      }\n      view.transform.op.setGroupProperty(PropertyInterface(\"Opacity\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        opacity: {\n          get: ExpressionPropertyInterface(view.transform.mProps.o)\n        },\n        position: {\n          get: ExpressionPropertyInterface(view.transform.mProps.p)\n        },\n        anchorPoint: {\n          get: ExpressionPropertyInterface(view.transform.mProps.a)\n        },\n        scale: {\n          get: ExpressionPropertyInterface(view.transform.mProps.s)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(view.transform.mProps.r)\n        },\n        skew: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk)\n        },\n        skewAxis: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.ty = \"tr\";\n      interfaceFunction.mn = shape.mn;\n      interfaceFunction.propertyGroup = propertyGroup;\n      return interfaceFunction;\n    }\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.p.ix === value2) {\n          return interfaceFunction.position;\n        }\n        if (shape.s.ix === value2) {\n          return interfaceFunction.size;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaceFunction.propertyIndex = shape.ix;\n      var prop = view.sh.ty === \"tm\" ? view.sh.prop : view.sh;\n      prop.s.setGroupProperty(PropertyInterface(\"Size\", _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.p.ix === value2) {\n          return interfaceFunction.position;\n        }\n        if (shape.r.ix === value2) {\n          return interfaceFunction.rotation;\n        }\n        if (shape.pt.ix === value2) {\n          return interfaceFunction.points;\n        }\n        if (shape.or.ix === value2 || value2 === \"ADBE Vector Star Outer Radius\") {\n          return interfaceFunction.outerRadius;\n        }\n        if (shape.os.ix === value2) {\n          return interfaceFunction.outerRoundness;\n        }\n        if (shape.ir && (shape.ir.ix === value2 || value2 === \"ADBE Vector Star Inner Radius\")) {\n          return interfaceFunction.innerRadius;\n        }\n        if (shape.is && shape.is.ix === value2) {\n          return interfaceFunction.innerRoundness;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view.sh.ty === \"tm\" ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.or.setGroupProperty(PropertyInterface(\"Outer Radius\", _propertyGroup));\n      prop.os.setGroupProperty(PropertyInterface(\"Outer Roundness\", _propertyGroup));\n      prop.pt.setGroupProperty(PropertyInterface(\"Points\", _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface(\"Rotation\", _propertyGroup));\n      if (shape.ir) {\n        prop.ir.setGroupProperty(PropertyInterface(\"Inner Radius\", _propertyGroup));\n        prop.is.setGroupProperty(PropertyInterface(\"Inner Roundness\", _propertyGroup));\n      }\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        points: {\n          get: ExpressionPropertyInterface(prop.pt)\n        },\n        outerRadius: {\n          get: ExpressionPropertyInterface(prop.or)\n        },\n        outerRoundness: {\n          get: ExpressionPropertyInterface(prop.os)\n        },\n        innerRadius: {\n          get: ExpressionPropertyInterface(prop.ir)\n        },\n        innerRoundness: {\n          get: ExpressionPropertyInterface(prop.is)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.p.ix === value2) {\n          return interfaceFunction.position;\n        }\n        if (shape.r.ix === value2) {\n          return interfaceFunction.roundness;\n        }\n        if (shape.s.ix === value2 || value2 === \"Size\" || value2 === \"ADBE Vector Rect Size\") {\n          return interfaceFunction.size;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view.sh.ty === \"tm\" ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      prop.s.setGroupProperty(PropertyInterface(\"Size\", _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface(\"Rotation\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        roundness: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.r.ix === value2 || value2 === \"Round Corners 1\") {\n          return interfaceFunction.radius;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.rd.setGroupProperty(PropertyInterface(\"Radius\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        radius: {\n          get: ExpressionPropertyInterface(prop.rd)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value2) {\n        if (shape.c.ix === value2 || value2 === \"Copies\") {\n          return interfaceFunction.copies;\n        }\n        if (shape.o.ix === value2 || value2 === \"Offset\") {\n          return interfaceFunction.offset;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.c.setGroupProperty(PropertyInterface(\"Copies\", _propertyGroup));\n      prop.o.setGroupProperty(PropertyInterface(\"Offset\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        copies: {\n          get: ExpressionPropertyInterface(prop.c)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(prop.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    return function (shapes, view, propertyGroup) {\n      var interfaces;\n      function _interfaceFunction(value2) {\n        if (typeof value2 === \"number\") {\n          value2 = value2 === void 0 ? 1 : value2;\n          if (value2 === 0) {\n            return propertyGroup;\n          }\n          return interfaces[value2 - 1];\n        }\n        var i = 0;\n        var len = interfaces.length;\n        while (i < len) {\n          if (interfaces[i]._name === value2) {\n            return interfaces[i];\n          }\n          i += 1;\n        }\n        return null;\n      }\n      function parentGroupWrapper() {\n        return propertyGroup;\n      }\n      _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper);\n      interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup);\n      _interfaceFunction.numProperties = interfaces.length;\n      _interfaceFunction._name = \"Contents\";\n      return _interfaceFunction;\n    };\n  }();\n  const TextExpressionInterface = function () {\n    return function (elem2) {\n      var _prevValue;\n      var _sourceText;\n      function _thisLayerFunction(name2) {\n        switch (name2) {\n          case \"ADBE Text Document\":\n            return _thisLayerFunction.sourceText;\n          default:\n            return null;\n        }\n      }\n      Object.defineProperty(_thisLayerFunction, \"sourceText\", {\n        get: function () {\n          elem2.textProperty.getValue();\n          var stringValue = elem2.textProperty.currentData.t;\n          if (stringValue !== _prevValue) {\n            elem2.textProperty.currentData.t = _prevValue;\n            _sourceText = new String(stringValue);\n            _sourceText.value = stringValue || new String(stringValue);\n          }\n          return _sourceText;\n        }\n      });\n      return _thisLayerFunction;\n    };\n  }();\n  const getBlendMode = function () {\n    var blendModeEnums = {\n      0: \"source-over\",\n      1: \"multiply\",\n      2: \"screen\",\n      3: \"overlay\",\n      4: \"darken\",\n      5: \"lighten\",\n      6: \"color-dodge\",\n      7: \"color-burn\",\n      8: \"hard-light\",\n      9: \"soft-light\",\n      10: \"difference\",\n      11: \"exclusion\",\n      12: \"hue\",\n      13: \"saturation\",\n      14: \"color\",\n      15: \"luminosity\"\n    };\n    return function (mode) {\n      return blendModeEnums[mode] || \"\";\n    };\n  }();\n  function SliderEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);\n  }\n  function AngleEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);\n  }\n  function ColorEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 1, 0, container);\n  }\n  function PointEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 1, 0, container);\n  }\n  function LayerIndexEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);\n  }\n  function MaskIndexEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);\n  }\n  function CheckboxEffect(data2, elem2, container) {\n    this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);\n  }\n  function NoValueEffect() {\n    this.p = {};\n  }\n  function EffectsManager(data2, element) {\n    var effects = data2.ef || [];\n    this.effectElements = [];\n    var i;\n    var len = effects.length;\n    var effectItem;\n    for (i = 0; i < len; i += 1) {\n      effectItem = new GroupEffect(effects[i], element);\n      this.effectElements.push(effectItem);\n    }\n  }\n  function GroupEffect(data2, element) {\n    this.init(data2, element);\n  }\n  extendPrototype([DynamicPropertyContainer], GroupEffect);\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\n  GroupEffect.prototype.init = function (data2, element) {\n    this.data = data2;\n    this.effectElements = [];\n    this.initDynamicPropertyContainer(element);\n    var i;\n    var len = this.data.ef.length;\n    var eff;\n    var effects = this.data.ef;\n    for (i = 0; i < len; i += 1) {\n      eff = null;\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this);\n          break;\n        case 1:\n          eff = new AngleEffect(effects[i], element, this);\n          break;\n        case 2:\n          eff = new ColorEffect(effects[i], element, this);\n          break;\n        case 3:\n          eff = new PointEffect(effects[i], element, this);\n          break;\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this);\n          break;\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this);\n          break;\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this);\n          break;\n        case 5:\n          eff = new EffectsManager(effects[i], element);\n          break;\n        default:\n          eff = new NoValueEffect(effects[i]);\n          break;\n      }\n      if (eff) {\n        this.effectElements.push(eff);\n      }\n    }\n  };\n  function BaseElement() {}\n  BaseElement.prototype = {\n    checkMasks: function () {\n      if (!this.data.hasMask) {\n        return false;\n      }\n      var i = 0;\n      var len = this.data.masksProperties.length;\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== \"n\" && this.data.masksProperties[i].cl !== false) {\n          return true;\n        }\n        i += 1;\n      }\n      return false;\n    },\n    initExpressions: function () {\n      this.layerInterface = LayerExpressionInterface(this);\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager);\n      }\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\n      this.layerInterface.registerEffectsInterface(effectsInterface);\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this);\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);\n        this.layerInterface.content = this.layerInterface.shapeInterface;\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this);\n        this.layerInterface.text = this.layerInterface.textInterface;\n      }\n    },\n    setBlendMode: function () {\n      var blendModeValue = getBlendMode(this.data.bm);\n      var elem2 = this.baseElement || this.layerElement;\n      elem2.style[\"mix-blend-mode\"] = blendModeValue;\n    },\n    initBaseData: function (data2, globalData2, comp2) {\n      this.globalData = globalData2;\n      this.comp = comp2;\n      this.data = data2;\n      this.layerId = createElementID();\n      if (!this.data.sr) {\n        this.data.sr = 1;\n      }\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\n    },\n    getType: function () {\n      return this.type;\n    },\n    sourceRectAtTime: function () {}\n  };\n  function FrameElement() {}\n  FrameElement.prototype = {\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     */\n    initFrame: function () {\n      this._isFirstFrame = false;\n      this.dynamicProperties = [];\n      this._mdf = false;\n    },\n    /**\n     * @function\n     * Calculates all dynamic values\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     * @param {boolean} isVisible\n     * if layers is currently in range\n     *\n     */\n    prepareProperties: function (num, isVisible) {\n      var i;\n      var len = this.dynamicProperties.length;\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || this._isParent && this.dynamicProperties[i].propType === \"transform\") {\n          this.dynamicProperties[i].getValue();\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true;\n            this._mdf = true;\n          }\n        }\n      }\n    },\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n      }\n    }\n  };\n  const FootageInterface = function () {\n    var outlineInterfaceFactory = function (elem2) {\n      var currentPropertyName = \"\";\n      var currentProperty = elem2.getFootageData();\n      function init() {\n        currentPropertyName = \"\";\n        currentProperty = elem2.getFootageData();\n        return searchProperty;\n      }\n      function searchProperty(value2) {\n        if (currentProperty[value2]) {\n          currentPropertyName = value2;\n          currentProperty = currentProperty[value2];\n          if (typeof currentProperty === \"object\") {\n            return searchProperty;\n          }\n          return currentProperty;\n        }\n        var propertyNameIndex = value2.indexOf(currentPropertyName);\n        if (propertyNameIndex !== -1) {\n          var index2 = parseInt(value2.substr(propertyNameIndex + currentPropertyName.length), 10);\n          currentProperty = currentProperty[index2];\n          if (typeof currentProperty === \"object\") {\n            return searchProperty;\n          }\n          return currentProperty;\n        }\n        return \"\";\n      }\n      return init;\n    };\n    var dataInterfaceFactory = function (elem2) {\n      function interfaceFunction(value2) {\n        if (value2 === \"Outline\") {\n          return interfaceFunction.outlineInterface();\n        }\n        return null;\n      }\n      interfaceFunction._name = \"Outline\";\n      interfaceFunction.outlineInterface = outlineInterfaceFactory(elem2);\n      return interfaceFunction;\n    };\n    return function (elem2) {\n      function _interfaceFunction(value2) {\n        if (value2 === \"Data\") {\n          return _interfaceFunction.dataInterface;\n        }\n        return null;\n      }\n      _interfaceFunction._name = \"Data\";\n      _interfaceFunction.dataInterface = dataInterfaceFactory(elem2);\n      return _interfaceFunction;\n    };\n  }();\n  function FootageElement(data2, globalData2, comp2) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData2.getAssetData(data2.refId);\n    this.footageData = globalData2.imageLoader.getAsset(this.assetData);\n    this.initBaseData(data2, globalData2, comp2);\n  }\n  FootageElement.prototype.prepareFrame = function () {};\n  extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement);\n  FootageElement.prototype.getBaseElement = function () {\n    return null;\n  };\n  FootageElement.prototype.renderFrame = function () {};\n  FootageElement.prototype.destroy = function () {};\n  FootageElement.prototype.initExpressions = function () {\n    this.layerInterface = FootageInterface(this);\n  };\n  FootageElement.prototype.getFootageData = function () {\n    return this.footageData;\n  };\n  function AudioElement(data2, globalData2, comp2) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData2.getAssetData(data2.refId);\n    this.initBaseData(data2, globalData2, comp2);\n    this._isPlaying = false;\n    this._canPlay = false;\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.audio = this.globalData.audioController.createAudio(assetPath);\n    this._currentTime = 0;\n    this.globalData.audioController.addAudio(this);\n    this._volumeMultiplier = 1;\n    this._volume = 1;\n    this._previousVolume = null;\n    this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData2.frameRate, this) : {\n      _placeholder: true\n    };\n    this.lv = PropertyFactory.getProp(this, data2.au && data2.au.lv ? data2.au.lv : {\n      k: [100]\n    }, 1, 0.01, this);\n  }\n  AudioElement.prototype.prepareFrame = function (num) {\n    this.prepareRenderableFrame(num, true);\n    this.prepareProperties(num, true);\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n      this._currentTime = timeRemapped;\n    } else {\n      this._currentTime = num / this.data.sr;\n    }\n    this._volume = this.lv.v[0];\n    var totalVolume = this._volume * this._volumeMultiplier;\n    if (this._previousVolume !== totalVolume) {\n      this._previousVolume = totalVolume;\n      this.audio.volume(totalVolume);\n    }\n  };\n  extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);\n  AudioElement.prototype.renderFrame = function () {\n    if (this.isInRange && this._canPlay) {\n      if (!this._isPlaying) {\n        this.audio.play();\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n        this._isPlaying = true;\n      } else if (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) {\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n      }\n    }\n  };\n  AudioElement.prototype.show = function () {};\n  AudioElement.prototype.hide = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n  };\n  AudioElement.prototype.pause = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n    this._canPlay = false;\n  };\n  AudioElement.prototype.resume = function () {\n    this._canPlay = true;\n  };\n  AudioElement.prototype.setRate = function (rateValue) {\n    this.audio.rate(rateValue);\n  };\n  AudioElement.prototype.volume = function (volumeValue) {\n    this._volumeMultiplier = volumeValue;\n    this._previousVolume = volumeValue * this._volume;\n    this.audio.volume(this._previousVolume);\n  };\n  AudioElement.prototype.getBaseElement = function () {\n    return null;\n  };\n  AudioElement.prototype.destroy = function () {};\n  AudioElement.prototype.sourceRectAtTime = function () {};\n  AudioElement.prototype.initExpressions = function () {};\n  function BaseRenderer() {}\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i;\n    var len = this.layers.length;\n    var data2;\n    this.completeLayers = true;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (!this.elements[i]) {\n        data2 = this.layers[i];\n        if (data2.ip - data2.st <= num - this.layers[i].st && data2.op - data2.st > num - this.layers[i].st) {\n          this.buildItem(i);\n        }\n      }\n      this.completeLayers = this.elements[i] ? this.completeLayers : false;\n    }\n    this.checkPendingElements();\n  };\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer);\n      case 0:\n        return this.createComp(layer);\n      case 1:\n        return this.createSolid(layer);\n      case 3:\n        return this.createNull(layer);\n      case 4:\n        return this.createShape(layer);\n      case 5:\n        return this.createText(layer);\n      case 6:\n        return this.createAudio(layer);\n      case 13:\n        return this.createCamera(layer);\n      case 15:\n        return this.createFootage(layer);\n      default:\n        return this.createNull(layer);\n    }\n  };\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error(\"You're using a 3d camera. Try the html renderer.\");\n  };\n  BaseRenderer.prototype.createAudio = function (data2) {\n    return new AudioElement(data2, this.globalData, this);\n  };\n  BaseRenderer.prototype.createFootage = function (data2) {\n    return new FootageElement(data2, this.globalData, this);\n  };\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i);\n    }\n    this.checkPendingElements();\n  };\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false;\n    var i;\n    var len = newLayers.length;\n    var j;\n    var jLen = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      j = 0;\n      while (j < jLen) {\n        if (this.layers[j].id === newLayers[i].id) {\n          this.layers[j] = newLayers[i];\n          break;\n        }\n        j += 1;\n      }\n    }\n  };\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface;\n  };\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  };\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements;\n    var layers = this.layers;\n    var i = 0;\n    var len = layers.length;\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i);\n          this.addPendingElement(element);\n        } else {\n          hierarchy.push(elements[i]);\n          elements[i].setAsParent();\n          if (layers[i].parent !== void 0) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy);\n          } else {\n            element.setHierarchy(hierarchy);\n          }\n        }\n      }\n      i += 1;\n    }\n  };\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element);\n  };\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i;\n    var len = assets.length;\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp2 = this.createComp(assets[i]);\n        comp2.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp2);\n      }\n    }\n  };\n  BaseRenderer.prototype.getElementByPath = function (path) {\n    var pathValue = path.shift();\n    var element;\n    if (typeof pathValue === \"number\") {\n      element = this.elements[pathValue];\n    } else {\n      var i;\n      var len = this.elements.length;\n      for (i = 0; i < len; i += 1) {\n        if (this.elements[i].data.nm === pathValue) {\n          element = this.elements[i];\n          break;\n        }\n      }\n    }\n    if (path.length === 0) {\n      return element;\n    }\n    return element.getElementByPath(path);\n  };\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager();\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\n    this.globalData.audioController = this.animationItem.audioController;\n    this.globalData.frameId = 0;\n    this.globalData.frameRate = animData.fr;\n    this.globalData.nm = animData.nm;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n  };\n  function TransformElement() {}\n  TransformElement.prototype = {\n    initTransform: function () {\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {\n          o: 0\n        },\n        _matMdf: false,\n        _opMdf: false,\n        mat: new Matrix()\n      };\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true;\n      }\n      if (this.data.ty !== 11) ;\n    },\n    renderTransform: function () {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\n      if (this.hierarchy) {\n        var mat;\n        var finalMat = this.finalTransform.mat;\n        var i = 0;\n        var len = this.hierarchy.length;\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true;\n              break;\n            }\n            i += 1;\n          }\n        }\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props;\n          finalMat.cloneFromProps(mat);\n          for (i = 0; i < len; i += 1) {\n            mat = this.hierarchy[i].finalTransform.mProp.v.props;\n            finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n          }\n        }\n      }\n    },\n    globalToLocal: function (pt) {\n      var transforms = [];\n      transforms.push(this.finalTransform);\n      var flag = true;\n      var comp2 = this.comp;\n      while (flag) {\n        if (comp2.finalTransform) {\n          if (comp2.data.hasMask) {\n            transforms.splice(0, 0, comp2.finalTransform);\n          }\n          comp2 = comp2.comp;\n        } else {\n          flag = false;\n        }\n      }\n      var i;\n      var len = transforms.length;\n      var ptNew;\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\n      }\n      return pt;\n    },\n    mHelper: new Matrix()\n  };\n  function MaskElement(data2, element, globalData2) {\n    this.data = data2;\n    this.element = element;\n    this.globalData = globalData2;\n    this.storedData = [];\n    this.masksProperties = this.data.masksProperties || [];\n    this.maskElement = null;\n    var defs = this.globalData.defs;\n    var i;\n    var len = this.masksProperties ? this.masksProperties.length : 0;\n    this.viewData = createSizedArray(len);\n    this.solidPath = \"\";\n    var path;\n    var properties = this.masksProperties;\n    var count = 0;\n    var currentMasks = [];\n    var j;\n    var jLen;\n    var layerId = createElementID();\n    var rect;\n    var expansor;\n    var feMorph;\n    var x;\n    var maskType = \"clipPath\";\n    var maskRef = \"clip-path\";\n    for (i = 0; i < len; i += 1) {\n      if (properties[i].mode !== \"a\" && properties[i].mode !== \"n\" || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {\n        maskType = \"mask\";\n        maskRef = \"mask\";\n      }\n      if ((properties[i].mode === \"s\" || properties[i].mode === \"i\") && count === 0) {\n        rect = createNS(\"rect\");\n        rect.setAttribute(\"fill\", \"#ffffff\");\n        rect.setAttribute(\"width\", this.element.comp.data.w || 0);\n        rect.setAttribute(\"height\", this.element.comp.data.h || 0);\n        currentMasks.push(rect);\n      } else {\n        rect = null;\n      }\n      path = createNS(\"path\");\n      if (properties[i].mode === \"n\") {\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: \"\"\n        };\n        defs.appendChild(path);\n      } else {\n        count += 1;\n        path.setAttribute(\"fill\", properties[i].mode === \"s\" ? \"#000000\" : \"#ffffff\");\n        path.setAttribute(\"clip-rule\", \"nonzero\");\n        var filterID;\n        if (properties[i].x.k !== 0) {\n          maskType = \"mask\";\n          maskRef = \"mask\";\n          x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);\n          filterID = createElementID();\n          expansor = createNS(\"filter\");\n          expansor.setAttribute(\"id\", filterID);\n          feMorph = createNS(\"feMorphology\");\n          feMorph.setAttribute(\"operator\", \"erode\");\n          feMorph.setAttribute(\"in\", \"SourceGraphic\");\n          feMorph.setAttribute(\"radius\", \"0\");\n          expansor.appendChild(feMorph);\n          defs.appendChild(expansor);\n          path.setAttribute(\"stroke\", properties[i].mode === \"s\" ? \"#000000\" : \"#ffffff\");\n        } else {\n          feMorph = null;\n          x = null;\n        }\n        this.storedData[i] = {\n          elem: path,\n          x,\n          expan: feMorph,\n          lastPath: \"\",\n          lastOperator: \"\",\n          filterId: filterID,\n          lastRadius: 0\n        };\n        if (properties[i].mode === \"i\") {\n          jLen = currentMasks.length;\n          var g = createNS(\"g\");\n          for (j = 0; j < jLen; j += 1) {\n            g.appendChild(currentMasks[j]);\n          }\n          var mask2 = createNS(\"mask\");\n          mask2.setAttribute(\"mask-type\", \"alpha\");\n          mask2.setAttribute(\"id\", layerId + \"_\" + count);\n          mask2.appendChild(path);\n          defs.appendChild(mask2);\n          g.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + layerId + \"_\" + count + \")\");\n          currentMasks.length = 0;\n          currentMasks.push(g);\n        } else {\n          currentMasks.push(path);\n        }\n        if (properties[i].inv && !this.solidPath) {\n          this.solidPath = this.createLayerSolidPath();\n        }\n        this.viewData[i] = {\n          elem: path,\n          lastPath: \"\",\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          invRect: rect\n        };\n        if (!this.viewData[i].prop.k) {\n          this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\n        }\n      }\n    }\n    this.maskElement = createNS(maskType);\n    len = currentMasks.length;\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i]);\n    }\n    if (count > 0) {\n      this.maskElement.setAttribute(\"id\", layerId);\n      this.element.maskedElement.setAttribute(maskRef, \"url(\" + getLocationHref() + \"#\" + layerId + \")\");\n      defs.appendChild(this.maskElement);\n    }\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop;\n  };\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat;\n    var i;\n    var len = this.masksProperties.length;\n    for (i = 0; i < len; i += 1) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute(\"fill-opacity\", this.viewData[i].op.v);\n      }\n      if (this.masksProperties[i].mode !== \"n\") {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute(\"transform\", finalMat.getInverseMatrix().to2dCSS());\n        }\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan;\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== \"erode\") {\n              this.storedData[i].lastOperator = \"erode\";\n              this.storedData[i].elem.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + this.storedData[i].filterId + \")\");\n            }\n            feMorph.setAttribute(\"radius\", -this.storedData[i].x.v);\n          } else {\n            if (this.storedData[i].lastOperator !== \"dilate\") {\n              this.storedData[i].lastOperator = \"dilate\";\n              this.storedData[i].elem.setAttribute(\"filter\", null);\n            }\n            this.storedData[i].elem.setAttribute(\"stroke-width\", this.storedData[i].x.v * 2);\n          }\n        }\n      }\n    }\n  };\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement;\n  };\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = \"M0,0 \";\n    path += \" h\" + this.globalData.compSize.w;\n    path += \" v\" + this.globalData.compSize.h;\n    path += \" h-\" + this.globalData.compSize.w;\n    path += \" v-\" + this.globalData.compSize.h + \" \";\n    return path;\n  };\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = \" M\" + pathNodes.v[0][0] + \",\" + pathNodes.v[0][1];\n    var i;\n    var len;\n    len = pathNodes._length;\n    for (i = 1; i < len; i += 1) {\n      pathString += \" C\" + pathNodes.o[i - 1][0] + \",\" + pathNodes.o[i - 1][1] + \" \" + pathNodes.i[i][0] + \",\" + pathNodes.i[i][1] + \" \" + pathNodes.v[i][0] + \",\" + pathNodes.v[i][1];\n    }\n    if (pathNodes.c && len > 1) {\n      pathString += \" C\" + pathNodes.o[i - 1][0] + \",\" + pathNodes.o[i - 1][1] + \" \" + pathNodes.i[0][0] + \",\" + pathNodes.i[0][1] + \" \" + pathNodes.v[0][0] + \",\" + pathNodes.v[0][1];\n    }\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = \"\";\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\n        }\n        viewData.elem.setAttribute(\"d\", pathShapeValue);\n      }\n      viewData.lastPath = pathString;\n    }\n  };\n  MaskElement.prototype.destroy = function () {\n    this.element = null;\n    this.globalData = null;\n    this.maskElement = null;\n    this.data = null;\n    this.masksProperties = null;\n  };\n  const filtersFactory = function () {\n    var ob2 = {};\n    ob2.createFilter = createFilter;\n    ob2.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\n    function createFilter(filId, skipCoordinates) {\n      var fil = createNS(\"filter\");\n      fil.setAttribute(\"id\", filId);\n      if (skipCoordinates !== true) {\n        fil.setAttribute(\"filterUnits\", \"objectBoundingBox\");\n        fil.setAttribute(\"x\", \"0%\");\n        fil.setAttribute(\"y\", \"0%\");\n        fil.setAttribute(\"width\", \"100%\");\n        fil.setAttribute(\"height\", \"100%\");\n      }\n      return fil;\n    }\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS(\"feColorMatrix\");\n      feColorMatrix.setAttribute(\"type\", \"matrix\");\n      feColorMatrix.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n      feColorMatrix.setAttribute(\"values\", \"0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1\");\n      return feColorMatrix;\n    }\n    return ob2;\n  }();\n  const featureSupport = function () {\n    var ob2 = {\n      maskType: true\n    };\n    if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\n      ob2.maskType = false;\n    }\n    return ob2;\n  }();\n  var registeredEffects = {};\n  var idPrefix = \"filter_result_\";\n  function SVGEffects(elem2) {\n    var i;\n    var source = \"SourceGraphic\";\n    var len = elem2.data.ef ? elem2.data.ef.length : 0;\n    var filId = createElementID();\n    var fil = filtersFactory.createFilter(filId, true);\n    var count = 0;\n    this.filters = [];\n    var filterManager;\n    for (i = 0; i < len; i += 1) {\n      filterManager = null;\n      var type = elem2.data.ef[i].ty;\n      if (registeredEffects[type]) {\n        var Effect = registeredEffects[type].effect;\n        filterManager = new Effect(fil, elem2.effectsManager.effectElements[i], elem2, idPrefix + count, source);\n        source = idPrefix + count;\n        if (registeredEffects[type].countsAsEffect) {\n          count += 1;\n        }\n      }\n      if (filterManager) {\n        this.filters.push(filterManager);\n      }\n    }\n    if (count) {\n      elem2.globalData.defs.appendChild(fil);\n      elem2.layerElement.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + filId + \")\");\n    }\n    if (this.filters.length) {\n      elem2.addRenderableComponent(this);\n    }\n  }\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i;\n    var len = this.filters.length;\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame);\n    }\n  };\n  function SVGBaseElement() {}\n  SVGBaseElement.prototype = {\n    initRendererElement: function () {\n      this.layerElement = createNS(\"g\");\n    },\n    createContainerElements: function () {\n      this.matteElement = createNS(\"g\");\n      this.transformedElement = this.layerElement;\n      this.maskedElement = this.layerElement;\n      this._sizeChanged = false;\n      var layerElementParent = null;\n      var filId;\n      var fil;\n      var gg;\n      if (this.data.td) {\n        if (this.data.td == 3 || this.data.td == 1) {\n          var masker = createNS(\"mask\");\n          masker.setAttribute(\"id\", this.layerId);\n          masker.setAttribute(\"mask-type\", this.data.td == 3 ? \"luminance\" : \"alpha\");\n          masker.appendChild(this.layerElement);\n          layerElementParent = masker;\n          this.globalData.defs.appendChild(masker);\n          if (!featureSupport.maskType && this.data.td == 1) {\n            masker.setAttribute(\"mask-type\", \"luminance\");\n            filId = createElementID();\n            fil = filtersFactory.createFilter(filId);\n            this.globalData.defs.appendChild(fil);\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS(\"g\");\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            masker.appendChild(gg);\n            gg.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + filId + \")\");\n          }\n        } else if (this.data.td == 2) {\n          var maskGroup = createNS(\"mask\");\n          maskGroup.setAttribute(\"id\", this.layerId);\n          maskGroup.setAttribute(\"mask-type\", \"alpha\");\n          var maskGrouper = createNS(\"g\");\n          maskGroup.appendChild(maskGrouper);\n          filId = createElementID();\n          fil = filtersFactory.createFilter(filId);\n          var feCTr = createNS(\"feComponentTransfer\");\n          feCTr.setAttribute(\"in\", \"SourceGraphic\");\n          fil.appendChild(feCTr);\n          var feFunc = createNS(\"feFuncA\");\n          feFunc.setAttribute(\"type\", \"table\");\n          feFunc.setAttribute(\"tableValues\", \"1.0 0.0\");\n          feCTr.appendChild(feFunc);\n          this.globalData.defs.appendChild(fil);\n          var alphaRect = createNS(\"rect\");\n          alphaRect.setAttribute(\"width\", this.comp.data.w);\n          alphaRect.setAttribute(\"height\", this.comp.data.h);\n          alphaRect.setAttribute(\"x\", \"0\");\n          alphaRect.setAttribute(\"y\", \"0\");\n          alphaRect.setAttribute(\"fill\", \"#ffffff\");\n          alphaRect.setAttribute(\"opacity\", \"0\");\n          maskGrouper.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + filId + \")\");\n          maskGrouper.appendChild(alphaRect);\n          maskGrouper.appendChild(this.layerElement);\n          layerElementParent = maskGrouper;\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute(\"mask-type\", \"luminance\");\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS(\"g\");\n            maskGrouper.appendChild(alphaRect);\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            maskGrouper.appendChild(gg);\n          }\n          this.globalData.defs.appendChild(maskGroup);\n        }\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement);\n        layerElementParent = this.matteElement;\n        this.baseElement = this.matteElement;\n      } else {\n        this.baseElement = this.layerElement;\n      }\n      if (this.data.ln) {\n        this.layerElement.setAttribute(\"id\", this.data.ln);\n      }\n      if (this.data.cl) {\n        this.layerElement.setAttribute(\"class\", this.data.cl);\n      }\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS(\"clipPath\");\n        var pt = createNS(\"path\");\n        pt.setAttribute(\"d\", \"M0,0 L\" + this.data.w + \",0 L\" + this.data.w + \",\" + this.data.h + \" L0,\" + this.data.h + \"z\");\n        var clipId = createElementID();\n        cp.setAttribute(\"id\", clipId);\n        cp.appendChild(pt);\n        this.globalData.defs.appendChild(cp);\n        if (this.checkMasks()) {\n          var cpGroup = createNS(\"g\");\n          cpGroup.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + clipId + \")\");\n          cpGroup.appendChild(this.layerElement);\n          this.transformedElement = cpGroup;\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement);\n          } else {\n            this.baseElement = this.transformedElement;\n          }\n        } else {\n          this.layerElement.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + clipId + \")\");\n        }\n      }\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function () {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.setAttribute(\"transform\", this.finalTransform.mat.to2dCSS());\n      }\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute(\"opacity\", this.finalTransform.mProp.o.v);\n      }\n    },\n    destroyBaseElement: function () {\n      this.layerElement = null;\n      this.matteElement = null;\n      this.maskManager.destroy();\n    },\n    getBaseElement: function () {\n      if (this.data.hd) {\n        return null;\n      }\n      return this.baseElement;\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n      this.renderableEffectsManager = new SVGEffects(this);\n    },\n    setMatte: function (id) {\n      if (!this.matteElement) {\n        return;\n      }\n      this.matteElement.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + id + \")\");\n    }\n  };\n  function HierarchyElement() {}\n  HierarchyElement.prototype = {\n    /**\n     * @function\n     * Initializes hierarchy properties\n     *\n     */\n    initHierarchy: function () {\n      this.hierarchy = [];\n      this._isParent = false;\n      this.checkParenting();\n    },\n    /**\n     * @function\n     * Sets layer's hierarchy.\n     * @param {array} hierarch\n     * layer's parent list\n     *\n     */\n    setHierarchy: function (hierarchy) {\n      this.hierarchy = hierarchy;\n    },\n    /**\n     * @function\n     * Sets layer as parent.\n     *\n     */\n    setAsParent: function () {\n      this._isParent = true;\n    },\n    /**\n     * @function\n     * Searches layer's parenting chain\n     *\n     */\n    checkParenting: function () {\n      if (this.data.parent !== void 0) {\n        this.comp.buildElementParenting(this, this.data.parent, []);\n      }\n    }\n  };\n  function RenderableDOMElement() {}\n  (function () {\n    var _prototype = {\n      initElement: function (data2, globalData2, comp2) {\n        this.initFrame();\n        this.initBaseData(data2, globalData2, comp2);\n        this.initTransform(data2, globalData2, comp2);\n        this.initHierarchy();\n        this.initRenderable();\n        this.initRendererElement();\n        this.createContainerElements();\n        this.createRenderableComponents();\n        this.createContent();\n        this.hide();\n      },\n      hide: function () {\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem2 = this.baseElement || this.layerElement;\n          elem2.style.display = \"none\";\n          this.hidden = true;\n        }\n      },\n      show: function () {\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem2 = this.baseElement || this.layerElement;\n            elem2.style.display = \"block\";\n          }\n          this.hidden = false;\n          this._isFirstFrame = true;\n        }\n      },\n      renderFrame: function () {\n        if (this.data.hd || this.hidden) {\n          return;\n        }\n        this.renderTransform();\n        this.renderRenderable();\n        this.renderElement();\n        this.renderInnerContent();\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false;\n        }\n      },\n      renderInnerContent: function () {},\n      prepareFrame: function (num) {\n        this._mdf = false;\n        this.prepareRenderableFrame(num);\n        this.prepareProperties(num, this.isInRange);\n        this.checkTransparency();\n      },\n      destroy: function () {\n        this.innerElem = null;\n        this.destroyBaseElement();\n      }\n    };\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\n  })();\n  function IImageElement(data2, globalData2, comp2) {\n    this.assetData = globalData2.getAssetData(data2.refId);\n    this.initElement(data2, globalData2, comp2);\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h\n    };\n  }\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.innerElem = createNS(\"image\");\n    this.innerElem.setAttribute(\"width\", this.assetData.w + \"px\");\n    this.innerElem.setAttribute(\"height\", this.assetData.h + \"px\");\n    this.innerElem.setAttribute(\"preserveAspectRatio\", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\n    this.innerElem.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", assetPath);\n    this.layerElement.appendChild(this.innerElem);\n  };\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect;\n  };\n  function ProcessedElement(element, position2) {\n    this.elem = element;\n    this.pos = position2;\n  }\n  function IShapeElement() {}\n  IShapeElement.prototype = {\n    addShapeToModifiers: function (data2) {\n      var i;\n      var len = this.shapeModifiers.length;\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data2);\n      }\n    },\n    isShapeInAnimatedModifiers: function (data2) {\n      var i = 0;\n      var len = this.shapeModifiers.length;\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data2)) {\n          return true;\n        }\n      }\n      return false;\n    },\n    renderModifiers: function () {\n      if (!this.shapeModifiers.length) {\n        return;\n      }\n      var i;\n      var len = this.shapes.length;\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset();\n      }\n      len = this.shapeModifiers.length;\n      var shouldBreakProcess;\n      for (i = len - 1; i >= 0; i -= 1) {\n        shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame);\n        if (shouldBreakProcess) {\n          break;\n        }\n      }\n    },\n    searchProcessedElement: function (elem2) {\n      var elements = this.processedElements;\n      var i = 0;\n      var len = elements.length;\n      while (i < len) {\n        if (elements[i].elem === elem2) {\n          return elements[i].pos;\n        }\n        i += 1;\n      }\n      return 0;\n    },\n    addProcessedElement: function (elem2, pos) {\n      var elements = this.processedElements;\n      var i = elements.length;\n      while (i) {\n        i -= 1;\n        if (elements[i].elem === elem2) {\n          elements[i].pos = pos;\n          return;\n        }\n      }\n      elements.push(new ProcessedElement(elem2, pos));\n    },\n    prepareFrame: function (num) {\n      this.prepareRenderableFrame(num);\n      this.prepareProperties(num, this.isInRange);\n    }\n  };\n  const lineCapEnum = {\n    1: \"butt\",\n    2: \"round\",\n    3: \"square\"\n  };\n  const lineJoinEnum = {\n    1: \"miter\",\n    2: \"round\",\n    3: \"bevel\"\n  };\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = [];\n    this.styles = [];\n    this.transformers = transformers;\n    this.lStr = \"\";\n    this.sh = shape;\n    this.lvl = level;\n    this._isAnimated = !!shape.k;\n    var i = 0;\n    var len = transformers.length;\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true;\n        break;\n      }\n      i += 1;\n    }\n  }\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true;\n  };\n  function SVGStyleData(data2, level) {\n    this.data = data2;\n    this.type = data2.ty;\n    this.d = \"\";\n    this.lvl = level;\n    this._mdf = false;\n    this.closed = data2.hd === true;\n    this.pElem = createNS(\"path\");\n    this.msElem = null;\n  }\n  SVGStyleData.prototype.reset = function () {\n    this.d = \"\";\n    this._mdf = false;\n  };\n  function DashProperty(elem2, data2, renderer, container) {\n    this.elem = elem2;\n    this.frameId = -1;\n    this.dataProps = createSizedArray(data2.length);\n    this.renderer = renderer;\n    this.k = false;\n    this.dashStr = \"\";\n    this.dashArray = createTypedArray(\"float32\", data2.length ? data2.length - 1 : 0);\n    this.dashoffset = createTypedArray(\"float32\", 1);\n    this.initDynamicPropertyContainer(container);\n    var i;\n    var len = data2.length || 0;\n    var prop;\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem2, data2[i].v, 0, 0, this);\n      this.k = prop.k || this.k;\n      this.dataProps[i] = {\n        n: data2[i].n,\n        p: prop\n      };\n    }\n    if (!this.k) {\n      this.getValue(true);\n    }\n    this._isAnimated = this.k;\n  }\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n    this._mdf = this._mdf || forceRender;\n    if (this._mdf) {\n      var i = 0;\n      var len = this.dataProps.length;\n      if (this.renderer === \"svg\") {\n        this.dashStr = \"\";\n      }\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n !== \"o\") {\n          if (this.renderer === \"svg\") {\n            this.dashStr += \" \" + this.dataProps[i].p.v;\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v;\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v;\n        }\n      }\n    }\n  };\n  extendPrototype([DynamicPropertyContainer], DashProperty);\n  function SVGStrokeStyleData(elem2, data2, styleOb) {\n    this.initDynamicPropertyContainer(elem2);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);\n    this.w = PropertyFactory.getProp(elem2, data2.w, 0, null, this);\n    this.d = new DashProperty(elem2, data2.d || {}, \"svg\", this);\n    this.c = PropertyFactory.getProp(elem2, data2.c, 1, 255, this);\n    this.style = styleOb;\n    this._isAnimated = !!this._isAnimated;\n  }\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\n  function SVGFillStyleData(elem2, data2, styleOb) {\n    this.initDynamicPropertyContainer(elem2);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);\n    this.c = PropertyFactory.getProp(elem2, data2.c, 1, 255, this);\n    this.style = styleOb;\n  }\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData);\n  function SVGNoStyleData(elem2, data2, styleOb) {\n    this.initDynamicPropertyContainer(elem2);\n    this.getValue = this.iterateDynamicProperties;\n    this.style = styleOb;\n  }\n  extendPrototype([DynamicPropertyContainer], SVGNoStyleData);\n  function GradientProperty(elem2, data2, container) {\n    this.data = data2;\n    this.c = createTypedArray(\"uint8c\", data2.p * 4);\n    var cLength = data2.k.k[0].s ? data2.k.k[0].s.length - data2.p * 4 : data2.k.k.length - data2.p * 4;\n    this.o = createTypedArray(\"float32\", cLength);\n    this._cmdf = false;\n    this._omdf = false;\n    this._collapsable = this.checkCollapsable();\n    this._hasOpacity = cLength;\n    this.initDynamicPropertyContainer(container);\n    this.prop = PropertyFactory.getProp(elem2, data2.k, 1, null, this);\n    this.k = this.prop.k;\n    this.getValue(true);\n  }\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0;\n    var len = this.o.length / 2;\n    var diff;\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);\n      if (diff > 0.01) {\n        return false;\n      }\n      i += 1;\n    }\n    return true;\n  };\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false;\n    }\n    if (this.data.k.k[0].s) {\n      var i = 0;\n      var len = this.data.k.k.length;\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false;\n        }\n        i += 1;\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false;\n    }\n    return true;\n  };\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue();\n    this._mdf = false;\n    this._cmdf = false;\n    this._omdf = false;\n    if (this.prop._mdf || forceRender) {\n      var i;\n      var len = this.data.p * 4;\n      var mult;\n      var val2;\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255;\n        val2 = Math.round(this.prop.v[i] * mult);\n        if (this.c[i] !== val2) {\n          this.c[i] = val2;\n          this._cmdf = !forceRender;\n        }\n      }\n      if (this.o.length) {\n        len = this.prop.v.length;\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1;\n          val2 = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\n          if (this.o[i - this.data.p * 4] !== val2) {\n            this.o[i - this.data.p * 4] = val2;\n            this._omdf = !forceRender;\n          }\n        }\n      }\n      this._mdf = !forceRender;\n    }\n  };\n  extendPrototype([DynamicPropertyContainer], GradientProperty);\n  function SVGGradientFillStyleData(elem2, data2, styleOb) {\n    this.initDynamicPropertyContainer(elem2);\n    this.getValue = this.iterateDynamicProperties;\n    this.initGradientData(elem2, data2, styleOb);\n  }\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem2, data2, styleOb) {\n    this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);\n    this.s = PropertyFactory.getProp(elem2, data2.s, 1, null, this);\n    this.e = PropertyFactory.getProp(elem2, data2.e, 1, null, this);\n    this.h = PropertyFactory.getProp(elem2, data2.h || {\n      k: 0\n    }, 0, 0.01, this);\n    this.a = PropertyFactory.getProp(elem2, data2.a || {\n      k: 0\n    }, 0, degToRads, this);\n    this.g = new GradientProperty(elem2, data2.g, this);\n    this.style = styleOb;\n    this.stops = [];\n    this.setGradientData(styleOb.pElem, data2);\n    this.setGradientOpacity(data2, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  };\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data2) {\n    var gradientId = createElementID();\n    var gfill = createNS(data2.t === 1 ? \"linearGradient\" : \"radialGradient\");\n    gfill.setAttribute(\"id\", gradientId);\n    gfill.setAttribute(\"spreadMethod\", \"pad\");\n    gfill.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n    var stops = [];\n    var stop;\n    var j;\n    var jLen;\n    jLen = data2.g.p * 4;\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS(\"stop\");\n      gfill.appendChild(stop);\n      stops.push(stop);\n    }\n    pathElement.setAttribute(data2.ty === \"gf\" ? \"fill\" : \"stroke\", \"url(\" + getLocationHref() + \"#\" + gradientId + \")\");\n    this.gf = gfill;\n    this.cst = stops;\n  };\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data2, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop;\n      var j;\n      var jLen;\n      var mask2 = createNS(\"mask\");\n      var maskElement = createNS(\"path\");\n      mask2.appendChild(maskElement);\n      var opacityId = createElementID();\n      var maskId = createElementID();\n      mask2.setAttribute(\"id\", maskId);\n      var opFill = createNS(data2.t === 1 ? \"linearGradient\" : \"radialGradient\");\n      opFill.setAttribute(\"id\", opacityId);\n      opFill.setAttribute(\"spreadMethod\", \"pad\");\n      opFill.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n      jLen = data2.g.k.k[0].s ? data2.g.k.k[0].s.length : data2.g.k.k.length;\n      var stops = this.stops;\n      for (j = data2.g.p * 4; j < jLen; j += 2) {\n        stop = createNS(\"stop\");\n        stop.setAttribute(\"stop-color\", \"rgb(255,255,255)\");\n        opFill.appendChild(stop);\n        stops.push(stop);\n      }\n      maskElement.setAttribute(data2.ty === \"gf\" ? \"fill\" : \"stroke\", \"url(\" + getLocationHref() + \"#\" + opacityId + \")\");\n      if (data2.ty === \"gs\") {\n        maskElement.setAttribute(\"stroke-linecap\", lineCapEnum[data2.lc || 2]);\n        maskElement.setAttribute(\"stroke-linejoin\", lineJoinEnum[data2.lj || 2]);\n        if (data2.lj === 1) {\n          maskElement.setAttribute(\"stroke-miterlimit\", data2.ml);\n        }\n      }\n      this.of = opFill;\n      this.ms = mask2;\n      this.ost = stops;\n      this.maskId = maskId;\n      styleOb.msElem = maskElement;\n    }\n  };\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\n  function SVGGradientStrokeStyleData(elem2, data2, styleOb) {\n    this.initDynamicPropertyContainer(elem2);\n    this.getValue = this.iterateDynamicProperties;\n    this.w = PropertyFactory.getProp(elem2, data2.w, 0, null, this);\n    this.d = new DashProperty(elem2, data2.d || {}, \"svg\", this);\n    this.initGradientData(elem2, data2, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  }\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\n  function ShapeGroupData() {\n    this.it = [];\n    this.prevViewData = [];\n    this.gr = createNS(\"g\");\n  }\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps,\n      op,\n      container\n    };\n    this.elements = [];\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\n  }\n  const buildShapeString = function (pathNodes, length2, closed, mat) {\n    if (length2 === 0) {\n      return \"\";\n    }\n    var _o = pathNodes.o;\n    var _i = pathNodes.i;\n    var _v = pathNodes.v;\n    var i;\n    var shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n    for (i = 1; i < length2; i += 1) {\n      shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\n    }\n    if (closed && length2) {\n      shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n      shapeString += \"z\";\n    }\n    return shapeString;\n  };\n  const SVGElementsRenderer = function () {\n    var _identityMatrix = new Matrix();\n    var _matrixHelper = new Matrix();\n    var ob2 = {\n      createRenderFunction\n    };\n    function createRenderFunction(data2) {\n      switch (data2.ty) {\n        case \"fl\":\n          return renderFill;\n        case \"gf\":\n          return renderGradient;\n        case \"gs\":\n          return renderGradientStroke;\n        case \"st\":\n          return renderStroke;\n        case \"sh\":\n        case \"el\":\n        case \"rc\":\n        case \"sr\":\n          return renderPath;\n        case \"tr\":\n          return renderContentTransform;\n        case \"no\":\n          return renderNoop;\n        default:\n          return null;\n      }\n    }\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute(\"opacity\", itemData.transform.op.v);\n      }\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute(\"transform\", itemData.transform.mProps.v.to2dCSS());\n      }\n    }\n    function renderNoop() {}\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j;\n      var jLen;\n      var pathStringTransformed;\n      var redraw;\n      var pathNodes;\n      var l;\n      var lLen = itemData.styles.length;\n      var lvl = itemData.lvl;\n      var paths;\n      var mat;\n      var props;\n      var iterations;\n      var k;\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame;\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset();\n          iterations = lvl - itemData.styles[l].lvl;\n          k = itemData.transformers.length - 1;\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw;\n            iterations -= 1;\n            k -= 1;\n          }\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl;\n            k = itemData.transformers.length - 1;\n            while (iterations > 0) {\n              props = itemData.transformers[k].mProps.v.props;\n              mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n              iterations -= 1;\n              k -= 1;\n            }\n          }\n        } else {\n          mat = _identityMatrix;\n        }\n        paths = itemData.sh.paths;\n        jLen = paths._length;\n        if (redraw) {\n          pathStringTransformed = \"\";\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j];\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\n            }\n          }\n          itemData.caches[l] = pathStringTransformed;\n        } else {\n          pathStringTransformed = itemData.caches[l];\n        }\n        itemData.styles[l].d += styleData.hd === true ? \"\" : pathStringTransformed;\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\n      }\n    }\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"fill\", \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\");\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"fill-opacity\", itemData.o.v);\n      }\n    }\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame);\n      renderStroke(styleData, itemData, isFirstFrame);\n    }\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf;\n      var hasOpacity = itemData.g._hasOpacity;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === \"gf\" ? \"fill-opacity\" : \"stroke-opacity\";\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\n      }\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? \"x1\" : \"cx\";\n        var attr2 = attr1 === \"x1\" ? \"y1\" : \"cy\";\n        gfill.setAttribute(attr1, pt1[0]);\n        gfill.setAttribute(attr2, pt1[1]);\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0]);\n          itemData.of.setAttribute(attr2, pt1[1]);\n        }\n      }\n      var stops;\n      var i;\n      var len;\n      var stop;\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst;\n        var cValues = itemData.g.c;\n        len = stops.length;\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          stop.setAttribute(\"offset\", cValues[i * 4] + \"%\");\n          stop.setAttribute(\"stop-color\", \"rgb(\" + cValues[i * 4 + 1] + \",\" + cValues[i * 4 + 2] + \",\" + cValues[i * 4 + 3] + \")\");\n        }\n      }\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o;\n        if (itemData.g._collapsable) {\n          stops = itemData.cst;\n        } else {\n          stops = itemData.ost;\n        }\n        len = stops.length;\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          if (!itemData.g._collapsable) {\n            stop.setAttribute(\"offset\", oValues[i * 2] + \"%\");\n          }\n          stop.setAttribute(\"stop-opacity\", oValues[i * 2 + 1]);\n        }\n      }\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute(\"x2\", pt2[0]);\n          gfill.setAttribute(\"y2\", pt2[1]);\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute(\"x2\", pt2[0]);\n            itemData.of.setAttribute(\"y2\", pt2[1]);\n          }\n        }\n      } else {\n        var rad;\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          gfill.setAttribute(\"r\", rad);\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute(\"r\", rad);\n          }\n        }\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          }\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n          var percent = itemData.h.v;\n          if (percent >= 1) {\n            percent = 0.99;\n          } else if (percent <= -1) {\n            percent = -0.99;\n          }\n          var dist = rad * percent;\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n          gfill.setAttribute(\"fx\", x);\n          gfill.setAttribute(\"fy\", y);\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute(\"fx\", x);\n            itemData.of.setAttribute(\"fy\", y);\n          }\n        }\n      }\n    }\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      var d = itemData.d;\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute(\"stroke-dasharray\", d.dashStr);\n        styleElem.pElem.setAttribute(\"stroke-dashoffset\", d.dashoffset[0]);\n      }\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute(\"stroke\", \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\");\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"stroke-opacity\", itemData.o.v);\n      }\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"stroke-width\", itemData.w.v);\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute(\"stroke-width\", itemData.w.v);\n        }\n      }\n    }\n    return ob2;\n  }();\n  function SVGShapeElement(data2, globalData2, comp2) {\n    this.shapes = [];\n    this.shapesData = data2.shapes;\n    this.stylesList = [];\n    this.shapeModifiers = [];\n    this.itemsData = [];\n    this.processedElements = [];\n    this.animatedContents = [];\n    this.initElement(data2, globalData2, comp2);\n    this.prevViewData = [];\n  }\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);\n  SVGShapeElement.prototype.initSecondaryElement = function () {};\n  SVGShapeElement.prototype.identityMatrix = new Matrix();\n  SVGShapeElement.prototype.buildExpressionInterface = function () {};\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n  };\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i;\n    var len = this.shapes.length;\n    var shape;\n    var j;\n    var jLen = this.stylesList.length;\n    var style;\n    var tempShapes = [];\n    var areAnimated = false;\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j];\n      areAnimated = false;\n      tempShapes.length = 0;\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i];\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape);\n          areAnimated = shape._isAnimated || areAnimated;\n        }\n      }\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes);\n      }\n    }\n  };\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i;\n    var len = shapes.length;\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated();\n    }\n  };\n  SVGShapeElement.prototype.createStyleElement = function (data2, level) {\n    var elementData;\n    var styleOb = new SVGStyleData(data2, level);\n    var pathElement = styleOb.pElem;\n    if (data2.ty === \"st\") {\n      elementData = new SVGStrokeStyleData(this, data2, styleOb);\n    } else if (data2.ty === \"fl\") {\n      elementData = new SVGFillStyleData(this, data2, styleOb);\n    } else if (data2.ty === \"gf\" || data2.ty === \"gs\") {\n      var GradientConstructor = data2.ty === \"gf\" ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\n      elementData = new GradientConstructor(this, data2, styleOb);\n      this.globalData.defs.appendChild(elementData.gf);\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms);\n        this.globalData.defs.appendChild(elementData.of);\n        pathElement.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + elementData.maskId + \")\");\n      }\n    } else if (data2.ty === \"no\") {\n      elementData = new SVGNoStyleData(this, data2, styleOb);\n    }\n    if (data2.ty === \"st\" || data2.ty === \"gs\") {\n      pathElement.setAttribute(\"stroke-linecap\", lineCapEnum[data2.lc || 2]);\n      pathElement.setAttribute(\"stroke-linejoin\", lineJoinEnum[data2.lj || 2]);\n      pathElement.setAttribute(\"fill-opacity\", \"0\");\n      if (data2.lj === 1) {\n        pathElement.setAttribute(\"stroke-miterlimit\", data2.ml);\n      }\n    }\n    if (data2.r === 2) {\n      pathElement.setAttribute(\"fill-rule\", \"evenodd\");\n    }\n    if (data2.ln) {\n      pathElement.setAttribute(\"id\", data2.ln);\n    }\n    if (data2.cl) {\n      pathElement.setAttribute(\"class\", data2.cl);\n    }\n    if (data2.bm) {\n      pathElement.style[\"mix-blend-mode\"] = getBlendMode(data2.bm);\n    }\n    this.stylesList.push(styleOb);\n    this.addToAnimatedContents(data2, elementData);\n    return elementData;\n  };\n  SVGShapeElement.prototype.createGroupElement = function (data2) {\n    var elementData = new ShapeGroupData();\n    if (data2.ln) {\n      elementData.gr.setAttribute(\"id\", data2.ln);\n    }\n    if (data2.cl) {\n      elementData.gr.setAttribute(\"class\", data2.cl);\n    }\n    if (data2.bm) {\n      elementData.gr.style[\"mix-blend-mode\"] = getBlendMode(data2.bm);\n    }\n    return elementData;\n  };\n  SVGShapeElement.prototype.createTransformElement = function (data2, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data2, this);\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\n    this.addToAnimatedContents(data2, elementData);\n    return elementData;\n  };\n  SVGShapeElement.prototype.createShapeElement = function (data2, ownTransformers, level) {\n    var ty = 4;\n    if (data2.ty === \"rc\") {\n      ty = 5;\n    } else if (data2.ty === \"el\") {\n      ty = 6;\n    } else if (data2.ty === \"sr\") {\n      ty = 7;\n    }\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data2, ty, this);\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    this.addToAnimatedContents(data2, elementData);\n    return elementData;\n  };\n  SVGShapeElement.prototype.addToAnimatedContents = function (data2, element) {\n    var i = 0;\n    var len = this.animatedContents.length;\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return;\n      }\n      i += 1;\n    }\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data2),\n      element,\n      data: data2\n    });\n  };\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles;\n    var j;\n    var jLen = this.stylesList.length;\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j]);\n      }\n    }\n  };\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n    len = this.dynamicProperties.length;\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n    this.renderModifiers();\n  };\n  SVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {\n    var ownTransformers = [].concat(transformers);\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var currentTransform;\n    var modifier;\n    var processedPos;\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n      if (!processedPos) {\n        arr[i]._render = render;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n      if (arr[i].ty === \"fl\" || arr[i].ty === \"st\" || arr[i].ty === \"gf\" || arr[i].ty === \"gs\" || arr[i].ty === \"no\") {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n        if (arr[i]._render) {\n          if (itemsData[i].style.pElem.parentNode !== container) {\n            container.appendChild(itemsData[i].style.pElem);\n          }\n        }\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === \"gr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);\n        if (arr[i]._render) {\n          if (itemsData[i].gr.parentNode !== container) {\n            container.appendChild(itemsData[i].gr);\n          }\n        }\n      } else if (arr[i].ty === \"tr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container);\n        }\n        currentTransform = itemsData[i].transform;\n        ownTransformers.push(currentTransform);\n      } else if (arr[i].ty === \"sh\" || arr[i].ty === \"rc\" || arr[i].ty === \"el\" || arr[i].ty === \"sr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\n        }\n        this.setElementStyles(itemsData[i]);\n      } else if (arr[i].ty === \"tm\" || arr[i].ty === \"rd\" || arr[i].ty === \"ms\" || arr[i].ty === \"pb\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === \"rp\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          render = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n        ownModifiers.push(modifier);\n      }\n      this.addProcessedElement(arr[i], i + 1);\n    }\n    len = ownStyles.length;\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true;\n    }\n    len = ownModifiers.length;\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers();\n    var i;\n    var len = this.stylesList.length;\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset();\n    }\n    this.renderShape();\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute(\"d\", this.stylesList[i].d);\n          this.stylesList[i].d = \"M0 0\" + this.stylesList[i].d;\n        }\n        this.stylesList[i].pElem.setAttribute(\"d\", this.stylesList[i].d || \"M0 0\");\n      }\n    }\n  };\n  SVGShapeElement.prototype.renderShape = function () {\n    var i;\n    var len = this.animatedContents.length;\n    var animatedContent;\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i];\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\n      }\n    }\n  };\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement();\n    this.shapesData = null;\n    this.itemsData = null;\n  };\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o;\n    this.sw = sw;\n    this.sc = sc;\n    this.fc = fc;\n    this.m = m;\n    this.p = p;\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true\n    };\n  }\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false;\n    this._mdf.sw = false;\n    this._mdf.sc = false;\n    this._mdf.fc = false;\n    this._mdf.m = false;\n    this._mdf.p = false;\n    var updated = false;\n    if (this.o !== o) {\n      this.o = o;\n      this._mdf.o = true;\n      updated = true;\n    }\n    if (this.sw !== sw) {\n      this.sw = sw;\n      this._mdf.sw = true;\n      updated = true;\n    }\n    if (this.sc !== sc) {\n      this.sc = sc;\n      this._mdf.sc = true;\n      updated = true;\n    }\n    if (this.fc !== fc) {\n      this.fc = fc;\n      this._mdf.fc = true;\n      updated = true;\n    }\n    if (this.m !== m) {\n      this.m = m;\n      this._mdf.m = true;\n      updated = true;\n    }\n    if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\n      this.p = p;\n      this._mdf.p = true;\n      updated = true;\n    }\n    return updated;\n  };\n  function TextProperty(elem2, data2) {\n    this._frameId = initialDefaultFrame;\n    this.pv = \"\";\n    this.v = \"\";\n    this.kf = false;\n    this._isFirstFrame = true;\n    this._mdf = false;\n    this.data = data2;\n    this.elem = elem2;\n    this.comp = this.elem.comp;\n    this.keysIndex = 0;\n    this.canResize = false;\n    this.minimumFontSize = 1;\n    this.effectsSequence = [];\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: \"\",\n      fStyle: \"\",\n      fWeight: \"\",\n      fc: \"\",\n      j: \"\",\n      justifyOffset: \"\",\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: \"\",\n      of: \"\",\n      s: \"\",\n      sc: \"\",\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false\n    };\n    this.copyData(this.currentData, this.data.d.k[0].s);\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData);\n    }\n  }\n  TextProperty.prototype.defaultBoxWidth = [0, 0];\n  TextProperty.prototype.copyData = function (obj, data2) {\n    for (var s in data2) {\n      if (Object.prototype.hasOwnProperty.call(data2, s)) {\n        obj[s] = data2[s];\n      }\n    }\n    return obj;\n  };\n  TextProperty.prototype.setCurrentData = function (data2) {\n    if (!data2.__complete) {\n      this.completeTextData(data2);\n    }\n    this.currentData = data2;\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\n    this._mdf = true;\n  };\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes();\n  };\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1;\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this));\n    }\n    return this.kf;\n  };\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction);\n    this.elem.addDynamicProperty(this);\n  };\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return;\n    }\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\n    var currentValue = this.currentData;\n    var currentIndex = this.keysIndex;\n    if (this.lock) {\n      this.setCurrentData(this.currentData);\n      return;\n    }\n    this.lock = true;\n    this._mdf = false;\n    var i;\n    var len = this.effectsSequence.length;\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\n    for (i = 0; i < len; i += 1) {\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t);\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\n      }\n    }\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue);\n    }\n    this.v = this.currentData;\n    this.pv = this.v;\n    this.lock = false;\n    this.frameId = this.elem.globalData.frameId;\n  };\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k;\n    var frameNum = this.elem.comp.renderedFrame;\n    var i = 0;\n    var len = textKeys.length;\n    while (i <= len - 1) {\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break;\n      }\n      i += 1;\n    }\n    if (this.keysIndex !== i) {\n      this.keysIndex = i;\n    }\n    return this.data.d.k[this.keysIndex].s;\n  };\n  TextProperty.prototype.buildFinalText = function (text2) {\n    var charactersArray = [];\n    var i = 0;\n    var len = text2.length;\n    var charCode;\n    var secondCharCode;\n    var shouldCombine = false;\n    while (i < len) {\n      charCode = text2.charCodeAt(i);\n      if (FontManager.isCombinedCharacter(charCode)) {\n        charactersArray[charactersArray.length - 1] += text2.charAt(i);\n      } else if (charCode >= 55296 && charCode <= 56319) {\n        secondCharCode = text2.charCodeAt(i + 1);\n        if (secondCharCode >= 56320 && secondCharCode <= 57343) {\n          if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {\n            charactersArray[charactersArray.length - 1] += text2.substr(i, 2);\n            shouldCombine = false;\n          } else {\n            charactersArray.push(text2.substr(i, 2));\n          }\n          i += 1;\n        } else {\n          charactersArray.push(text2.charAt(i));\n        }\n      } else if (charCode > 56319) {\n        secondCharCode = text2.charCodeAt(i + 1);\n        if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {\n          shouldCombine = true;\n          charactersArray[charactersArray.length - 1] += text2.substr(i, 2);\n          i += 1;\n        } else {\n          charactersArray.push(text2.charAt(i));\n        }\n      } else if (FontManager.isZeroWidthJoiner(charCode)) {\n        charactersArray[charactersArray.length - 1] += text2.charAt(i);\n        shouldCombine = true;\n      } else {\n        charactersArray.push(text2.charAt(i));\n      }\n      i += 1;\n    }\n    return charactersArray;\n  };\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true;\n    var fontManager = this.elem.globalData.fontManager;\n    var data2 = this.data;\n    var letters = [];\n    var i;\n    var len;\n    var newLineFlag;\n    var index2 = 0;\n    var val2;\n    var anchorGrouping = data2.m.g;\n    var currentSize = 0;\n    var currentPos = 0;\n    var currentLine = 0;\n    var lineWidths = [];\n    var lineWidth = 0;\n    var maxLineWidth = 0;\n    var j;\n    var jLen;\n    var fontData = fontManager.getFontByName(documentData.f);\n    var charData;\n    var cLength = 0;\n    var fontProps = getFontProperties(fontData);\n    documentData.fWeight = fontProps.weight;\n    documentData.fStyle = fontProps.style;\n    documentData.finalSize = documentData.s;\n    documentData.finalText = this.buildFinalText(documentData.t);\n    len = documentData.finalText.length;\n    documentData.finalLineHeight = documentData.lh;\n    var trackingOffset = documentData.tr / 1e3 * documentData.finalSize;\n    var charCode;\n    if (documentData.sz) {\n      var flag = true;\n      var boxWidth = documentData.sz[0];\n      var boxHeight = documentData.sz[1];\n      var currentHeight;\n      var finalText;\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t);\n        currentHeight = 0;\n        lineWidth = 0;\n        len = finalText.length;\n        trackingOffset = documentData.tr / 1e3 * documentData.finalSize;\n        var lastSpaceIndex = -1;\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0);\n          newLineFlag = false;\n          if (finalText[i] === \" \") {\n            lastSpaceIndex = i;\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0;\n            newLineFlag = true;\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n          }\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\n            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n          } else {\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\n          }\n          if (lineWidth + cLength > boxWidth && finalText[i] !== \" \") {\n            if (lastSpaceIndex === -1) {\n              len += 1;\n            } else {\n              i = lastSpaceIndex;\n            }\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, \"\\r\");\n            lastSpaceIndex = -1;\n            lineWidth = 0;\n          } else {\n            lineWidth += cLength;\n            lineWidth += trackingOffset;\n          }\n        }\n        currentHeight += fontData.ascent * documentData.finalSize / 100;\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1;\n          documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\n        } else {\n          documentData.finalText = finalText;\n          len = documentData.finalText.length;\n          flag = false;\n        }\n      }\n    }\n    lineWidth = -trackingOffset;\n    cLength = 0;\n    var uncollapsedSpaces = 0;\n    var currentChar;\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false;\n      currentChar = documentData.finalText[i];\n      charCode = currentChar.charCodeAt(0);\n      if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0;\n        lineWidths.push(lineWidth);\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n        lineWidth = -2 * trackingOffset;\n        val2 = \"\";\n        newLineFlag = true;\n        currentLine += 1;\n      } else {\n        val2 = currentChar;\n      }\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\n        cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n      } else {\n        cLength = fontManager.measureText(val2, documentData.f, documentData.finalSize);\n      }\n      if (currentChar === \" \") {\n        uncollapsedSpaces += cLength + trackingOffset;\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces;\n        uncollapsedSpaces = 0;\n      }\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val2,\n        line: currentLine,\n        animatorJustifyOffset: 0\n      });\n      if (anchorGrouping == 2) {\n        currentSize += cLength;\n        if (val2 === \"\" || val2 === \" \" || i === len - 1) {\n          if (val2 === \"\" || val2 === \" \") {\n            currentSize -= cLength;\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index2;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n          index2 += 1;\n          currentSize = 0;\n        }\n      } else if (anchorGrouping == 3) {\n        currentSize += cLength;\n        if (val2 === \"\" || i === len - 1) {\n          if (val2 === \"\") {\n            currentSize -= cLength;\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index2;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n          currentSize = 0;\n          index2 += 1;\n        }\n      } else {\n        letters[index2].ind = index2;\n        letters[index2].extra = 0;\n        index2 += 1;\n      }\n    }\n    documentData.l = letters;\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n    lineWidths.push(lineWidth);\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0];\n      documentData.justifyOffset = 0;\n    } else {\n      documentData.boxWidth = maxLineWidth;\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth;\n          break;\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2;\n          break;\n        default:\n          documentData.justifyOffset = 0;\n      }\n    }\n    documentData.lineWidths = lineWidths;\n    var animators = data2.a;\n    var animatorData;\n    var letterData;\n    jLen = animators.length;\n    var based;\n    var ind;\n    var indexes = [];\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j];\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true;\n      }\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true;\n      }\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true;\n      }\n      ind = 0;\n      based = animatorData.s.b;\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i];\n        letterData.anIndexes[j] = ind;\n        if (based == 1 && letterData.val !== \"\" || based == 2 && letterData.val !== \"\" && letterData.val !== \" \" || based == 3 && (letterData.n || letterData.val == \" \" || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind);\n          }\n          ind += 1;\n        }\n      }\n      data2.a[j].s.totalChars = ind;\n      var currentInd = -1;\n      var newInd;\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i];\n          if (currentInd != letterData.anIndexes[j]) {\n            currentInd = letterData.anIndexes[j];\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\n          }\n          letterData.anIndexes[j] = newInd;\n        }\n      }\n    }\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;\n    documentData.ls = documentData.ls || 0;\n    documentData.ascent = fontData.ascent * documentData.finalSize / 100;\n  };\n  TextProperty.prototype.updateDocumentData = function (newData, index2) {\n    index2 = index2 === void 0 ? this.keysIndex : index2;\n    var dData = this.copyData({}, this.data.d.k[index2].s);\n    dData = this.copyData(dData, newData);\n    this.data.d.k[index2].s = dData;\n    this.recalculate(index2);\n    this.elem.addDynamicProperty(this);\n  };\n  TextProperty.prototype.recalculate = function (index2) {\n    var dData = this.data.d.k[index2].s;\n    dData.__complete = false;\n    this.keysIndex = 0;\n    this._isFirstFrame = true;\n    this.getValue(dData);\n  };\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n  const TextSelectorProp = function () {\n    var max = Math.max;\n    var min = Math.min;\n    var floor = Math.floor;\n    function TextSelectorPropFactory(elem2, data2) {\n      this._currentTextLength = -1;\n      this.k = false;\n      this.data = data2;\n      this.elem = elem2;\n      this.comp = elem2.comp;\n      this.finalS = 0;\n      this.finalE = 0;\n      this.initDynamicPropertyContainer(elem2);\n      this.s = PropertyFactory.getProp(elem2, data2.s || {\n        k: 0\n      }, 0, 0, this);\n      if (\"e\" in data2) {\n        this.e = PropertyFactory.getProp(elem2, data2.e, 0, 0, this);\n      } else {\n        this.e = {\n          v: 100\n        };\n      }\n      this.o = PropertyFactory.getProp(elem2, data2.o || {\n        k: 0\n      }, 0, 0, this);\n      this.xe = PropertyFactory.getProp(elem2, data2.xe || {\n        k: 0\n      }, 0, 0, this);\n      this.ne = PropertyFactory.getProp(elem2, data2.ne || {\n        k: 0\n      }, 0, 0, this);\n      this.sm = PropertyFactory.getProp(elem2, data2.sm || {\n        k: 100\n      }, 0, 0, this);\n      this.a = PropertyFactory.getProp(elem2, data2.a, 0, 0.01, this);\n      if (!this.dynamicProperties.length) {\n        this.getValue();\n      }\n    }\n    TextSelectorPropFactory.prototype = {\n      getMult: function (ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue();\n        }\n        var x1 = 0;\n        var y1 = 0;\n        var x2 = 1;\n        var y2 = 1;\n        if (this.ne.v > 0) {\n          x1 = this.ne.v / 100;\n        } else {\n          y1 = -this.ne.v / 100;\n        }\n        if (this.xe.v > 0) {\n          x2 = 1 - this.xe.v / 100;\n        } else {\n          y2 = 1 + this.xe.v / 100;\n        }\n        var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;\n        var mult = 0;\n        var s = this.finalS;\n        var e = this.finalE;\n        var type = this.data.sh;\n        if (type === 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n          mult = easer(mult);\n        } else if (type === 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1;\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n          mult = easer(mult);\n        } else if (type === 4) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n            if (mult < 0.5) {\n              mult *= 2;\n            } else {\n              mult = 1 - 2 * (mult - 0.5);\n            }\n          }\n          mult = easer(mult);\n        } else if (type === 5) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            var tot = e - s;\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            var x = -tot / 2 + ind;\n            var a = tot / 2;\n            mult = Math.sqrt(1 - x * x / (a * a));\n          }\n          mult = easer(mult);\n        } else if (type === 6) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2;\n          }\n          mult = easer(mult);\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = max(0, min(min(e, 1) - (s - ind), 1));\n            } else {\n              mult = max(0, min(e - ind, 1));\n            }\n          }\n          mult = easer(mult);\n        }\n        if (this.sm.v !== 100) {\n          var smoothness = this.sm.v * 0.01;\n          if (smoothness === 0) {\n            smoothness = 1e-8;\n          }\n          var threshold = 0.5 - smoothness * 0.5;\n          if (mult < threshold) {\n            mult = 0;\n          } else {\n            mult = (mult - threshold) / smoothness;\n            if (mult > 1) {\n              mult = 1;\n            }\n          }\n        }\n        return mult * this.a.v;\n      },\n      getValue: function (newCharsFlag) {\n        this.iterateDynamicProperties();\n        this._mdf = newCharsFlag || this._mdf;\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength;\n        }\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\n        var o = this.o.v / divisor;\n        var s = this.s.v / divisor + o;\n        var e = this.e.v / divisor + o;\n        if (s > e) {\n          var _s = s;\n          s = e;\n          e = _s;\n        }\n        this.finalS = s;\n        this.finalE = e;\n      }\n    };\n    extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);\n    function getTextSelectorProp(elem2, data2, arr) {\n      return new TextSelectorPropFactory(elem2, data2);\n    }\n    return {\n      getTextSelectorProp\n    };\n  }();\n  function TextAnimatorDataProperty(elem2, animatorProps, container) {\n    var defaultData = {\n      propType: false\n    };\n    var getProp = PropertyFactory.getProp;\n    var textAnimatorAnimatables = animatorProps.a;\n    this.a = {\n      r: textAnimatorAnimatables.r ? getProp(elem2, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimatorAnimatables.rx ? getProp(elem2, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimatorAnimatables.ry ? getProp(elem2, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimatorAnimatables.sk ? getProp(elem2, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimatorAnimatables.sa ? getProp(elem2, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimatorAnimatables.s ? getProp(elem2, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimatorAnimatables.a ? getProp(elem2, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\n      o: textAnimatorAnimatables.o ? getProp(elem2, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimatorAnimatables.p ? getProp(elem2, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\n      sw: textAnimatorAnimatables.sw ? getProp(elem2, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimatorAnimatables.sc ? getProp(elem2, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimatorAnimatables.fc ? getProp(elem2, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimatorAnimatables.fh ? getProp(elem2, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimatorAnimatables.fs ? getProp(elem2, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimatorAnimatables.fb ? getProp(elem2, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimatorAnimatables.t ? getProp(elem2, textAnimatorAnimatables.t, 0, 0, container) : defaultData\n    };\n    this.s = TextSelectorProp.getTextSelectorProp(elem2, animatorProps.s, container);\n    this.s.t = animatorProps.s.t;\n  }\n  function TextAnimatorProperty(textData, renderType, elem2) {\n    this._isFirstFrame = true;\n    this._hasMaskedPath = false;\n    this._frameId = -1;\n    this._textData = textData;\n    this._renderType = renderType;\n    this._elem = elem2;\n    this._animatorsData = createSizedArray(this._textData.a.length);\n    this._pathData = {};\n    this._moreOptions = {\n      alignment: {}\n    };\n    this.renderedLetters = [];\n    this.lettersChangedFlag = false;\n    this.initDynamicPropertyContainer(elem2);\n  }\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i;\n    var len = this._textData.a.length;\n    var animatorProps;\n    var getProp = PropertyFactory.getProp;\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i];\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\n    }\n    if (this._textData.p && \"m\" in this._textData.p) {\n      this._pathData = {\n        a: getProp(this._elem, this._textData.p.a, 0, 0, this),\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: getProp(this._elem, this._textData.p.r, 0, 0, this),\n        p: getProp(this._elem, this._textData.p.p, 0, 0, this),\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\n      };\n      this._hasMaskedPath = true;\n    } else {\n      this._hasMaskedPath = false;\n    }\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);\n  };\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag;\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return;\n    }\n    this._isFirstFrame = false;\n    var alignment = this._moreOptions.alignment.v;\n    var animators = this._animatorsData;\n    var textData = this._textData;\n    var matrixHelper = this.mHelper;\n    var renderType = this._renderType;\n    var renderedLettersCount = this.renderedLetters.length;\n    var xPos;\n    var yPos;\n    var i;\n    var len;\n    var letters = documentData.l;\n    var pathInfo;\n    var currentLength;\n    var currentPoint;\n    var segmentLength;\n    var flag;\n    var pointInd;\n    var segmentInd;\n    var prevPoint;\n    var points;\n    var segments;\n    var partialLength;\n    var totalLength;\n    var perc;\n    var tanAngle;\n    var mask2;\n    if (this._hasMaskedPath) {\n      mask2 = this._pathData.m;\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask2.v;\n        if (this._pathData.r.v) {\n          paths = paths.reverse();\n        }\n        pathInfo = {\n          tLength: 0,\n          segments: []\n        };\n        len = paths._length - 1;\n        var bezierData;\n        totalLength = 0;\n        for (i = 0; i < len; i += 1) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[i + 1], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n        i = len;\n        if (mask2.v.c) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[0], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n        this._pathData.pi = pathInfo;\n      }\n      pathInfo = this._pathData.pi;\n      currentLength = this._pathData.f.v;\n      segmentInd = 0;\n      pointInd = 1;\n      segmentLength = 0;\n      flag = true;\n      segments = pathInfo.segments;\n      if (currentLength < 0 && mask2.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength;\n        }\n        segmentInd = segments.length - 1;\n        points = segments[segmentInd].points;\n        pointInd = points.length - 1;\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength;\n          pointInd -= 1;\n          if (pointInd < 0) {\n            segmentInd -= 1;\n            points = segments[segmentInd].points;\n            pointInd = points.length - 1;\n          }\n        }\n      }\n      points = segments[segmentInd].points;\n      prevPoint = points[pointInd - 1];\n      currentPoint = points[pointInd];\n      partialLength = currentPoint.partialLength;\n    }\n    len = letters.length;\n    xPos = 0;\n    yPos = 0;\n    var yOff = documentData.finalSize * 1.2 * 0.714;\n    var firstLine = true;\n    var animatorProps;\n    var animatorSelector;\n    var j;\n    var jLen;\n    var letterValue;\n    jLen = animators.length;\n    var mult;\n    var ind = -1;\n    var offf;\n    var xPathPos;\n    var yPathPos;\n    var initPathPos = currentLength;\n    var initSegmentInd = segmentInd;\n    var initPointInd = pointInd;\n    var currentLine = -1;\n    var elemOpacity;\n    var sc;\n    var sw;\n    var fc;\n    var k;\n    var letterSw;\n    var letterSc;\n    var letterFc;\n    var letterM = \"\";\n    var letterP = this.defaultPropsArray;\n    var letterO;\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0;\n      var animatorFirstCharOffset = 0;\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\n      var lastIndex = 0;\n      var isNewLine = true;\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset;\n          }\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n            lastIndex += 1;\n          }\n          animatorJustifyOffset = 0;\n          isNewLine = true;\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\n              }\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;\n              }\n            }\n          }\n          isNewLine = false;\n        }\n      }\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset;\n      }\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n        lastIndex += 1;\n      }\n    }\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset();\n      elemOpacity = 1;\n      if (letters[i].n) {\n        xPos = 0;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        currentLength = initPathPos;\n        firstLine = false;\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd;\n          pointInd = initPointInd;\n          points = segments[segmentInd].points;\n          prevPoint = points[pointInd - 1];\n          currentPoint = points[pointInd];\n          partialLength = currentPoint.partialLength;\n          segmentLength = 0;\n        }\n        letterM = \"\";\n        letterFc = \"\";\n        letterSw = \"\";\n        letterO = \"\";\n        letterP = this.defaultPropsArray;\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line];\n                break;\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\n                break;\n            }\n            currentLine = letters[i].line;\n          }\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra;\n            }\n            currentLength += letters[i].an / 2;\n            ind = letters[i].ind;\n          }\n          currentLength += alignment[0] * letters[i].an * 5e-3;\n          var animatorOffset = 0;\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult;\n              }\n            }\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult;\n              }\n            }\n          }\n          flag = true;\n          if (this._pathData.a.v) {\n            currentLength = letters[0].an * 0.5 + (totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind / (len - 1);\n            currentLength += this._pathData.f.v;\n          }\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\n              matrixHelper.translate(-alignment[0] * letters[i].an * 5e-3, -(alignment[1] * yOff) * 0.01);\n              flag = false;\n            } else if (points) {\n              segmentLength += currentPoint.partialLength;\n              pointInd += 1;\n              if (pointInd >= points.length) {\n                pointInd = 0;\n                segmentInd += 1;\n                if (!segments[segmentInd]) {\n                  if (mask2.v.c) {\n                    pointInd = 0;\n                    segmentInd = 0;\n                    points = segments[segmentInd].points;\n                  } else {\n                    segmentLength -= currentPoint.partialLength;\n                    points = null;\n                  }\n                } else {\n                  points = segments[segmentInd].points;\n                }\n              }\n              if (points) {\n                prevPoint = currentPoint;\n                currentPoint = points[pointInd];\n                partialLength = currentPoint.partialLength;\n              }\n            }\n          }\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n        } else {\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n          matrixHelper.translate(-alignment[0] * letters[i].an * 5e-3, -alignment[1] * yOff * 0.01, 0);\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0];\n                } else {\n                  currentLength += animatorProps.t.v * mult;\n                }\n              } else if (mult.length) {\n                xPos += animatorProps.t.v * mult[0];\n              } else {\n                xPos += animatorProps.t.v * mult;\n              }\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0;\n        }\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\n          } else {\n            sc = [0, 0, 0];\n          }\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (mult.length) {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          animatorSelector = animators[j].s;\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\n            }\n          }\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult);\n            }\n          }\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult);\n            }\n          }\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult);\n            }\n          }\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;\n            }\n          }\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0];\n            } else {\n              sw += animatorProps.sw.v * mult;\n            }\n          }\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0];\n              } else {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult;\n              }\n            }\n          }\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0];\n                } else {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult;\n                }\n              }\n            }\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult);\n              }\n            }\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\n              }\n            }\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\n              }\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            } else if (mult.length) {\n              matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw;\n        }\n        if (documentData.strokeColorAnim) {\n          letterSc = \"rgb(\" + Math.round(sc[0] * 255) + \",\" + Math.round(sc[1] * 255) + \",\" + Math.round(sc[2] * 255) + \")\";\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc = \"rgb(\" + Math.round(fc[0] * 255) + \",\" + Math.round(fc[1] * 255) + \",\" + Math.round(fc[2] * 255) + \")\";\n        }\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0);\n          if (this._pathData.p.v) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\n            var rot = Math.atan(tanAngle) * 180 / Math.PI;\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180;\n            }\n            matrixHelper.rotate(-rot * Math.PI / 180);\n          }\n          matrixHelper.translate(xPathPos, yPathPos, 0);\n          currentLength -= alignment[0] * letters[i].an * 5e-3;\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2;\n            currentLength += documentData.tr * 1e-3 * documentData.finalSize;\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0);\n          if (documentData.ps) {\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n          }\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\n              break;\n            case 2:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\n              break;\n          }\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(offf, 0, 0);\n          matrixHelper.translate(alignment[0] * letters[i].an * 5e-3, alignment[1] * yOff * 0.01, 0);\n          xPos += letters[i].l + documentData.tr * 1e-3 * documentData.finalSize;\n        }\n        if (renderType === \"html\") {\n          letterM = matrixHelper.toCSS();\n        } else if (renderType === \"svg\") {\n          letterM = matrixHelper.to2dCSS();\n        } else {\n          letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\n        }\n        letterO = elemOpacity;\n      }\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\n        this.renderedLetters.push(letterValue);\n        renderedLettersCount += 1;\n        this.lettersChangedFlag = true;\n      } else {\n        letterValue = this.renderedLetters[i];\n        this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\n      }\n    }\n  };\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return;\n    }\n    this._frameId = this._elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n  TextAnimatorProperty.prototype.mHelper = new Matrix();\n  TextAnimatorProperty.prototype.defaultPropsArray = [];\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\n  function ITextElement() {}\n  ITextElement.prototype.initElement = function (data2, globalData2, comp2) {\n    this.lettersChangedFlag = true;\n    this.initFrame();\n    this.initBaseData(data2, globalData2, comp2);\n    this.textProperty = new TextProperty(this, data2.t, this.dynamicProperties);\n    this.textAnimator = new TextAnimatorProperty(data2.t, this.renderType, this);\n    this.initTransform(data2, globalData2, comp2);\n    this.initHierarchy();\n    this.initRenderable();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    this.createContent();\n    this.hide();\n    this.textAnimator.searchProperties(this.dynamicProperties);\n  };\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText();\n      this.textProperty._isFirstFrame = false;\n      this.textProperty._mdf = false;\n    }\n  };\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j;\n    var jLen = shapes.length;\n    var pathNodes;\n    var shapeStr = \"\";\n    for (j = 0; j < jLen; j += 1) {\n      if (shapes[j].ty === \"sh\") {\n        pathNodes = shapes[j].ks.k;\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\n      }\n    }\n    return shapeStr;\n  };\n  ITextElement.prototype.updateDocumentData = function (newData, index2) {\n    this.textProperty.updateDocumentData(newData, index2);\n  };\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize);\n  };\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize);\n  };\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n    }\n    matrixHelper.translate(0, -documentData.ls, 0);\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\n        break;\n      case 2:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\n        break;\n    }\n    matrixHelper.translate(xPos, yPos, 0);\n  };\n  ITextElement.prototype.buildColor = function (colorData) {\n    return \"rgb(\" + Math.round(colorData[0] * 255) + \",\" + Math.round(colorData[1] * 255) + \",\" + Math.round(colorData[2] * 255) + \")\";\n  };\n  ITextElement.prototype.emptyProp = new LetterProps();\n  ITextElement.prototype.destroy = function () {};\n  var emptyShapeData = {\n    shapes: []\n  };\n  function SVGTextLottieElement(data2, globalData2, comp2) {\n    this.textSpans = [];\n    this.renderType = \"svg\";\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);\n  SVGTextLottieElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS(\"text\");\n    }\n  };\n  SVGTextLottieElement.prototype.buildTextContents = function (textArray) {\n    var i = 0;\n    var len = textArray.length;\n    var textContents = [];\n    var currentTextContent = \"\";\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent);\n        currentTextContent = \"\";\n      } else {\n        currentTextContent += textArray[i];\n      }\n      i += 1;\n    }\n    textContents.push(currentTextContent);\n    return textContents;\n  };\n  SVGTextLottieElement.prototype.buildShapeData = function (data2, scale2) {\n    if (data2.shapes && data2.shapes.length) {\n      var shape = data2.shapes[0];\n      if (shape.it) {\n        var shapeItem = shape.it[shape.it.length - 1];\n        if (shapeItem.s) {\n          shapeItem.s.k[0] = scale2;\n          shapeItem.s.k[1] = scale2;\n        }\n      }\n    }\n    return data2;\n  };\n  SVGTextLottieElement.prototype.buildNewText = function () {\n    this.addDynamicProperty(this);\n    var i;\n    var len;\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\n    if (documentData.fc) {\n      this.layerElement.setAttribute(\"fill\", this.buildColor(documentData.fc));\n    } else {\n      this.layerElement.setAttribute(\"fill\", \"rgba(0,0,0,0)\");\n    }\n    if (documentData.sc) {\n      this.layerElement.setAttribute(\"stroke\", this.buildColor(documentData.sc));\n      this.layerElement.setAttribute(\"stroke-width\", documentData.sw);\n    }\n    this.layerElement.setAttribute(\"font-size\", documentData.finalSize);\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    if (fontData.fClass) {\n      this.layerElement.setAttribute(\"class\", fontData.fClass);\n    } else {\n      this.layerElement.setAttribute(\"font-family\", fontData.fFamily);\n      var fWeight = documentData.fWeight;\n      var fStyle = documentData.fStyle;\n      this.layerElement.setAttribute(\"font-style\", fStyle);\n      this.layerElement.setAttribute(\"font-weight\", fWeight);\n    }\n    this.layerElement.setAttribute(\"aria-label\", documentData.t);\n    var letters = documentData.l || [];\n    var usesGlyphs = !!this.globalData.fontManager.chars;\n    len = letters.length;\n    var tSpan;\n    var matrixHelper = this.mHelper;\n    var shapeStr = \"\";\n    var singleShape = this.data.singleShape;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var trackingOffset = documentData.tr * 1e-3 * documentData.finalSize;\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer;\n      var justify = \"start\";\n      switch (documentData.j) {\n        case 1:\n          justify = \"end\";\n          break;\n        case 2:\n          justify = \"middle\";\n          break;\n        default:\n          justify = \"start\";\n          break;\n      }\n      tElement.setAttribute(\"text-anchor\", justify);\n      tElement.setAttribute(\"letter-spacing\", trackingOffset);\n      var textContent = this.buildTextContents(documentData.finalText);\n      len = textContent.length;\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i].span || createNS(\"tspan\");\n        tSpan.textContent = textContent[i];\n        tSpan.setAttribute(\"x\", 0);\n        tSpan.setAttribute(\"y\", yPos);\n        tSpan.style.display = \"inherit\";\n        tElement.appendChild(tSpan);\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            glyph: null\n          };\n        }\n        this.textSpans[i].span = tSpan;\n        yPos += documentData.finalLineHeight;\n      }\n      this.layerElement.appendChild(tElement);\n    } else {\n      var cachedSpansLength = this.textSpans.length;\n      var charData;\n      for (i = 0; i < len; i += 1) {\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            childSpan: null,\n            glyph: null\n          };\n        }\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? \"g\" : \"text\");\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute(\"stroke-linecap\", \"butt\");\n            tSpan.setAttribute(\"stroke-linejoin\", \"round\");\n            tSpan.setAttribute(\"stroke-miterlimit\", \"4\");\n            this.textSpans[i].span = tSpan;\n            if (usesGlyphs) {\n              var childSpan = createNS(\"g\");\n              tSpan.appendChild(childSpan);\n              this.textSpans[i].childSpan = childSpan;\n            }\n            this.textSpans[i].span = tSpan;\n            this.layerElement.appendChild(tSpan);\n          }\n          tSpan.style.display = \"inherit\";\n        }\n        matrixHelper.reset();\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset;\n            yPos += documentData.yOffset;\n            yPos += firstLine ? 1 : 0;\n            firstLine = false;\n          }\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n          xPos += letters[i].l || 0;\n          xPos += trackingOffset;\n        }\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n          var glyphElement;\n          if (charData.t === 1) {\n            glyphElement = new SVGCompElement(charData.data, this.globalData, this);\n          } else {\n            var data2 = emptyShapeData;\n            if (charData.data && charData.data.shapes) {\n              data2 = this.buildShapeData(charData.data, documentData.finalSize);\n            }\n            glyphElement = new SVGShapeElement(data2, this.globalData, this);\n          }\n          if (this.textSpans[i].glyph) {\n            var glyph = this.textSpans[i].glyph;\n            this.textSpans[i].childSpan.removeChild(glyph.layerElement);\n            glyph.destroy();\n          }\n          this.textSpans[i].glyph = glyphElement;\n          glyphElement._debug = true;\n          glyphElement.prepareFrame(0);\n          glyphElement.renderFrame();\n          this.textSpans[i].childSpan.appendChild(glyphElement.layerElement);\n          if (charData.t === 1) {\n            this.textSpans[i].childSpan.setAttribute(\"transform\", \"scale(\" + documentData.finalSize / 100 + \",\" + documentData.finalSize / 100 + \")\");\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\n          }\n          tSpan.textContent = letters[i].val;\n          tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n        }\n      }\n      if (singleShape && tSpan) {\n        tSpan.setAttribute(\"d\", shapeStr);\n      }\n    }\n    while (i < this.textSpans.length) {\n      this.textSpans[i].span.style.display = \"none\";\n      i += 1;\n    }\n    this._sizeChanged = true;\n  };\n  SVGTextLottieElement.prototype.sourceRectAtTime = function () {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\n    this.renderInnerContent();\n    if (this._sizeChanged) {\n      this._sizeChanged = false;\n      var textBox = this.layerElement.getBBox();\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height\n      };\n    }\n    return this.bbox;\n  };\n  SVGTextLottieElement.prototype.getValue = function () {\n    var i;\n    var len = this.textSpans.length;\n    var glyphElement;\n    this.renderedFrame = this.comp.renderedFrame;\n    for (i = 0; i < len; i += 1) {\n      glyphElement = this.textSpans[i].glyph;\n      if (glyphElement) {\n        glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st);\n        if (glyphElement._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n  SVGTextLottieElement.prototype.renderInnerContent = function () {\n    if (!this.data.singleShape || this._mdf) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true;\n        var i;\n        var len;\n        var renderedLetters = this.textAnimator.renderedLetters;\n        var letters = this.textProperty.currentData.l;\n        len = letters.length;\n        var renderedLetter;\n        var textSpan;\n        var glyphElement;\n        for (i = 0; i < len; i += 1) {\n          if (!letters[i].n) {\n            renderedLetter = renderedLetters[i];\n            textSpan = this.textSpans[i].span;\n            glyphElement = this.textSpans[i].glyph;\n            if (glyphElement) {\n              glyphElement.renderFrame();\n            }\n            if (renderedLetter._mdf.m) {\n              textSpan.setAttribute(\"transform\", renderedLetter.m);\n            }\n            if (renderedLetter._mdf.o) {\n              textSpan.setAttribute(\"opacity\", renderedLetter.o);\n            }\n            if (renderedLetter._mdf.sw) {\n              textSpan.setAttribute(\"stroke-width\", renderedLetter.sw);\n            }\n            if (renderedLetter._mdf.sc) {\n              textSpan.setAttribute(\"stroke\", renderedLetter.sc);\n            }\n            if (renderedLetter._mdf.fc) {\n              textSpan.setAttribute(\"fill\", renderedLetter.fc);\n            }\n          }\n        }\n      }\n    }\n  };\n  function ISolidElement(data2, globalData2, comp2) {\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([IImageElement], ISolidElement);\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS(\"rect\");\n    rect.setAttribute(\"width\", this.data.sw);\n    rect.setAttribute(\"height\", this.data.sh);\n    rect.setAttribute(\"fill\", this.data.sc);\n    this.layerElement.appendChild(rect);\n  };\n  function NullElement(data2, globalData2, comp2) {\n    this.initFrame();\n    this.initBaseData(data2, globalData2, comp2);\n    this.initFrame();\n    this.initTransform(data2, globalData2, comp2);\n    this.initHierarchy();\n  }\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n  NullElement.prototype.renderFrame = function () {};\n  NullElement.prototype.getBaseElement = function () {\n    return null;\n  };\n  NullElement.prototype.destroy = function () {};\n  NullElement.prototype.sourceRectAtTime = function () {};\n  NullElement.prototype.hide = function () {};\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);\n  function SVGRendererBase() {}\n  extendPrototype([BaseRenderer], SVGRendererBase);\n  SVGRendererBase.prototype.createNull = function (data2) {\n    return new NullElement(data2, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createShape = function (data2) {\n    return new SVGShapeElement(data2, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createText = function (data2) {\n    return new SVGTextLottieElement(data2, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createImage = function (data2) {\n    return new IImageElement(data2, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createSolid = function (data2) {\n    return new ISolidElement(data2, this.globalData, this);\n  };\n  SVGRendererBase.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute(\"viewBox\", this.renderConfig.viewBoxSize);\n    } else {\n      this.svgElement.setAttribute(\"viewBox\", \"0 0 \" + animData.w + \" \" + animData.h);\n    }\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute(\"width\", animData.w);\n      this.svgElement.setAttribute(\"height\", animData.h);\n      this.svgElement.style.width = \"100%\";\n      this.svgElement.style.height = \"100%\";\n      this.svgElement.style.transform = \"translate3d(0,0,0)\";\n      this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility;\n    }\n    if (this.renderConfig.width) {\n      this.svgElement.setAttribute(\"width\", this.renderConfig.width);\n    }\n    if (this.renderConfig.height) {\n      this.svgElement.setAttribute(\"height\", this.renderConfig.height);\n    }\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute(\"class\", this.renderConfig.className);\n    }\n    if (this.renderConfig.id) {\n      this.svgElement.setAttribute(\"id\", this.renderConfig.id);\n    }\n    if (this.renderConfig.focusable !== void 0) {\n      this.svgElement.setAttribute(\"focusable\", this.renderConfig.focusable);\n    }\n    this.svgElement.setAttribute(\"preserveAspectRatio\", this.renderConfig.preserveAspectRatio);\n    this.animationItem.wrapper.appendChild(this.svgElement);\n    var defs = this.globalData.defs;\n    this.setupGlobalData(animData, defs);\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.data = animData;\n    var maskElement = createNS(\"clipPath\");\n    var rect = createNS(\"rect\");\n    rect.setAttribute(\"width\", animData.w);\n    rect.setAttribute(\"height\", animData.h);\n    rect.setAttribute(\"x\", 0);\n    rect.setAttribute(\"y\", 0);\n    var maskId = createElementID();\n    maskElement.setAttribute(\"id\", maskId);\n    maskElement.appendChild(rect);\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + maskId + \")\");\n    defs.appendChild(maskElement);\n    this.layers = animData.layers;\n    this.elements = createSizedArray(animData.layers.length);\n  };\n  SVGRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = \"\";\n    }\n    this.layerElement = null;\n    this.globalData.defs = null;\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n  SVGRendererBase.prototype.updateContainerSize = function () {};\n  SVGRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n    elements[pos] = true;\n    var element = this.createItem(this.layers[pos]);\n    elements[pos] = element;\n    if (getExpressionsPlugin()) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element);\n      }\n      element.initExpressions();\n    }\n    this.appendElementInPos(element, pos);\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1);\n        this.addPendingElement(element);\n      } else {\n        element.setMatte(elements[pos - 1].layerId);\n      }\n    }\n  };\n  SVGRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n      if (element.data.tt) {\n        var i = 0;\n        var len = this.elements.length;\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId);\n            break;\n          }\n          i += 1;\n        }\n      }\n    }\n  };\n  SVGRendererBase.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return;\n    }\n    if (num === null) {\n      num = this.renderedFrame;\n    } else {\n      this.renderedFrame = num;\n    }\n    this.globalData.frameNum = num;\n    this.globalData.frameId += 1;\n    this.globalData.projectInterface.currentFrame = num;\n    this.globalData._mdf = false;\n    var i;\n    var len = this.layers.length;\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n    }\n  };\n  SVGRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement();\n    if (!newElement) {\n      return;\n    }\n    var i = 0;\n    var nextElement;\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement();\n      }\n      i += 1;\n    }\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement);\n    } else {\n      this.layerElement.appendChild(newElement);\n    }\n  };\n  SVGRendererBase.prototype.hide = function () {\n    this.layerElement.style.display = \"none\";\n  };\n  SVGRendererBase.prototype.show = function () {\n    this.layerElement.style.display = \"block\";\n  };\n  function ICompElement() {}\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\n  ICompElement.prototype.initElement = function (data2, globalData2, comp2) {\n    this.initFrame();\n    this.initBaseData(data2, globalData2, comp2);\n    this.initTransform(data2, globalData2, comp2);\n    this.initRenderable();\n    this.initHierarchy();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    if (this.data.xt || !globalData2.progressiveLoad) {\n      this.buildAllItems();\n    }\n    this.hide();\n  };\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n    if (!this.isInRange && !this.data.xt) {\n      return;\n    }\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1;\n      }\n      this.renderedFrame = timeRemapped;\n    } else {\n      this.renderedFrame = num / this.data.sr;\n    }\n    var i;\n    var len = this.elements.length;\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame);\n    }\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\n        if (this.elements[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n  ICompElement.prototype.renderInnerContent = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems;\n  };\n  ICompElement.prototype.getElements = function () {\n    return this.elements;\n  };\n  ICompElement.prototype.destroyElements = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n  };\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements();\n    this.destroyBaseElement();\n  };\n  function SVGCompElement(data2, globalData2, comp2) {\n    this.layers = data2.layers;\n    this.supports3d = true;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data2, globalData2, comp2);\n    this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData2.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n  extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement);\n  SVGCompElement.prototype.createComp = function (data2) {\n    return new SVGCompElement(data2, this.globalData, this);\n  };\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.svgElement = createNS(\"svg\");\n    var ariaLabel = \"\";\n    if (config && config.title) {\n      var titleElement = createNS(\"title\");\n      var titleId = createElementID();\n      titleElement.setAttribute(\"id\", titleId);\n      titleElement.textContent = config.title;\n      this.svgElement.appendChild(titleElement);\n      ariaLabel += titleId;\n    }\n    if (config && config.description) {\n      var descElement = createNS(\"desc\");\n      var descId = createElementID();\n      descElement.setAttribute(\"id\", descId);\n      descElement.textContent = config.description;\n      this.svgElement.appendChild(descElement);\n      ariaLabel += \" \" + descId;\n    }\n    if (ariaLabel) {\n      this.svgElement.setAttribute(\"aria-labelledby\", ariaLabel);\n    }\n    var defs = createNS(\"defs\");\n    this.svgElement.appendChild(defs);\n    var maskElement = createNS(\"g\");\n    this.svgElement.appendChild(maskElement);\n    this.layerElement = maskElement;\n    this.renderConfig = {\n      preserveAspectRatio: config && config.preserveAspectRatio || \"xMidYMid meet\",\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || \"xMidYMid slice\",\n      contentVisibility: config && config.contentVisibility || \"visible\",\n      progressiveLoad: config && config.progressiveLoad || false,\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      viewBoxOnly: config && config.viewBoxOnly || false,\n      viewBoxSize: config && config.viewBoxSize || false,\n      className: config && config.className || \"\",\n      id: config && config.id || \"\",\n      focusable: config && config.focusable,\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || \"100%\",\n        height: config && config.filterSize && config.filterSize.height || \"100%\",\n        x: config && config.filterSize && config.filterSize.x || \"0%\",\n        y: config && config.filterSize && config.filterSize.y || \"0%\"\n      },\n      width: config && config.width,\n      height: config && config.height\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs,\n      renderConfig: this.renderConfig\n    };\n    this.elements = [];\n    this.pendingElements = [];\n    this.destroyed = false;\n    this.rendererType = \"svg\";\n  }\n  extendPrototype([SVGRendererBase], SVGRenderer);\n  SVGRenderer.prototype.createComp = function (data2) {\n    return new SVGCompElement(data2, this.globalData, this);\n  };\n  function CVContextData() {\n    this.saved = [];\n    this.cArrPos = 0;\n    this.cTr = new Matrix();\n    this.cO = 1;\n    var i;\n    var len = 15;\n    this.savedOp = createTypedArray(\"float32\", len);\n    for (i = 0; i < len; i += 1) {\n      this.saved[i] = createTypedArray(\"float32\", 16);\n    }\n    this._length = len;\n  }\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2;\n    var currentSavedOp = this.savedOp;\n    this.savedOp = createTypedArray(\"float32\", newLength);\n    this.savedOp.set(currentSavedOp);\n    var i = 0;\n    for (i = this._length; i < newLength; i += 1) {\n      this.saved[i] = createTypedArray(\"float32\", 16);\n    }\n    this._length = newLength;\n  };\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0;\n    this.cTr.reset();\n    this.cO = 1;\n  };\n  function ShapeTransformManager() {\n    this.sequences = {};\n    this.sequenceList = [];\n    this.transform_key_count = 0;\n  }\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function (transforms) {\n      var i;\n      var len = transforms.length;\n      var key2 = \"_\";\n      for (i = 0; i < len; i += 1) {\n        key2 += transforms[i].transform.key + \"_\";\n      }\n      var sequence = this.sequences[key2];\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false\n        };\n        this.sequences[key2] = sequence;\n        this.sequenceList.push(sequence);\n      }\n      return sequence;\n    },\n    processSequence: function (sequence, isFirstFrame) {\n      var i = 0;\n      var len = sequence.transforms.length;\n      var _mdf = isFirstFrame;\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true;\n          break;\n        }\n        i += 1;\n      }\n      if (_mdf) {\n        var props;\n        sequence.finalTransform.reset();\n        for (i = len - 1; i >= 0; i -= 1) {\n          props = sequence.transforms[i].transform.mProps.v.props;\n          sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n        }\n      }\n      sequence._mdf = _mdf;\n    },\n    processSequences: function (isFirstFrame) {\n      var i;\n      var len = this.sequenceList.length;\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame);\n      }\n    },\n    getNewKey: function () {\n      this.transform_key_count += 1;\n      return \"_\" + this.transform_key_count;\n    }\n  };\n  function CVEffects() {}\n  CVEffects.prototype.renderFrame = function () {};\n  function CVMaskElement(data2, element) {\n    this.data = data2;\n    this.element = element;\n    this.masksProperties = this.data.masksProperties || [];\n    this.viewData = createSizedArray(this.masksProperties.length);\n    var i;\n    var len = this.masksProperties.length;\n    var hasMasks = false;\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== \"n\") {\n        hasMasks = true;\n      }\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);\n    }\n    this.hasMasks = hasMasks;\n    if (hasMasks) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return;\n    }\n    var transform2 = this.element.finalTransform.mat;\n    var ctx = this.element.canvasContext;\n    var i;\n    var len = this.masksProperties.length;\n    var pt;\n    var pts;\n    var data2;\n    ctx.beginPath();\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== \"n\") {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\n          ctx.lineTo(0, this.element.globalData.compSize.h);\n          ctx.lineTo(0, 0);\n        }\n        data2 = this.viewData[i].v;\n        pt = transform2.applyToPointArray(data2.v[0][0], data2.v[0][1], 0);\n        ctx.moveTo(pt[0], pt[1]);\n        var j;\n        var jLen = data2._length;\n        for (j = 1; j < jLen; j += 1) {\n          pts = transform2.applyToTriplePoints(data2.o[j - 1], data2.i[j], data2.v[j]);\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n        }\n        pts = transform2.applyToTriplePoints(data2.o[j - 1], data2.i[0], data2.v[0]);\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n      }\n    }\n    this.element.globalData.renderer.save(true);\n    ctx.clip();\n  };\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null;\n  };\n  function CVBaseElement() {}\n  CVBaseElement.prototype = {\n    createElements: function () {},\n    initRendererElement: function () {},\n    createContainerElements: function () {\n      this.canvasContext = this.globalData.canvasContext;\n      this.renderableEffectsManager = new CVEffects();\n    },\n    createContent: function () {},\n    setBlendMode: function () {\n      var globalData2 = this.globalData;\n      if (globalData2.blendMode !== this.data.bm) {\n        globalData2.blendMode = this.data.bm;\n        var blendModeValue = getBlendMode(this.data.bm);\n        globalData2.canvasContext.globalCompositeOperation = blendModeValue;\n      }\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new CVMaskElement(this.data, this);\n    },\n    hideElement: function () {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true;\n      }\n    },\n    showElement: function () {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false;\n        this._isFirstFrame = true;\n        this.maskManager._isFirstFrame = true;\n      }\n    },\n    renderFrame: function () {\n      if (this.hidden || this.data.hd) {\n        return;\n      }\n      this.renderTransform();\n      this.renderRenderable();\n      this.setBlendMode();\n      var forceRealStack = this.data.ty === 0;\n      this.globalData.renderer.save(forceRealStack);\n      this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\n      this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\n      this.renderInnerContent();\n      this.globalData.renderer.restore(forceRealStack);\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true);\n      }\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function () {\n      this.canvasContext = null;\n      this.data = null;\n      this.globalData = null;\n      this.maskManager.destroy();\n    },\n    mHelper: new Matrix()\n  };\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\n  function CVShapeData(element, data2, styles, transformsManager) {\n    this.styledShapes = [];\n    this.tr = [0, 0, 0, 0, 0, 0];\n    var ty = 4;\n    if (data2.ty === \"rc\") {\n      ty = 5;\n    } else if (data2.ty === \"el\") {\n      ty = 6;\n    } else if (data2.ty === \"sr\") {\n      ty = 7;\n    }\n    this.sh = ShapePropertyFactory.getShapeProp(element, data2, ty, element);\n    var i;\n    var len = styles.length;\n    var styledShape;\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: []\n        };\n        this.styledShapes.push(styledShape);\n        styles[i].elements.push(styledShape);\n      }\n    }\n  }\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\n  function CVShapeElement(data2, globalData2, comp2) {\n    this.shapes = [];\n    this.shapesData = data2.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n    this.transformsManager = new ShapeTransformManager();\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\n  CVShapeElement.prototype.transformHelper = {\n    opacity: 1,\n    _opMdf: false\n  };\n  CVShapeElement.prototype.dashResetter = [];\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n  };\n  CVShapeElement.prototype.createStyleElement = function (data2, transforms) {\n    var styleElem = {\n      data: data2,\n      type: data2.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data2.hd === true\n    };\n    var elementData = {};\n    if (data2.ty === \"fl\" || data2.ty === \"st\") {\n      elementData.c = PropertyFactory.getProp(this, data2.c, 1, 255, this);\n      if (!elementData.c.k) {\n        styleElem.co = \"rgb(\" + bmFloor(elementData.c.v[0]) + \",\" + bmFloor(elementData.c.v[1]) + \",\" + bmFloor(elementData.c.v[2]) + \")\";\n      }\n    } else if (data2.ty === \"gf\" || data2.ty === \"gs\") {\n      elementData.s = PropertyFactory.getProp(this, data2.s, 1, null, this);\n      elementData.e = PropertyFactory.getProp(this, data2.e, 1, null, this);\n      elementData.h = PropertyFactory.getProp(this, data2.h || {\n        k: 0\n      }, 0, 0.01, this);\n      elementData.a = PropertyFactory.getProp(this, data2.a || {\n        k: 0\n      }, 0, degToRads, this);\n      elementData.g = new GradientProperty(this, data2.g, this);\n    }\n    elementData.o = PropertyFactory.getProp(this, data2.o, 0, 0.01, this);\n    if (data2.ty === \"st\" || data2.ty === \"gs\") {\n      styleElem.lc = lineCapEnum[data2.lc || 2];\n      styleElem.lj = lineJoinEnum[data2.lj || 2];\n      if (data2.lj == 1) {\n        styleElem.ml = data2.ml;\n      }\n      elementData.w = PropertyFactory.getProp(this, data2.w, 0, null, this);\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v;\n      }\n      if (data2.d) {\n        var d = new DashProperty(this, data2.d, \"canvas\", this);\n        elementData.d = d;\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray;\n          styleElem.do = elementData.d.dashoffset[0];\n        }\n      }\n    } else {\n      styleElem.r = data2.r === 2 ? \"evenodd\" : \"nonzero\";\n    }\n    this.stylesList.push(styleElem);\n    elementData.style = styleElem;\n    return elementData;\n  };\n  CVShapeElement.prototype.createGroupElement = function () {\n    var elementData = {\n      it: [],\n      prevViewData: []\n    };\n    return elementData;\n  };\n  CVShapeElement.prototype.createTransformElement = function (data2) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data2.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data2, this)\n      }\n    };\n    return elementData;\n  };\n  CVShapeElement.prototype.createShapeElement = function (data2) {\n    var elementData = new CVShapeData(this, data2, this.stylesList, this.transformsManager);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    return elementData;\n  };\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n    len = this.dynamicProperties.length;\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n  };\n  CVShapeElement.prototype.addTransformToStyleList = function (transform2) {\n    var i;\n    var len = this.stylesList.length;\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform2);\n      }\n    }\n  };\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i;\n    var len = this.stylesList.length;\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop();\n      }\n    }\n  };\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i;\n    var len = styles.length;\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true;\n    }\n  };\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var processedPos;\n    var modifier;\n    var currentTransform;\n    var ownTransforms = [].concat(transforms);\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n      if (arr[i].ty === \"fl\" || arr[i].ty === \"st\" || arr[i].ty === \"gf\" || arr[i].ty === \"gs\") {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === \"gr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);\n      } else if (arr[i].ty === \"tr\") {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i]);\n          itemsData[i] = currentTransform;\n        }\n        ownTransforms.push(itemsData[i]);\n        this.addTransformToStyleList(itemsData[i]);\n      } else if (arr[i].ty === \"sh\" || arr[i].ty === \"rc\" || arr[i].ty === \"el\" || arr[i].ty === \"sr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i]);\n        }\n      } else if (arr[i].ty === \"tm\" || arr[i].ty === \"rd\" || arr[i].ty === \"pb\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === \"rp\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          shouldRender = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n        ownModifiers.push(modifier);\n      }\n      this.addProcessedElement(arr[i], i + 1);\n    }\n    this.removeTransformFromStyleList();\n    this.closeStyles(ownStyles);\n    len = ownModifiers.length;\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1;\n    this.transformHelper._opMdf = false;\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);\n  };\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity;\n      groupTransform.opacity *= groupTransform.op.v;\n      groupTransform._opMdf = true;\n    }\n  };\n  CVShapeElement.prototype.drawLayer = function () {\n    var i;\n    var len = this.stylesList.length;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var elems;\n    var nodes;\n    var renderer = this.globalData.renderer;\n    var ctx = this.globalData.canvasContext;\n    var type;\n    var currentStyle;\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i];\n      type = currentStyle.type;\n      if (!((type === \"st\" || type === \"gs\") && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0)) {\n        renderer.save();\n        elems = currentStyle.elements;\n        if (type === \"st\" || type === \"gs\") {\n          ctx.strokeStyle = type === \"st\" ? currentStyle.co : currentStyle.grd;\n          ctx.lineWidth = currentStyle.wi;\n          ctx.lineCap = currentStyle.lc;\n          ctx.lineJoin = currentStyle.lj;\n          ctx.miterLimit = currentStyle.ml || 0;\n        } else {\n          ctx.fillStyle = type === \"fl\" ? currentStyle.co : currentStyle.grd;\n        }\n        renderer.ctxOpacity(currentStyle.coOp);\n        if (type !== \"st\" && type !== \"gs\") {\n          ctx.beginPath();\n        }\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\n        jLen = elems.length;\n        for (j = 0; j < jLen; j += 1) {\n          if (type === \"st\" || type === \"gs\") {\n            ctx.beginPath();\n            if (currentStyle.da) {\n              ctx.setLineDash(currentStyle.da);\n              ctx.lineDashOffset = currentStyle.do;\n            }\n          }\n          nodes = elems[j].trNodes;\n          kLen = nodes.length;\n          for (k = 0; k < kLen; k += 1) {\n            if (nodes[k].t === \"m\") {\n              ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);\n            } else if (nodes[k].t === \"c\") {\n              ctx.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);\n            } else {\n              ctx.closePath();\n            }\n          }\n          if (type === \"st\" || type === \"gs\") {\n            ctx.stroke();\n            if (currentStyle.da) {\n              ctx.setLineDash(this.dashResetter);\n            }\n          }\n        }\n        if (type !== \"st\" && type !== \"gs\") {\n          ctx.fill(currentStyle.r);\n        }\n        renderer.restore();\n      }\n    }\n  };\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data2, isMain) {\n    var i;\n    var len = items.length - 1;\n    var groupTransform;\n    groupTransform = parentTransform;\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty === \"tr\") {\n        groupTransform = data2[i].transform;\n        this.renderShapeTransform(parentTransform, groupTransform);\n      } else if (items[i].ty === \"sh\" || items[i].ty === \"el\" || items[i].ty === \"rc\" || items[i].ty === \"sr\") {\n        this.renderPath(items[i], data2[i]);\n      } else if (items[i].ty === \"fl\") {\n        this.renderFill(items[i], data2[i], groupTransform);\n      } else if (items[i].ty === \"st\") {\n        this.renderStroke(items[i], data2[i], groupTransform);\n      } else if (items[i].ty === \"gf\" || items[i].ty === \"gs\") {\n        this.renderGradientFill(items[i], data2[i], groupTransform);\n      } else if (items[i].ty === \"gr\") {\n        this.renderShape(groupTransform, items[i].it, data2[i].it);\n      } else if (items[i].ty === \"tm\") ;\n    }\n    if (isMain) {\n      this.drawLayer();\n    }\n  };\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes;\n      var paths = shape.paths;\n      var i;\n      var len;\n      var j;\n      var jLen = paths._length;\n      shapeNodes.length = 0;\n      var groupTransformMat = styledShape.transforms.finalTransform;\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j];\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length;\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: \"m\",\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n              });\n            }\n            shapeNodes.push({\n              t: \"c\",\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\n            });\n          }\n          if (len === 1) {\n            shapeNodes.push({\n              t: \"m\",\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n            });\n          }\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: \"c\",\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\n            });\n            shapeNodes.push({\n              t: \"z\"\n            });\n          }\n        }\n      }\n      styledShape.trNodes = shapeNodes;\n    }\n  };\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i;\n      var len = itemData.styledShapes.length;\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\n      }\n    }\n  };\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\";\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n  };\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var grd;\n    if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {\n      var ctx = this.globalData.canvasContext;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n        var percent = itemData.h.v;\n        if (percent >= 1) {\n          percent = 0.99;\n        } else if (percent <= -1) {\n          percent = -0.99;\n        }\n        var dist = rad * percent;\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n        grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\n      }\n      var i;\n      var len = styleData.g.p;\n      var cValues = itemData.g.c;\n      var opacity = 1;\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1];\n        }\n        grd.addColorStop(cValues[i * 4] / 100, \"rgba(\" + cValues[i * 4 + 1] + \",\" + cValues[i * 4 + 2] + \",\" + cValues[i * 4 + 3] + \",\" + opacity + \")\");\n      }\n      styleElem.grd = grd;\n    }\n    styleElem.coOp = itemData.o.v * groupTransform.opacity;\n  };\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var d = itemData.d;\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray;\n      styleElem.do = d.dashoffset[0];\n    }\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\";\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v;\n    }\n  };\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null;\n    this.globalData = null;\n    this.canvasContext = null;\n    this.stylesList.length = 0;\n    this.itemsData.length = 0;\n  };\n  function CVTextElement(data2, globalData2, comp2) {\n    this.textSpans = [];\n    this.yOffset = 0;\n    this.fillColorAnim = false;\n    this.strokeColorAnim = false;\n    this.strokeWidthAnim = false;\n    this.stroke = false;\n    this.fill = false;\n    this.justifyOffset = 0;\n    this.currentRender = null;\n    this.renderType = \"canvas\";\n    this.values = {\n      fill: \"rgba(0,0,0,0)\",\n      stroke: \"rgba(0,0,0,0)\",\n      sWidth: 0,\n      fValue: \"\"\n    };\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);\n  CVTextElement.prototype.tHelper = createTag(\"canvas\").getContext(\"2d\");\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var hasFill = false;\n    if (documentData.fc) {\n      hasFill = true;\n      this.values.fill = this.buildColor(documentData.fc);\n    } else {\n      this.values.fill = \"rgba(0,0,0,0)\";\n    }\n    this.fill = hasFill;\n    var hasStroke = false;\n    if (documentData.sc) {\n      hasStroke = true;\n      this.values.stroke = this.buildColor(documentData.sc);\n      this.values.sWidth = documentData.sw;\n    }\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    var i;\n    var len;\n    var letters = documentData.l;\n    var matrixHelper = this.mHelper;\n    this.stroke = hasStroke;\n    this.values.fValue = documentData.finalSize + \"px \" + this.globalData.fontManager.getFontByName(documentData.f).fFamily;\n    len = documentData.finalText.length;\n    var charData;\n    var shapeData;\n    var k;\n    var kLen;\n    var shapes;\n    var j;\n    var jLen;\n    var pathNodes;\n    var commands;\n    var pathArr;\n    var singleShape = this.data.singleShape;\n    var trackingOffset = documentData.tr * 1e-3 * documentData.finalSize;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var cnt = 0;\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n      shapeData = charData && charData.data || {};\n      matrixHelper.reset();\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        firstLine = false;\n      }\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n      jLen = shapes.length;\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n      }\n      commands = createSizedArray(jLen - 1);\n      var commandsCounter = 0;\n      for (j = 0; j < jLen; j += 1) {\n        if (shapes[j].ty === \"sh\") {\n          kLen = shapes[j].ks.k.i.length;\n          pathNodes = shapes[j].ks.k;\n          pathArr = [];\n          for (k = 1; k < kLen; k += 1) {\n            if (k === 1) {\n              pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n            }\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));\n          }\n          pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n          commands[commandsCounter] = pathArr;\n          commandsCounter += 1;\n        }\n      }\n      if (singleShape) {\n        xPos += letters[i].l;\n        xPos += trackingOffset;\n      }\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands;\n      } else {\n        this.textSpans[cnt] = {\n          elem: commands\n        };\n      }\n      cnt += 1;\n    }\n  };\n  CVTextElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.font = this.values.fValue;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 4;\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n    }\n    var i;\n    var len;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var lastFill = null;\n    var lastStroke = null;\n    var lastStrokeW = null;\n    var commands;\n    var pathArr;\n    for (i = 0; i < len; i += 1) {\n      if (!letters[i].n) {\n        renderedLetter = renderedLetters[i];\n        if (renderedLetter) {\n          this.globalData.renderer.save();\n          this.globalData.renderer.ctxTransform(renderedLetter.p);\n          this.globalData.renderer.ctxOpacity(renderedLetter.o);\n        }\n        if (this.fill) {\n          if (renderedLetter && renderedLetter.fc) {\n            if (lastFill !== renderedLetter.fc) {\n              lastFill = renderedLetter.fc;\n              ctx.fillStyle = renderedLetter.fc;\n            }\n          } else if (lastFill !== this.values.fill) {\n            lastFill = this.values.fill;\n            ctx.fillStyle = this.values.fill;\n          }\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.fill();\n        }\n        if (this.stroke) {\n          if (renderedLetter && renderedLetter.sw) {\n            if (lastStrokeW !== renderedLetter.sw) {\n              lastStrokeW = renderedLetter.sw;\n              ctx.lineWidth = renderedLetter.sw;\n            }\n          } else if (lastStrokeW !== this.values.sWidth) {\n            lastStrokeW = this.values.sWidth;\n            ctx.lineWidth = this.values.sWidth;\n          }\n          if (renderedLetter && renderedLetter.sc) {\n            if (lastStroke !== renderedLetter.sc) {\n              lastStroke = renderedLetter.sc;\n              ctx.strokeStyle = renderedLetter.sc;\n            }\n          } else if (lastStroke !== this.values.stroke) {\n            lastStroke = this.values.stroke;\n            ctx.strokeStyle = this.values.stroke;\n          }\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.stroke();\n        }\n        if (renderedLetter) {\n          this.globalData.renderer.restore();\n        }\n      }\n    }\n  };\n  function CVImageElement(data2, globalData2, comp2) {\n    this.assetData = globalData2.getAssetData(data2.refId);\n    this.img = globalData2.imageLoader.getAsset(this.assetData);\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag(\"canvas\");\n      canvas.width = this.assetData.w;\n      canvas.height = this.assetData.h;\n      var ctx = canvas.getContext(\"2d\");\n      var imgW = this.img.width;\n      var imgH = this.img.height;\n      var imgRel = imgW / imgH;\n      var canvasRel = this.assetData.w / this.assetData.h;\n      var widthCrop;\n      var heightCrop;\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\n      if (imgRel > canvasRel && par === \"xMidYMid slice\" || imgRel < canvasRel && par !== \"xMidYMid slice\") {\n        heightCrop = imgH;\n        widthCrop = heightCrop * canvasRel;\n      } else {\n        widthCrop = imgW;\n        heightCrop = widthCrop / canvasRel;\n      }\n      ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);\n      this.img = canvas;\n    }\n  };\n  CVImageElement.prototype.renderInnerContent = function () {\n    this.canvasContext.drawImage(this.img, 0, 0);\n  };\n  CVImageElement.prototype.destroy = function () {\n    this.img = null;\n  };\n  function CVSolidElement(data2, globalData2, comp2) {\n    this.initElement(data2, globalData2, comp2);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n  CVSolidElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.fillStyle = this.data.sc;\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\n  };\n  function CanvasRendererBase(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== void 0 ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || \"xMidYMid meet\",\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || \"xMidYMid slice\",\n      contentVisibility: config && config.contentVisibility || \"visible\",\n      className: config && config.className || \"\",\n      id: config && config.id || \"\"\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = \"canvas\";\n  }\n  extendPrototype([BaseRenderer], CanvasRendererBase);\n  CanvasRendererBase.prototype.createShape = function (data2) {\n    return new CVShapeElement(data2, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createText = function (data2) {\n    return new CVTextElement(data2, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createImage = function (data2) {\n    return new CVImageElement(data2, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createSolid = function (data2) {\n    return new CVSolidElement(data2, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;\n  CanvasRendererBase.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return;\n    }\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);\n      return;\n    }\n    this.transformMat.cloneFromProps(props);\n    var cProps = this.contextData.cTr.props;\n    this.transformMat.transform(cProps[0], cProps[1], cProps[2], cProps[3], cProps[4], cProps[5], cProps[6], cProps[7], cProps[8], cProps[9], cProps[10], cProps[11], cProps[12], cProps[13], cProps[14], cProps[15]);\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\n    var trProps = this.contextData.cTr.props;\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\n  };\n  CanvasRendererBase.prototype.ctxOpacity = function (op) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n      return;\n    }\n    this.contextData.cO *= op < 0 ? 0 : op;\n    if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\n      this.canvasContext.globalAlpha = this.contextData.cO;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n    }\n  };\n  CanvasRendererBase.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n    this.contextData.reset();\n  };\n  CanvasRendererBase.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save();\n      return;\n    }\n    if (actionFlag) {\n      this.canvasContext.save();\n    }\n    var props = this.contextData.cTr.props;\n    if (this.contextData._length <= this.contextData.cArrPos) {\n      this.contextData.duplicate();\n    }\n    var i;\n    var arr = this.contextData.saved[this.contextData.cArrPos];\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i];\n    }\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\n    this.contextData.cArrPos += 1;\n  };\n  CanvasRendererBase.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n    if (actionFlag) {\n      this.canvasContext.restore();\n      this.globalData.blendMode = \"source-over\";\n    }\n    this.contextData.cArrPos -= 1;\n    var popped = this.contextData.saved[this.contextData.cArrPos];\n    var i;\n    var arr = this.contextData.cTr.props;\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i];\n    }\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13]);\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\n    this.contextData.cO = popped;\n    if (this.globalData.currentGlobalAlpha !== popped) {\n      this.canvasContext.globalAlpha = popped;\n      this.globalData.currentGlobalAlpha = popped;\n    }\n  };\n  CanvasRendererBase.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag(\"canvas\");\n      var containerStyle = this.animationItem.container.style;\n      containerStyle.width = \"100%\";\n      containerStyle.height = \"100%\";\n      var origin = \"0px 0px 0px\";\n      containerStyle.transformOrigin = origin;\n      containerStyle.mozTransformOrigin = origin;\n      containerStyle.webkitTransformOrigin = origin;\n      containerStyle[\"-webkit-transform\"] = origin;\n      containerStyle.contentVisibility = this.renderConfig.contentVisibility;\n      this.animationItem.wrapper.appendChild(this.animationItem.container);\n      this.canvasContext = this.animationItem.container.getContext(\"2d\");\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute(\"class\", this.renderConfig.className);\n      }\n      if (this.renderConfig.id) {\n        this.animationItem.container.setAttribute(\"id\", this.renderConfig.id);\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context;\n    }\n    this.data = animData;\n    this.layers = animData.layers;\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0\n    };\n    this.setupGlobalData(animData, document.body);\n    this.globalData.canvasContext = this.canvasContext;\n    this.globalData.renderer = this;\n    this.globalData.isDashed = false;\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.globalData.transformCanvas = this.transformCanvas;\n    this.elements = createSizedArray(animData.layers.length);\n    this.updateContainerSize();\n  };\n  CanvasRendererBase.prototype.updateContainerSize = function () {\n    this.reset();\n    var elementWidth;\n    var elementHeight;\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth;\n      elementHeight = this.animationItem.wrapper.offsetHeight;\n      this.animationItem.container.setAttribute(\"width\", elementWidth * this.renderConfig.dpr);\n      this.animationItem.container.setAttribute(\"height\", elementHeight * this.renderConfig.dpr);\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\n    }\n    var elementRel;\n    var animationRel;\n    if (this.renderConfig.preserveAspectRatio.indexOf(\"meet\") !== -1 || this.renderConfig.preserveAspectRatio.indexOf(\"slice\") !== -1) {\n      var par = this.renderConfig.preserveAspectRatio.split(\" \");\n      var fillType = par[1] || \"meet\";\n      var pos = par[0] || \"xMidYMid\";\n      var xPos = pos.substr(0, 4);\n      var yPos = pos.substr(4);\n      elementRel = elementWidth / elementHeight;\n      animationRel = this.transformCanvas.w / this.transformCanvas.h;\n      if (animationRel > elementRel && fillType === \"meet\" || animationRel < elementRel && fillType === \"slice\") {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      }\n      if (xPos === \"xMid\" && (animationRel < elementRel && fillType === \"meet\" || animationRel > elementRel && fillType === \"slice\")) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;\n      } else if (xPos === \"xMax\" && (animationRel < elementRel && fillType === \"meet\" || animationRel > elementRel && fillType === \"slice\")) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.tx = 0;\n      }\n      if (yPos === \"YMid\" && (animationRel > elementRel && fillType === \"meet\" || animationRel < elementRel && fillType === \"slice\")) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;\n      } else if (yPos === \"YMax\" && (animationRel > elementRel && fillType === \"meet\" || animationRel < elementRel && fillType === \"slice\")) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.ty = 0;\n      }\n    } else if (this.renderConfig.preserveAspectRatio === \"none\") {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr;\n      this.transformCanvas.sy = this.renderConfig.dpr;\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    }\n    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];\n    this.ctxTransform(this.transformCanvas.props);\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n    this.canvasContext.closePath();\n    this.canvasContext.clip();\n    this.renderFrame(this.renderedFrame, true);\n  };\n  CanvasRendererBase.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = \"\";\n    }\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n    this.elements.length = 0;\n    this.globalData.canvasContext = null;\n    this.animationItem.container = null;\n    this.destroyed = true;\n  };\n  CanvasRendererBase.prototype.renderFrame = function (num, forceRender) {\n    if (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender || this.destroyed || num === -1) {\n      return;\n    }\n    this.renderedFrame = num;\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\n    this.globalData.frameId += 1;\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\n    this.globalData.projectInterface.currentFrame = num;\n    var i;\n    var len = this.layers.length;\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n      } else {\n        this.save();\n      }\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore();\n      }\n    }\n  };\n  CanvasRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n    var element = this.createItem(this.layers[pos], this, this.globalData);\n    elements[pos] = element;\n    element.initExpressions();\n  };\n  CanvasRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n  CanvasRendererBase.prototype.hide = function () {\n    this.animationItem.container.style.display = \"none\";\n  };\n  CanvasRendererBase.prototype.show = function () {\n    this.animationItem.container.style.display = \"block\";\n  };\n  function CVCompElement(data2, globalData2, comp2) {\n    this.completeLayers = false;\n    this.layers = data2.layers;\n    this.pendingElements = [];\n    this.elements = createSizedArray(this.layers.length);\n    this.initElement(data2, globalData2, comp2);\n    this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData2.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n  extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement);\n  CVCompElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(this.data.w, 0);\n    ctx.lineTo(this.data.w, this.data.h);\n    ctx.lineTo(0, this.data.h);\n    ctx.lineTo(0, 0);\n    ctx.clip();\n    var i;\n    var len = this.layers.length;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n  CVCompElement.prototype.destroy = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n    this.layers = null;\n    this.elements = null;\n  };\n  CVCompElement.prototype.createComp = function (data2) {\n    return new CVCompElement(data2, this.globalData, this);\n  };\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== void 0 ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || \"xMidYMid meet\",\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || \"xMidYMid slice\",\n      contentVisibility: config && config.contentVisibility || \"visible\",\n      className: config && config.className || \"\",\n      id: config && config.id || \"\"\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = \"canvas\";\n  }\n  extendPrototype([CanvasRendererBase], CanvasRenderer);\n  CanvasRenderer.prototype.createComp = function (data2) {\n    return new CVCompElement(data2, this.globalData, this);\n  };\n  registerRenderer(\"canvas\", CanvasRenderer);\n  ShapeModifiers.registerModifier(\"tm\", TrimModifier);\n  ShapeModifiers.registerModifier(\"pb\", PuckerAndBloatModifier);\n  ShapeModifiers.registerModifier(\"rp\", RepeaterModifier);\n  ShapeModifiers.registerModifier(\"rd\", RoundCornersModifier);\n  const Expressions = function () {\n    var ob2 = {};\n    ob2.initExpressions = initExpressions;\n    function initExpressions(animation) {\n      var stackCount = 0;\n      var registers = [];\n      function pushExpression() {\n        stackCount += 1;\n      }\n      function popExpression() {\n        stackCount -= 1;\n        if (stackCount === 0) {\n          releaseInstances();\n        }\n      }\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression);\n        }\n      }\n      function releaseInstances() {\n        var i;\n        var len = registers.length;\n        for (i = 0; i < len; i += 1) {\n          registers[i].release();\n        }\n        registers.length = 0;\n      }\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\n      animation.renderer.globalData.pushExpression = pushExpression;\n      animation.renderer.globalData.popExpression = popExpression;\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\n    }\n    return ob2;\n  }();\n  function seedRandom(pool, math) {\n    var global = this,\n      width2 = 256,\n      chunks = 6,\n      digits = 52,\n      rngname = \"random\",\n      startdenom = math.pow(width2, chunks),\n      significance = math.pow(2, digits),\n      overflow = significance * 2,\n      mask2 = width2 - 1,\n      nodecrypto;\n    function seedrandom(seed, options, callback) {\n      var key2 = [];\n      options = options === true ? {\n        entropy: true\n      } : options || {};\n      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key2);\n      var arc4 = new ARC4(key2);\n      var prng = function () {\n        var n = arc4.g(chunks),\n          d = startdenom,\n          x = 0;\n        while (n < significance) {\n          n = (n + x) * width2;\n          d *= width2;\n          x = arc4.g(1);\n        }\n        while (n >= overflow) {\n          n /= 2;\n          d /= 2;\n          x >>>= 1;\n        }\n        return (n + x) / d;\n      };\n      prng.int32 = function () {\n        return arc4.g(4) | 0;\n      };\n      prng.quick = function () {\n        return arc4.g(4) / 4294967296;\n      };\n      prng.double = prng;\n      mixkey(tostring(arc4.S), pool);\n      return (options.pass || callback || function (prng2, seed2, is_math_call, state) {\n        if (state) {\n          if (state.S) {\n            copy(state, arc4);\n          }\n          prng2.state = function () {\n            return copy(arc4, {});\n          };\n        }\n        if (is_math_call) {\n          math[rngname] = prng2;\n          return seed2;\n        } else return prng2;\n      })(prng, shortseed, \"global\" in options ? options.global : this == math, options.state);\n    }\n    math[\"seed\" + rngname] = seedrandom;\n    function ARC4(key2) {\n      var t,\n        keylen = key2.length,\n        me = this,\n        i = 0,\n        j = me.i = me.j = 0,\n        s = me.S = [];\n      if (!keylen) {\n        key2 = [keylen++];\n      }\n      while (i < width2) {\n        s[i] = i++;\n      }\n      for (i = 0; i < width2; i++) {\n        s[i] = s[j = mask2 & j + key2[i % keylen] + (t = s[i])];\n        s[j] = t;\n      }\n      me.g = function (count) {\n        var t2,\n          r = 0,\n          i2 = me.i,\n          j2 = me.j,\n          s2 = me.S;\n        while (count--) {\n          t2 = s2[i2 = mask2 & i2 + 1];\n          r = r * width2 + s2[mask2 & (s2[i2] = s2[j2 = mask2 & j2 + t2]) + (s2[j2] = t2)];\n        }\n        me.i = i2;\n        me.j = j2;\n        return r;\n      };\n    }\n    function copy(f, t) {\n      t.i = f.i;\n      t.j = f.j;\n      t.S = f.S.slice();\n      return t;\n    }\n    function flatten(obj, depth) {\n      var result = [],\n        typ = typeof obj,\n        prop;\n      if (depth && typ == \"object\") {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n      return result.length ? result : typ == \"string\" ? obj : obj + \"\\0\";\n    }\n    function mixkey(seed, key2) {\n      var stringseed = seed + \"\",\n        smear,\n        j = 0;\n      while (j < stringseed.length) {\n        key2[mask2 & j] = mask2 & (smear ^= key2[mask2 & j] * 19) + stringseed.charCodeAt(j++);\n      }\n      return tostring(key2);\n    }\n    function autoseed() {\n      try {\n        if (nodecrypto) ;\n        var out = new Uint8Array(width2);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n        return tostring(out);\n      } catch (e) {\n        var browser = global.navigator,\n          plugins = browser && browser.plugins;\n        return [+ /* @__PURE__ */new Date(), global, plugins, global.screen, tostring(pool)];\n      }\n    }\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a);\n    }\n    mixkey(math.random(), pool);\n  }\n  function initialize$2(BMMath2) {\n    seedRandom([], BMMath2);\n  }\n  var propTypes = {\n    SHAPE: \"shape\"\n  };\n  const ExpressionManager = function () {\n    var ob = {};\n    var Math = BMMath;\n    var window = null;\n    var document = null;\n    var XMLHttpRequest = null;\n    var fetch = null;\n    var frames = null;\n    initialize$2(BMMath);\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array;\n    }\n    function isNumerable(tOfV, v) {\n      return tOfV === \"number\" || tOfV === \"boolean\" || tOfV === \"string\" || v instanceof Number;\n    }\n    function $bm_neg(a) {\n      var tOfA = typeof a;\n      if (tOfA === \"number\" || tOfA === \"boolean\" || a instanceof Number) {\n        return -a;\n      }\n      if ($bm_isInstanceOfArray(a)) {\n        var i;\n        var lenA = a.length;\n        var retArr = [];\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i];\n        }\n        return retArr;\n      }\n      if (a.propType) {\n        return a.v;\n      }\n      return -a;\n    }\n    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, \"easeIn\").get;\n    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, \"easeOut\").get;\n    var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, \"easeInOut\").get;\n    function sum(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      if (tOfA === \"string\" || tOfB === \"string\") {\n        return a + b;\n      }\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a + b;\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] += b;\n        return a;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a + b[0];\n        return b;\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === \"number\" || a[i] instanceof Number) && (typeof b[i] === \"number\" || b[i] instanceof Number)) {\n            retArr[i] = a[i] + b[i];\n          } else {\n            retArr[i] = b[i] === void 0 ? a[i] : a[i] || b[i];\n          }\n          i += 1;\n        }\n        return retArr;\n      }\n      return 0;\n    }\n    var add = sum;\n    function sub(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === \"string\") {\n          a = parseInt(a, 10);\n        }\n        if (tOfB === \"string\") {\n          b = parseInt(b, 10);\n        }\n        return a - b;\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] -= b;\n        return a;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a - b[0];\n        return b;\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === \"number\" || a[i] instanceof Number) && (typeof b[i] === \"number\" || b[i] instanceof Number)) {\n            retArr[i] = a[i] - b[i];\n          } else {\n            retArr[i] = b[i] === void 0 ? a[i] : a[i] || b[i];\n          }\n          i += 1;\n        }\n        return retArr;\n      }\n      return 0;\n    }\n    function mul(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b;\n      }\n      var i;\n      var len;\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b;\n        }\n        return arr;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i];\n        }\n        return arr;\n      }\n      return 0;\n    }\n    function div(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b;\n      }\n      var i;\n      var len;\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b;\n        }\n        return arr;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i];\n        }\n        return arr;\n      }\n      return 0;\n    }\n    function mod(a, b) {\n      if (typeof a === \"string\") {\n        a = parseInt(a, 10);\n      }\n      if (typeof b === \"string\") {\n        b = parseInt(b, 10);\n      }\n      return a % b;\n    }\n    var $bm_sum = sum;\n    var $bm_sub = sub;\n    var $bm_mul = mul;\n    var $bm_div = div;\n    var $bm_mod = mod;\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max;\n        max = min;\n        min = mm;\n      }\n      return Math.min(Math.max(num, min), max);\n    }\n    function radiansToDegrees(val2) {\n      return val2 / degToRads;\n    }\n    var radians_to_degrees = radiansToDegrees;\n    function degreesToRadians(val2) {\n      return val2 * degToRads;\n    }\n    var degrees_to_radians = radiansToDegrees;\n    var helperLengthArray = [0, 0, 0, 0, 0, 0];\n    function length(arr1, arr2) {\n      if (typeof arr1 === \"number\" || arr1 instanceof Number) {\n        arr2 = arr2 || 0;\n        return Math.abs(arr1 - arr2);\n      }\n      if (!arr2) {\n        arr2 = helperLengthArray;\n      }\n      var i;\n      var len = Math.min(arr1.length, arr2.length);\n      var addedLength = 0;\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2);\n      }\n      return Math.sqrt(addedLength);\n    }\n    function normalize(vec) {\n      return div(vec, length(vec));\n    }\n    function rgbToHsl(val2) {\n      var r = val2[0];\n      var g = val2[1];\n      var b = val2[2];\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var h;\n      var s;\n      var l = (max + min) / 2;\n      if (max === min) {\n        h = 0;\n        s = 0;\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n      return [h, s, l, val2[3]];\n    }\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    function hslToRgb(val2) {\n      var h = val2[0];\n      var s = val2[1];\n      var l = val2[2];\n      var r;\n      var g;\n      var b;\n      if (s === 0) {\n        r = l;\n        b = l;\n        g = l;\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n      return [r, g, b, val2[3]];\n    }\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === void 0 || value2 === void 0) {\n        value1 = tMin;\n        value2 = tMax;\n        tMin = 0;\n        tMax = 1;\n      }\n      if (tMax < tMin) {\n        var _tMin = tMax;\n        tMax = tMin;\n        tMin = _tMin;\n      }\n      if (t <= tMin) {\n        return value1;\n      }\n      if (t >= tMax) {\n        return value2;\n      }\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc;\n      }\n      var i;\n      var len = value1.length;\n      var arr = createTypedArray(\"float32\", len);\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc;\n      }\n      return arr;\n    }\n    function random(min, max) {\n      if (max === void 0) {\n        if (min === void 0) {\n          min = 0;\n          max = 1;\n        } else {\n          max = min;\n          min = void 0;\n        }\n      }\n      if (max.length) {\n        var i;\n        var len = max.length;\n        if (!min) {\n          min = createTypedArray(\"float32\", len);\n        }\n        var arr = createTypedArray(\"float32\", len);\n        var rnd = BMMath.random();\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i]);\n        }\n        return arr;\n      }\n      if (min === void 0) {\n        min = 0;\n      }\n      var rndm = BMMath.random();\n      return min + rndm * (max - min);\n    }\n    function createPath(points, inTangents, outTangents, closed) {\n      var i;\n      var len = points.length;\n      var path = shapePool.newElement();\n      path.setPathData(!!closed, len);\n      var arrPlaceholder = [0, 0];\n      var inVertexPoint;\n      var outVertexPoint;\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder;\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder;\n        path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);\n      }\n      return path;\n    }\n    function initiateExpression(elem, data, property) {\n      var val = data.x;\n      var needsVelocity = /velocity(?![\\w\\d])/.test(val);\n      var _needsRandom = val.indexOf(\"random\") !== -1;\n      var elemType = elem.data.ty;\n      var transform;\n      var $bm_transform;\n      var content;\n      var effect;\n      var thisProperty = property;\n      thisProperty.valueAtTime = thisProperty.getValueAtTime;\n      Object.defineProperty(thisProperty, \"value\", {\n        get: function () {\n          return thisProperty.v;\n        }\n      });\n      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;\n      elem.comp.displayStartTime = 0;\n      var inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      var outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      var width = elem.data.sw ? elem.data.sw : 0;\n      var height = elem.data.sh ? elem.data.sh : 0;\n      var name = elem.data.nm;\n      var loopIn;\n      var loop_in;\n      var loopOut;\n      var loop_out;\n      var smooth;\n      var toWorld;\n      var fromWorld;\n      var fromComp;\n      var toComp;\n      var fromCompToSurface;\n      var position;\n      var rotation;\n      var anchorPoint;\n      var scale;\n      var thisLayer;\n      var thisComp;\n      var mask;\n      var valueAtTime;\n      var velocityAtTime;\n      var scoped_bm_rt;\n      var expression_function = eval(\"[function _expression_function(){\" + val + \";scoped_bm_rt=$bm_rt}]\")[0];\n      var numKeys = property.kf ? data.k.length : 0;\n      var active = !this.data || this.data.hd !== true;\n      var wiggle = function wiggle2(freq, amp) {\n        var iWiggle;\n        var j;\n        var lenWiggle = this.pv.length ? this.pv.length : 1;\n        var addedAmps = createTypedArray(\"float32\", lenWiggle);\n        freq = 5;\n        var iterations = Math.floor(time * freq);\n        iWiggle = 0;\n        j = 0;\n        while (iWiggle < iterations) {\n          for (j = 0; j < lenWiggle; j += 1) {\n            addedAmps[j] += -amp + amp * 2 * BMMath.random();\n          }\n          iWiggle += 1;\n        }\n        var periods = time * freq;\n        var perc = periods - Math.floor(periods);\n        var arr = createTypedArray(\"float32\", lenWiggle);\n        if (lenWiggle > 1) {\n          for (j = 0; j < lenWiggle; j += 1) {\n            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc;\n          }\n          return arr;\n        }\n        return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;\n      }.bind(this);\n      if (thisProperty.loopIn) {\n        loopIn = thisProperty.loopIn.bind(thisProperty);\n        loop_in = loopIn;\n      }\n      if (thisProperty.loopOut) {\n        loopOut = thisProperty.loopOut.bind(thisProperty);\n        loop_out = loopOut;\n      }\n      if (thisProperty.smooth) {\n        smooth = thisProperty.smooth.bind(thisProperty);\n      }\n      function loopInDuration(type, duration) {\n        return loopIn(type, duration, true);\n      }\n      function loopOutDuration(type, duration) {\n        return loopOut(type, duration, true);\n      }\n      if (this.getValueAtTime) {\n        valueAtTime = this.getValueAtTime.bind(this);\n      }\n      if (this.getVelocityAtTime) {\n        velocityAtTime = this.getVelocityAtTime.bind(this);\n      }\n      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\n      function lookAt(elem1, elem2) {\n        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];\n        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;\n        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;\n        return [yaw, pitch, 0];\n      }\n      function easeOut(t, tMin, tMax, val1, val2) {\n        return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\n      }\n      function easeIn(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInBez, t, tMin, tMax, val1, val2);\n      }\n      function ease(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\n      }\n      function applyEase(fn, t, tMin, tMax, val1, val2) {\n        if (val1 === void 0) {\n          val1 = tMin;\n          val2 = tMax;\n        } else {\n          t = (t - tMin) / (tMax - tMin);\n        }\n        if (t > 1) {\n          t = 1;\n        } else if (t < 0) {\n          t = 0;\n        }\n        var mult = fn(t);\n        if ($bm_isInstanceOfArray(val1)) {\n          var iKey;\n          var lenKey = val1.length;\n          var arr = createTypedArray(\"float32\", lenKey);\n          for (iKey = 0; iKey < lenKey; iKey += 1) {\n            arr[iKey] = (val2[iKey] - val1[iKey]) * mult + val1[iKey];\n          }\n          return arr;\n        }\n        return (val2 - val1) * mult + val1;\n      }\n      function nearestKey(time2) {\n        var iKey;\n        var lenKey = data.k.length;\n        var index2;\n        var keyTime;\n        if (!data.k.length || typeof data.k[0] === \"number\") {\n          index2 = 0;\n          keyTime = 0;\n        } else {\n          index2 = -1;\n          time2 *= elem.comp.globalData.frameRate;\n          if (time2 < data.k[0].t) {\n            index2 = 1;\n            keyTime = data.k[0].t;\n          } else {\n            for (iKey = 0; iKey < lenKey - 1; iKey += 1) {\n              if (time2 === data.k[iKey].t) {\n                index2 = iKey + 1;\n                keyTime = data.k[iKey].t;\n                break;\n              } else if (time2 > data.k[iKey].t && time2 < data.k[iKey + 1].t) {\n                if (time2 - data.k[iKey].t > data.k[iKey + 1].t - time2) {\n                  index2 = iKey + 2;\n                  keyTime = data.k[iKey + 1].t;\n                } else {\n                  index2 = iKey + 1;\n                  keyTime = data.k[iKey].t;\n                }\n                break;\n              }\n            }\n            if (index2 === -1) {\n              index2 = iKey + 1;\n              keyTime = data.k[iKey].t;\n            }\n          }\n        }\n        var obKey = {};\n        obKey.index = index2;\n        obKey.time = keyTime / elem.comp.globalData.frameRate;\n        return obKey;\n      }\n      function key(ind) {\n        var obKey;\n        var iKey;\n        var lenKey;\n        if (!data.k.length || typeof data.k[0] === \"number\") {\n          throw new Error(\"The property has no keyframe at index \" + ind);\n        }\n        ind -= 1;\n        obKey = {\n          time: data.k[ind].t / elem.comp.globalData.frameRate,\n          value: []\n        };\n        var arr = Object.prototype.hasOwnProperty.call(data.k[ind], \"s\") ? data.k[ind].s : data.k[ind - 1].e;\n        lenKey = arr.length;\n        for (iKey = 0; iKey < lenKey; iKey += 1) {\n          obKey[iKey] = arr[iKey];\n          obKey.value[iKey] = arr[iKey];\n        }\n        return obKey;\n      }\n      function framesToTime(fr, fps) {\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n        return fr / fps;\n      }\n      function timeToFrames(t, fps) {\n        if (!t && t !== 0) {\n          t = time;\n        }\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate;\n        }\n        return t * fps;\n      }\n      function seedRandom(seed) {\n        BMMath.seedrandom(randSeed + seed);\n      }\n      function sourceRectAtTime() {\n        return elem.sourceRectAtTime();\n      }\n      function substring(init, end) {\n        if (typeof value === \"string\") {\n          if (end === void 0) {\n            return value.substring(init);\n          }\n          return value.substring(init, end);\n        }\n        return \"\";\n      }\n      function substr(init, end) {\n        if (typeof value === \"string\") {\n          if (end === void 0) {\n            return value.substr(init);\n          }\n          return value.substr(init, end);\n        }\n        return \"\";\n      }\n      function posterizeTime(framesPerSecond) {\n        time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond;\n        value = valueAtTime(time);\n      }\n      var time;\n      var velocity;\n      var value;\n      var text;\n      var textIndex;\n      var textTotal;\n      var selectorValue;\n      var index = elem.data.ind;\n      var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n      var parent;\n      var randSeed = Math.floor(Math.random() * 1e6);\n      var globalData = elem.globalData;\n      function executeExpression(_value) {\n        value = _value;\n        if (this.frameExpressionId === elem.globalData.frameId && this.propType !== \"textSelector\") {\n          return value;\n        }\n        if (this.propType === \"textSelector\") {\n          textIndex = this.textIndex;\n          textTotal = this.textTotal;\n          selectorValue = this.selectorValue;\n        }\n        if (!thisLayer) {\n          text = elem.layerInterface.text;\n          thisLayer = elem.layerInterface;\n          thisComp = elem.comp.compInterface;\n          toWorld = thisLayer.toWorld.bind(thisLayer);\n          fromWorld = thisLayer.fromWorld.bind(thisLayer);\n          fromComp = thisLayer.fromComp.bind(thisLayer);\n          toComp = thisLayer.toComp.bind(thisLayer);\n          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\n          fromCompToSurface = fromComp;\n        }\n        if (!transform) {\n          transform = elem.layerInterface(\"ADBE Transform Group\");\n          $bm_transform = transform;\n          if (transform) {\n            anchorPoint = transform.anchorPoint;\n          }\n        }\n        if (elemType === 4 && !content) {\n          content = thisLayer(\"ADBE Root Vectors Group\");\n        }\n        if (!effect) {\n          effect = thisLayer(4);\n        }\n        hasParent = !!(elem.hierarchy && elem.hierarchy.length);\n        if (hasParent && !parent) {\n          parent = elem.hierarchy[0].layerInterface;\n        }\n        time = this.comp.renderedFrame / this.comp.globalData.frameRate;\n        if (_needsRandom) {\n          seedRandom(randSeed + time);\n        }\n        if (needsVelocity) {\n          velocity = velocityAtTime(time);\n        }\n        expression_function();\n        this.frameExpressionId = elem.globalData.frameId;\n        scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt;\n        return scoped_bm_rt;\n      }\n      executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData];\n      return executeExpression;\n    }\n    ob.initiateExpression = initiateExpression;\n    ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath];\n    return ob;\n  }();\n  const expressionHelpers = function () {\n    function searchExpressions(elem2, data2, prop) {\n      if (data2.x) {\n        prop.k = true;\n        prop.x = true;\n        prop.initiateExpression = ExpressionManager.initiateExpression;\n        prop.effectsSequence.push(prop.initiateExpression(elem2, data2, prop).bind(prop));\n      }\n    }\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n      return this._cachingAtTime.value;\n    }\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var speed = 0;\n      if (v1.length) {\n        var i;\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2);\n        }\n        speed = Math.sqrt(speed) * 100;\n      } else {\n        speed = 0;\n      }\n      return speed;\n    }\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== void 0) {\n        return this.vel;\n      }\n      var delta = -1e-3;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var velocity2;\n      if (v1.length) {\n        velocity2 = createTypedArray(\"float32\", v1.length);\n        var i;\n        for (i = 0; i < v1.length; i += 1) {\n          velocity2[i] = (v2[i] - v1[i]) / delta;\n        }\n      } else {\n        velocity2 = (v2 - v1) / delta;\n      }\n      return velocity2;\n    }\n    function getStaticValueAtTime() {\n      return this.pv;\n    }\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup;\n    }\n    return {\n      searchExpressions,\n      getSpeedAtTime,\n      getVelocityAtTime,\n      getValueAtTime,\n      getStaticValueAtTime,\n      setGroupProperty\n    };\n  }();\n  function addPropertyDecorator() {\n    function loopOut2(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv;\n      }\n      type = type ? type.toLowerCase() : \"\";\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var lastKeyFrame = keyframes[keyframes.length - 1].t;\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv;\n      }\n      var cycleDuration;\n      var firstKeyFrame;\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n        firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);\n        } else {\n          cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration);\n        }\n        firstKeyFrame = lastKeyFrame - cycleDuration;\n      }\n      var i;\n      var len;\n      var ret;\n      if (type === \"pingpong\") {\n        var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n        if (iterations % 2 !== 0) {\n          return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        }\n      } else if (type === \"offset\") {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = (endV[i] - initV[i]) * repeats + current[i];\n          }\n          return ret;\n        }\n        return (endV - initV) * repeats + current;\n      } else if (type === \"continue\") {\n        var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextLastValue = this.getValueAtTime((lastKeyFrame - 1e-3) / this.comp.globalData.frameRate, 0);\n        if (this.pv.length) {\n          ret = new Array(lastValue.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 5e-4;\n          }\n          return ret;\n        }\n        return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 1e-3);\n      }\n      return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n    }\n    function loopIn2(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv;\n      }\n      type = type ? type.toLowerCase() : \"\";\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var firstKeyFrame = keyframes[0].t;\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv;\n      }\n      var cycleDuration;\n      var lastKeyFrame;\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n        lastKeyFrame = keyframes[duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);\n        } else {\n          cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration);\n        }\n        lastKeyFrame = firstKeyFrame + cycleDuration;\n      }\n      var i;\n      var len;\n      var ret;\n      if (type === \"pingpong\") {\n        var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);\n        if (iterations % 2 === 0) {\n          return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        }\n      } else if (type === \"offset\") {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = current[i] - (endV[i] - initV[i]) * repeats;\n          }\n          return ret;\n        }\n        return current - (endV - initV) * repeats;\n      } else if (type === \"continue\") {\n        var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextFirstValue = this.getValueAtTime((firstKeyFrame + 1e-3) / this.comp.globalData.frameRate, 0);\n        if (this.pv.length) {\n          ret = new Array(firstValue.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 1e-3;\n          }\n          return ret;\n        }\n        return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 1e-3;\n      }\n      return this.getValueAtTime((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0);\n    }\n    function smooth2(width2, samples) {\n      if (!this.k) {\n        return this.pv;\n      }\n      width2 = (width2 || 0.4) * 0.5;\n      samples = Math.floor(samples || 5);\n      if (samples <= 1) {\n        return this.pv;\n      }\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\n      var initFrame = currentTime - width2;\n      var endFrame = currentTime + width2;\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\n      var i = 0;\n      var j = 0;\n      var value2;\n      if (this.pv.length) {\n        value2 = createTypedArray(\"float32\", this.pv.length);\n      } else {\n        value2 = 0;\n      }\n      var sampleValue;\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value2[j] += sampleValue[j];\n          }\n        } else {\n          value2 += sampleValue;\n        }\n        i += 1;\n      }\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value2[j] /= samples;\n        }\n      } else {\n        value2 /= samples;\n      }\n      return value2;\n    }\n    function getTransformValueAtTime(time2) {\n      if (!this._transformCachingAtTime) {\n        this._transformCachingAtTime = {\n          v: new Matrix()\n        };\n      }\n      var matrix = this._transformCachingAtTime.v;\n      matrix.cloneFromProps(this.pre.props);\n      if (this.appliedTransformations < 1) {\n        var anchor = this.a.getValueAtTime(time2);\n        matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult);\n      }\n      if (this.appliedTransformations < 2) {\n        var scale2 = this.s.getValueAtTime(time2);\n        matrix.scale(scale2[0] * this.s.mult, scale2[1] * this.s.mult, scale2[2] * this.s.mult);\n      }\n      if (this.sk && this.appliedTransformations < 3) {\n        var skew = this.sk.getValueAtTime(time2);\n        var skewAxis = this.sa.getValueAtTime(time2);\n        matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult);\n      }\n      if (this.r && this.appliedTransformations < 4) {\n        var rotation2 = this.r.getValueAtTime(time2);\n        matrix.rotate(-rotation2 * this.r.mult);\n      } else if (!this.r && this.appliedTransformations < 4) {\n        var rotationZ = this.rz.getValueAtTime(time2);\n        var rotationY = this.ry.getValueAtTime(time2);\n        var rotationX = this.rx.getValueAtTime(time2);\n        var orientation = this.or.getValueAtTime(time2);\n        matrix.rotateZ(-rotationZ * this.rz.mult).rotateY(rotationY * this.ry.mult).rotateX(rotationX * this.rx.mult).rotateZ(-orientation[2] * this.or.mult).rotateY(orientation[1] * this.or.mult).rotateX(orientation[0] * this.or.mult);\n      }\n      if (this.data.p && this.data.p.s) {\n        var positionX = this.px.getValueAtTime(time2);\n        var positionY = this.py.getValueAtTime(time2);\n        if (this.data.p.z) {\n          var positionZ = this.pz.getValueAtTime(time2);\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult);\n        } else {\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0);\n        }\n      } else {\n        var position2 = this.p.getValueAtTime(time2);\n        matrix.translate(position2[0] * this.p.mult, position2[1] * this.p.mult, -position2[2] * this.p.mult);\n      }\n      return matrix;\n    }\n    function getTransformStaticValueAtTime() {\n      return this.v.clone(new Matrix());\n    }\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\n    TransformPropertyFactory.getTransformProperty = function (elem2, data2, container) {\n      var prop = getTransformProperty(elem2, data2, container);\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      return prop;\n    };\n    var propertyGetProp = PropertyFactory.getProp;\n    PropertyFactory.getProp = function (elem2, data2, type, mult, container) {\n      var prop = propertyGetProp(elem2, data2, type, mult, container);\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      prop.loopOut = loopOut2;\n      prop.loopIn = loopIn2;\n      prop.smooth = smooth2;\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\n      prop.numKeys = data2.a === 1 ? data2.k.length : 0;\n      prop.propertyIndex = data2.ix;\n      var value2 = 0;\n      if (type !== 0) {\n        value2 = createTypedArray(\"float32\", data2.a === 1 ? data2.k[0].s.length : data2.k.length);\n      }\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value: value2\n      };\n      expressionHelpers.searchExpressions(elem2, data2, prop);\n      if (prop.k) {\n        container.addDynamicProperty(prop);\n      }\n      return prop;\n    };\n    function getShapeValueAtTime(frameNum) {\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shapePool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame\n        };\n      }\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\n        this._cachingAtTime.lastTime = frameNum;\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\n      }\n      return this._cachingAtTime.shapeValue;\n    }\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\n    function ShapeExpressions() {}\n    ShapeExpressions.prototype = {\n      vertices: function (prop, time2) {\n        if (this.k) {\n          this.getValue();\n        }\n        var shapePath = this.v;\n        if (time2 !== void 0) {\n          shapePath = this.getValueAtTime(time2, 0);\n        }\n        var i;\n        var len = shapePath._length;\n        var vertices = shapePath[prop];\n        var points = shapePath.v;\n        var arr = createSizedArray(len);\n        for (i = 0; i < len; i += 1) {\n          if (prop === \"i\" || prop === \"o\") {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]];\n          }\n        }\n        return arr;\n      },\n      points: function (time2) {\n        return this.vertices(\"v\", time2);\n      },\n      inTangents: function (time2) {\n        return this.vertices(\"i\", time2);\n      },\n      outTangents: function (time2) {\n        return this.vertices(\"o\", time2);\n      },\n      isClosed: function () {\n        return this.v.c;\n      },\n      pointOnPath: function (perc, time2) {\n        var shapePath = this.v;\n        if (time2 !== void 0) {\n          shapePath = this.getValueAtTime(time2, 0);\n        }\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath);\n        }\n        var segmentsLength = this._segmentsLength;\n        var lengths = segmentsLength.lengths;\n        var lengthPos = segmentsLength.totalLength * perc;\n        var i = 0;\n        var len = lengths.length;\n        var accumulatedLength = 0;\n        var pt;\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i;\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;\n            pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\n            break;\n          } else {\n            accumulatedLength += lengths[i].addedLength;\n          }\n          i += 1;\n        }\n        if (!pt) {\n          pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];\n        }\n        return pt;\n      },\n      vectorOnPath: function (perc, time2, vectorType) {\n        if (perc == 1) {\n          perc = this.v.c;\n        } else if (perc == 0) {\n          perc = 0.999;\n        }\n        var pt1 = this.pointOnPath(perc, time2);\n        var pt2 = this.pointOnPath(perc + 1e-3, time2);\n        var xLength = pt2[0] - pt1[0];\n        var yLength = pt2[1] - pt1[1];\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));\n        if (magnitude === 0) {\n          return [0, 0];\n        }\n        var unitVector = vectorType === \"tangent\" ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];\n        return unitVector;\n      },\n      tangentOnPath: function (perc, time2) {\n        return this.vectorOnPath(perc, time2, \"tangent\");\n      },\n      normalOnPath: function (perc, time2) {\n        return this.vectorOnPath(perc, time2, \"normal\");\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime\n    };\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\n    ShapePropertyFactory.getShapeProp = function (elem2, data2, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem2, data2, type, arr, trims);\n      prop.propertyIndex = data2.ix;\n      prop.lock = false;\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem2, data2.pt, prop);\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem2, data2.ks, prop);\n      }\n      if (prop.k) {\n        elem2.addDynamicProperty(prop);\n      }\n      return prop;\n    };\n  }\n  function initialize$1() {\n    addPropertyDecorator();\n  }\n  function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);\n        this.addEffect(this.getExpressionValue.bind(this));\n        return true;\n      }\n      return null;\n    }\n    TextProperty.prototype.getExpressionValue = function (currentValue, text2) {\n      var newValue = this.calculateExpression(text2);\n      if (currentValue.t !== newValue) {\n        var newData = {};\n        this.copyData(newData, currentValue);\n        newData.t = newValue.toString();\n        newData.__complete = false;\n        return newData;\n      }\n      return currentValue;\n    };\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes();\n      var hasExpressions = this.searchExpressions();\n      this.kf = isKeyframed || hasExpressions;\n      return this.kf;\n    };\n    TextProperty.prototype.searchExpressions = searchExpressions;\n  }\n  function initialize() {\n    addDecorator();\n  }\n  setExpressionsPlugin(Expressions);\n  initialize$1();\n  initialize();\n  return lottie;\n})();\nexport { lottie as default };","map":{"version":3,"sources":["../../src/libs/lottie.js"],"names":["value","val","data","comp","loadAnimation","ob","name","key","expressionsPlugin","index","searchAnimations","div","length","time","elem","scale","transform","width","text","sum","mask","property","toWorld","fromWorld","fromComp","i","len","content","globalData","position","prng","seed","t","j","s","BMMath","wiggle","velocity","loopOut","loopIn","smooth","rotation"],"mappings":"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","sourcesContent":["const lottie = (() => {\n  if (typeof navigator === 'undefined' || typeof document === 'undefined') return {}\n\n  const svgNS = 'http://www.w3.org/2000/svg'\n\n  let locationHref = ''\n  let _useWebWorker = false\n\n  const initialDefaultFrame = -999999\n\n  const setWebWorker = (flag) => {\n    _useWebWorker = !!flag\n  }\n  const getWebWorker = () => _useWebWorker\n\n  const setLocationHref = (value) => {\n    locationHref = value\n  }\n  const getLocationHref = () => locationHref\n\n  function createTag(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElement(type)\n  }\n\n  function extendPrototype(sources, destination) {\n    var i\n    var len = sources.length\n    var sourcePrototype\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype\n      for (var attr in sourcePrototype) {\n        if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr))\n          destination.prototype[attr] = sourcePrototype[attr]\n      }\n    }\n  }\n\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop)\n  }\n\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n    ProxyFunction.prototype = prototype\n    return ProxyFunction\n  }\n\n  // import Howl from '../../3rd_party/howler';\n\n  const audioControllerFactory = (function () {\n    function AudioController(audioFactory) {\n      this.audios = []\n      this.audioFactory = audioFactory\n      this._volume = 1\n      this._isMuted = false\n    }\n\n    AudioController.prototype = {\n      addAudio: function (audio) {\n        this.audios.push(audio)\n      },\n      pause: function () {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].pause()\n        }\n      },\n      resume: function () {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].resume()\n        }\n      },\n      setRate: function (rateValue) {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].setRate(rateValue)\n        }\n      },\n      createAudio: function (assetPath) {\n        if (this.audioFactory) {\n          return this.audioFactory(assetPath)\n        }\n        if (window.Howl) {\n          return new window.Howl({\n            src: [assetPath],\n          })\n        }\n        return {\n          isPlaying: false,\n          play: function () {\n            this.isPlaying = true\n          },\n          seek: function () {\n            this.isPlaying = false\n          },\n          playing: function () {},\n          rate: function () {},\n          setVolume: function () {},\n        }\n      },\n      setAudioFactory: function (audioFactory) {\n        this.audioFactory = audioFactory\n      },\n      setVolume: function (value) {\n        this._volume = value\n        this._updateVolume()\n      },\n      mute: function () {\n        this._isMuted = true\n        this._updateVolume()\n      },\n      unmute: function () {\n        this._isMuted = false\n        this._updateVolume()\n      },\n      getVolume: function () {\n        return this._volume\n      },\n      _updateVolume: function () {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1))\n        }\n      },\n    }\n\n    return function () {\n      return new AudioController()\n    }\n  })()\n\n  const createTypedArray = (function () {\n    function createRegularArray(type, len) {\n      var i = 0\n      var arr = []\n      var value\n      switch (type) {\n        case 'int16':\n        case 'uint8c':\n          value = 1\n          break\n        default:\n          value = 1.1\n          break\n      }\n      for (i = 0; i < len; i += 1) {\n        arr.push(value)\n      }\n      return arr\n    }\n    function createTypedArrayFactory(type, len) {\n      if (type === 'float32') {\n        return new Float32Array(len)\n      }\n      if (type === 'int16') {\n        return new Int16Array(len)\n      }\n      if (type === 'uint8c') {\n        return new Uint8ClampedArray(len)\n      }\n      return createRegularArray(type, len)\n    }\n    if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\n      return createTypedArrayFactory\n    }\n    return createRegularArray\n  })()\n\n  function createSizedArray(len) {\n    return Array.apply(null, { length: len })\n  }\n\n  let subframeEnabled = true\n  let expressionsPlugin = null\n  let idPrefix$1 = ''\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  let _shouldRoundValues = false\n  const bmPow = Math.pow\n  const bmSqrt = Math.sqrt\n  const bmFloor = Math.floor\n  const bmMax = Math.max\n  const bmMin = Math.min\n\n  const BMMath = {}\n  ;(function () {\n    var propertyNames = [\n      'abs',\n      'acos',\n      'acosh',\n      'asin',\n      'asinh',\n      'atan',\n      'atanh',\n      'atan2',\n      'ceil',\n      'cbrt',\n      'expm1',\n      'clz32',\n      'cos',\n      'cosh',\n      'exp',\n      'floor',\n      'fround',\n      'hypot',\n      'imul',\n      'log',\n      'log1p',\n      'log2',\n      'log10',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sinh',\n      'sqrt',\n      'tan',\n      'tanh',\n      'trunc',\n      'E',\n      'LN10',\n      'LN2',\n      'LOG10E',\n      'LOG2E',\n      'PI',\n      'SQRT1_2',\n      'SQRT2',\n    ]\n    var i\n    var len = propertyNames.length\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]]\n    }\n  })()\n\n  function ProjectInterface$1() {\n    return {}\n  }\n  BMMath.random = Math.random\n  BMMath.abs = function (val) {\n    var tOfVal = typeof val\n    if (tOfVal === 'object' && val.length) {\n      var absArr = createSizedArray(val.length)\n      var i\n      var len = val.length\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val[i])\n      }\n      return absArr\n    }\n    return Math.abs(val)\n  }\n  let defaultCurveSegments = 150\n  const degToRads = Math.PI / 180\n  const roundCorner = 0.5519\n\n  function roundValues(flag) {\n    _shouldRoundValues = !!flag\n  }\n\n  function bmRnd(value) {\n    if (_shouldRoundValues) {\n      return Math.round(value)\n    }\n    return value\n  }\n\n  function styleDiv(element) {\n    element.style.position = 'absolute'\n    element.style.top = 0\n    element.style.left = 0\n    element.style.display = 'block'\n    element.style.transformOrigin = '0 0'\n    element.style.webkitTransformOrigin = '0 0'\n    element.style.backfaceVisibility = 'visible'\n    element.style.webkitBackfaceVisibility = 'visible'\n    element.style.transformStyle = 'preserve-3d'\n    element.style.webkitTransformStyle = 'preserve-3d'\n    element.style.mozTransformStyle = 'preserve-3d'\n  }\n\n  function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\n    this.type = type\n    this.currentTime = currentTime\n    this.totalTime = totalTime\n    this.direction = frameMultiplier < 0 ? -1 : 1\n  }\n\n  function BMCompleteEvent(type, frameMultiplier) {\n    this.type = type\n    this.direction = frameMultiplier < 0 ? -1 : 1\n  }\n\n  function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\n    this.type = type\n    this.currentLoop = currentLoop\n    this.totalLoops = totalLoops\n    this.direction = frameMultiplier < 0 ? -1 : 1\n  }\n\n  function BMSegmentStartEvent(type, firstFrame, totalFrames) {\n    this.type = type\n    this.firstFrame = firstFrame\n    this.totalFrames = totalFrames\n  }\n\n  function BMDestroyEvent(type, target) {\n    this.type = type\n    this.target = target\n  }\n\n  function BMRenderFrameErrorEvent(nativeError, currentTime) {\n    this.type = 'renderFrameError'\n    this.nativeError = nativeError\n    this.currentTime = currentTime\n  }\n\n  function BMConfigErrorEvent(nativeError) {\n    this.type = 'configError'\n    this.nativeError = nativeError\n  }\n\n  function BMAnimationConfigErrorEvent(type, nativeError) {\n    this.type = type\n    this.nativeError = nativeError\n  }\n\n  const createElementID = (function () {\n    var _count = 0\n    return function createID() {\n      _count += 1\n      return idPrefix$1 + '__lottie_element_' + _count\n    }\n  })()\n\n  function HSVtoRGB(h, s, v) {\n    var r\n    var g\n    var b\n    var i\n    var f\n    var p\n    var q\n    var t\n    i = Math.floor(h * 6)\n    f = h * 6 - i\n    p = v * (1 - s)\n    q = v * (1 - f * s)\n    t = v * (1 - (1 - f) * s)\n    switch (i % 6) {\n      case 0:\n        r = v\n        g = t\n        b = p\n        break\n      case 1:\n        r = q\n        g = v\n        b = p\n        break\n      case 2:\n        r = p\n        g = v\n        b = t\n        break\n      case 3:\n        r = p\n        g = q\n        b = v\n        break\n      case 4:\n        r = t\n        g = p\n        b = v\n        break\n      case 5:\n        r = v\n        g = p\n        b = q\n        break\n      default:\n        break\n    }\n    return [r, g, b]\n  }\n\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b)\n    var min = Math.min(r, g, b)\n    var d = max - min\n    var h\n    var s = max === 0 ? 0 : d / max\n    var v = max / 255\n\n    switch (max) {\n      case min:\n        h = 0\n        break\n      case r:\n        h = g - b + d * (g < b ? 6 : 0)\n        h /= 6 * d\n        break\n      case g:\n        h = b - r + d * 2\n        h /= 6 * d\n        break\n      case b:\n        h = r - g + d * 4\n        h /= 6 * d\n        break\n      default:\n        break\n    }\n\n    return [h, s, v]\n  }\n\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255)\n    hsv[1] += offset\n    if (hsv[1] > 1) {\n      hsv[1] = 1\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2])\n  }\n\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255)\n    hsv[2] += offset\n    if (hsv[2] > 1) {\n      hsv[2] = 1\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2])\n  }\n\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255)\n    hsv[0] += offset / 360\n    if (hsv[0] > 1) {\n      hsv[0] -= 1\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2])\n  }\n\n  const rgbToHex = (function () {\n    var colorMap = []\n    var i\n    var hex\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16)\n      colorMap[i] = hex.length === 1 ? '0' + hex : hex\n    }\n\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0\n      }\n      if (g < 0) {\n        g = 0\n      }\n      if (b < 0) {\n        b = 0\n      }\n      return '#' + colorMap[r] + colorMap[g] + colorMap[b]\n    }\n  })()\n\n  const setSubframeEnabled = (flag) => {\n    subframeEnabled = !!flag\n  }\n  const getSubframeEnabled = () => subframeEnabled\n  const setExpressionsPlugin = (value) => {\n    expressionsPlugin = value\n  }\n  const getExpressionsPlugin = () => expressionsPlugin\n  const setDefaultCurveSegments = (value) => {\n    defaultCurveSegments = value\n  }\n  const getDefaultCurveSegments = () => defaultCurveSegments\n  const setIdPrefix = (value) => {\n    idPrefix$1 = value\n  }\n  const getIdPrefix = () => idPrefix$1\n\n  function createNS(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElementNS(svgNS, type)\n  }\n\n  const dataManager = (function () {\n    var _counterId = 1\n    var processes = []\n    var workerFn\n    var workerInstance\n    var workerProxy = {\n      onmessage: function () {},\n      postMessage: function (path) {\n        workerFn({\n          data: path,\n        })\n      },\n    }\n    var _workerSelf = {\n      postMessage: function (data) {\n        workerProxy.onmessage({\n          data: data,\n        })\n      },\n    }\n    function createWorker(fn) {\n      if (window.Worker && window.Blob && getWebWorker()) {\n        var blob = new Blob(['var _workerSelf = self; self.onmessage = ', fn.toString()], { type: 'text/javascript' })\n        // var blob = new Blob(['self.onmessage = ', fn.toString()], { type: 'text/javascript' });\n        var url = URL.createObjectURL(blob)\n        return new Worker(url)\n      }\n      workerFn = fn\n      return workerProxy\n    }\n\n    function setupWorker() {\n      if (!workerInstance) {\n        workerInstance = createWorker(function workerStart(e) {\n          function dataFunctionManager() {\n            function completeLayers(layers, comps) {\n              var layerData\n              var i\n              var len = layers.length\n              var j\n              var jLen\n              var k\n              var kLen\n              for (i = 0; i < len; i += 1) {\n                layerData = layers[i]\n                if ('ks' in layerData && !layerData.completed) {\n                  layerData.completed = true\n                  if (layerData.tt) {\n                    layers[i - 1].td = layerData.tt\n                  }\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties\n                    jLen = maskProps.length\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k)\n                      } else {\n                        kLen = maskProps[j].pt.k.length\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0])\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0])\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 0) {\n                    layerData.layers = findCompLayers(layerData.refId, comps)\n                    completeLayers(layerData.layers, comps)\n                  } else if (layerData.ty === 4) {\n                    completeShapes(layerData.shapes)\n                  } else if (layerData.ty === 5) {\n                    completeText(layerData)\n                  }\n                }\n              }\n            }\n\n            function completeChars(chars, assets) {\n              if (chars) {\n                var i = 0\n                var len = chars.length\n                for (i = 0; i < len; i += 1) {\n                  if (chars[i].t === 1) {\n                    // var compData = findComp(chars[i].data.refId, assets);\n                    chars[i].data.layers = findCompLayers(chars[i].data.refId, assets)\n                    // chars[i].data.ip = 0;\n                    // chars[i].data.op = 99999;\n                    // chars[i].data.st = 0;\n                    // chars[i].data.sr = 1;\n                    // chars[i].w = compData.w;\n                    // chars[i].data.ks = {\n                    //   a: { k: [0, 0, 0], a: 0 },\n                    //   p: { k: [0, -compData.h, 0], a: 0 },\n                    //   r: { k: 0, a: 0 },\n                    //   s: { k: [100, 100], a: 0 },\n                    //   o: { k: 100, a: 0 },\n                    // };\n                    completeLayers(chars[i].data.layers, assets)\n                  }\n                }\n              }\n            }\n\n            function findComp(id, comps) {\n              var i = 0\n              var len = comps.length\n              while (i < len) {\n                if (comps[i].id === id) {\n                  return comps[i]\n                }\n                i += 1\n              }\n              return null\n            }\n\n            function findCompLayers(id, comps) {\n              var comp = findComp(id, comps)\n              if (comp) {\n                if (!comp.layers.__used) {\n                  comp.layers.__used = true\n                  return comp.layers\n                }\n                return JSON.parse(JSON.stringify(comp.layers))\n              }\n              return null\n            }\n\n            function completeShapes(arr) {\n              var i\n              var len = arr.length\n              var j\n              var jLen\n              for (i = len - 1; i >= 0; i -= 1) {\n                if (arr[i].ty === 'sh') {\n                  if (arr[i].ks.k.i) {\n                    convertPathsToAbsoluteValues(arr[i].ks.k)\n                  } else {\n                    jLen = arr[i].ks.k.length\n                    for (j = 0; j < jLen; j += 1) {\n                      if (arr[i].ks.k[j].s) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0])\n                      }\n                      if (arr[i].ks.k[j].e) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0])\n                      }\n                    }\n                  }\n                } else if (arr[i].ty === 'gr') {\n                  completeShapes(arr[i].it)\n                }\n              }\n            }\n\n            function convertPathsToAbsoluteValues(path) {\n              var i\n              var len = path.i.length\n              for (i = 0; i < len; i += 1) {\n                path.i[i][0] += path.v[i][0]\n                path.i[i][1] += path.v[i][1]\n                path.o[i][0] += path.v[i][0]\n                path.o[i][1] += path.v[i][1]\n              }\n            }\n\n            function checkVersion(minimum, animVersionString) {\n              var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100]\n              if (minimum[0] > animVersion[0]) {\n                return true\n              }\n              if (animVersion[0] > minimum[0]) {\n                return false\n              }\n              if (minimum[1] > animVersion[1]) {\n                return true\n              }\n              if (animVersion[1] > minimum[1]) {\n                return false\n              }\n              if (minimum[2] > animVersion[2]) {\n                return true\n              }\n              if (animVersion[2] > minimum[2]) {\n                return false\n              }\n              return null\n            }\n\n            var checkText = (function () {\n              var minimumVersion = [4, 4, 14]\n\n              function updateTextLayer(textLayer) {\n                var documentData = textLayer.t.d\n                textLayer.t.d = {\n                  k: [\n                    {\n                      s: documentData,\n                      t: 0,\n                    },\n                  ],\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i\n                var len = layers.length\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i])\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkChars = (function () {\n              var minimumVersion = [4, 7, 99]\n              return function (animationData) {\n                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n                  var i\n                  var len = animationData.chars.length\n                  for (i = 0; i < len; i += 1) {\n                    var charData = animationData.chars[i]\n                    if (charData.data && charData.data.shapes) {\n                      completeShapes(charData.data.shapes)\n                      charData.data.ip = 0\n                      charData.data.op = 99999\n                      charData.data.st = 0\n                      charData.data.sr = 1\n                      charData.data.ks = {\n                        p: { k: [0, 0], a: 0 },\n                        s: { k: [100, 100], a: 0 },\n                        a: { k: [0, 0], a: 0 },\n                        r: { k: 0, a: 0 },\n                        o: { k: 100, a: 0 },\n                      }\n                      if (!animationData.chars[i].t) {\n                        charData.data.shapes.push({\n                          ty: 'no',\n                        })\n                        charData.data.shapes[0].it.push({\n                          p: { k: [0, 0], a: 0 },\n                          s: { k: [100, 100], a: 0 },\n                          a: { k: [0, 0], a: 0 },\n                          r: { k: 0, a: 0 },\n                          o: { k: 100, a: 0 },\n                          sk: { k: 0, a: 0 },\n                          sa: { k: 0, a: 0 },\n                          ty: 'tr',\n                        })\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkPathProperties = (function () {\n              var minimumVersion = [5, 7, 15]\n\n              function updateTextLayer(textLayer) {\n                var pathData = textLayer.t.p\n                if (typeof pathData.a === 'number') {\n                  pathData.a = {\n                    a: 0,\n                    k: pathData.a,\n                  }\n                }\n                if (typeof pathData.p === 'number') {\n                  pathData.p = {\n                    a: 0,\n                    k: pathData.p,\n                  }\n                }\n                if (typeof pathData.r === 'number') {\n                  pathData.r = {\n                    a: 0,\n                    k: pathData.r,\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i\n                var len = layers.length\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i])\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkColors = (function () {\n              var minimumVersion = [4, 1, 9]\n\n              function iterateShapes(shapes) {\n                var i\n                var len = shapes.length\n                var j\n                var jLen\n                for (i = 0; i < len; i += 1) {\n                  if (shapes[i].ty === 'gr') {\n                    iterateShapes(shapes[i].it)\n                  } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\n                    if (shapes[i].c.k && shapes[i].c.k[0].i) {\n                      jLen = shapes[i].c.k.length\n                      for (j = 0; j < jLen; j += 1) {\n                        if (shapes[i].c.k[j].s) {\n                          shapes[i].c.k[j].s[0] /= 255\n                          shapes[i].c.k[j].s[1] /= 255\n                          shapes[i].c.k[j].s[2] /= 255\n                          shapes[i].c.k[j].s[3] /= 255\n                        }\n                        if (shapes[i].c.k[j].e) {\n                          shapes[i].c.k[j].e[0] /= 255\n                          shapes[i].c.k[j].e[1] /= 255\n                          shapes[i].c.k[j].e[2] /= 255\n                          shapes[i].c.k[j].e[3] /= 255\n                        }\n                      }\n                    } else {\n                      shapes[i].c.k[0] /= 255\n                      shapes[i].c.k[1] /= 255\n                      shapes[i].c.k[2] /= 255\n                      shapes[i].c.k[3] /= 255\n                    }\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i\n                var len = layers.length\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 4) {\n                    iterateShapes(layers[i].shapes)\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkShapes = (function () {\n              var minimumVersion = [4, 4, 18]\n\n              function completeClosingShapes(arr) {\n                var i\n                var len = arr.length\n                var j\n                var jLen\n                for (i = len - 1; i >= 0; i -= 1) {\n                  if (arr[i].ty === 'sh') {\n                    if (arr[i].ks.k.i) {\n                      arr[i].ks.k.c = arr[i].closed\n                    } else {\n                      jLen = arr[i].ks.k.length\n                      for (j = 0; j < jLen; j += 1) {\n                        if (arr[i].ks.k[j].s) {\n                          arr[i].ks.k[j].s[0].c = arr[i].closed\n                        }\n                        if (arr[i].ks.k[j].e) {\n                          arr[i].ks.k[j].e[0].c = arr[i].closed\n                        }\n                      }\n                    }\n                  } else if (arr[i].ty === 'gr') {\n                    completeClosingShapes(arr[i].it)\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var layerData\n                var i\n                var len = layers.length\n                var j\n                var jLen\n                var k\n                var kLen\n                for (i = 0; i < len; i += 1) {\n                  layerData = layers[i]\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties\n                    jLen = maskProps.length\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        maskProps[j].pt.k.c = maskProps[j].cl\n                      } else {\n                        kLen = maskProps[j].pt.k.length\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            maskProps[j].pt.k[k].s[0].c = maskProps[j].cl\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            maskProps[j].pt.k[k].e[0].c = maskProps[j].cl\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 4) {\n                    completeClosingShapes(layerData.shapes)\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            function completeData(animationData) {\n              if (animationData.__complete) {\n                return\n              }\n              checkColors(animationData)\n              checkText(animationData)\n              checkChars(animationData)\n              checkPathProperties(animationData)\n              checkShapes(animationData)\n              completeLayers(animationData.layers, animationData.assets)\n              completeChars(animationData.chars, animationData.assets)\n              animationData.__complete = true\n            }\n\n            function completeText(data) {\n              if (data.t.a.length === 0 && !('m' in data.t.p)) {\n                // data.singleShape = true;\n              }\n            }\n\n            var moduleOb = {}\n            moduleOb.completeData = completeData\n            moduleOb.checkColors = checkColors\n            moduleOb.checkChars = checkChars\n            moduleOb.checkPathProperties = checkPathProperties\n            moduleOb.checkShapes = checkShapes\n            moduleOb.completeLayers = completeLayers\n\n            return moduleOb\n          }\n          if (!_workerSelf.dataManager) {\n            _workerSelf.dataManager = dataFunctionManager()\n          }\n\n          if (!_workerSelf.assetLoader) {\n            _workerSelf.assetLoader = (function () {\n              function formatResponse(xhr) {\n                // using typeof doubles the time of execution of this method,\n                // so if available, it's better to use the header to validate the type\n                var contentTypeHeader = xhr.getResponseHeader('content-type')\n                if (contentTypeHeader && xhr.responseType === 'json' && contentTypeHeader.indexOf('json') !== -1) {\n                  return xhr.response\n                }\n                if (xhr.response && typeof xhr.response === 'object') {\n                  return xhr.response\n                }\n                if (xhr.response && typeof xhr.response === 'string') {\n                  return JSON.parse(xhr.response)\n                }\n                if (xhr.responseText) {\n                  return JSON.parse(xhr.responseText)\n                }\n                return null\n              }\n\n              function loadAsset(path, fullPath, callback, errorCallback) {\n                var response\n                var xhr = new XMLHttpRequest()\n                // set responseType after calling open or IE will break.\n                try {\n                  // This crashes on Android WebView prior to KitKat\n                  xhr.responseType = 'json'\n                } catch (err) {} // eslint-disable-line no-empty\n                xhr.onreadystatechange = function () {\n                  if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                      response = formatResponse(xhr)\n                      callback(response)\n                    } else {\n                      try {\n                        response = formatResponse(xhr)\n                        callback(response)\n                      } catch (err) {\n                        if (errorCallback) {\n                          errorCallback(err)\n                        }\n                      }\n                    }\n                  }\n                }\n                try {\n                  xhr.open('GET', path, true)\n                } catch (error) {\n                  xhr.open('GET', fullPath + '/' + path, true)\n                }\n                xhr.send()\n              }\n              return {\n                load: loadAsset,\n              }\n            })()\n          }\n\n          if (e.data.type === 'loadAnimation') {\n            _workerSelf.assetLoader.load(\n              e.data.path,\n              e.data.fullPath,\n              function (data) {\n                _workerSelf.dataManager.completeData(data)\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  payload: data,\n                  status: 'success',\n                })\n              },\n              function () {\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  status: 'error',\n                })\n              },\n            )\n          } else if (e.data.type === 'complete') {\n            var animation = e.data.animation\n            _workerSelf.dataManager.completeData(animation)\n            _workerSelf.postMessage({\n              id: e.data.id,\n              payload: animation,\n              status: 'success',\n            })\n          } else if (e.data.type === 'loadData') {\n            _workerSelf.assetLoader.load(\n              e.data.path,\n              e.data.fullPath,\n              function (data) {\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  payload: data,\n                  status: 'success',\n                })\n              },\n              function () {\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  status: 'error',\n                })\n              },\n            )\n          }\n        })\n\n        workerInstance.onmessage = function (event) {\n          var data = event.data\n          var id = data.id\n          var process = processes[id]\n          processes[id] = null\n          if (data.status === 'success') {\n            process.onComplete(data.payload)\n          } else if (process.onError) {\n            process.onError()\n          }\n        }\n      }\n    }\n\n    function createProcess(onComplete, onError) {\n      _counterId += 1\n      var id = 'processId_' + _counterId\n      processes[id] = {\n        onComplete: onComplete,\n        onError: onError,\n      }\n      return id\n    }\n\n    function loadAnimation(path, onComplete, onError) {\n      setupWorker()\n      var processId = createProcess(onComplete, onError)\n      workerInstance.postMessage({\n        type: 'loadAnimation',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId,\n      })\n    }\n\n    function loadData(path, onComplete, onError) {\n      setupWorker()\n      var processId = createProcess(onComplete, onError)\n      workerInstance.postMessage({\n        type: 'loadData',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId,\n      })\n    }\n\n    function completeAnimation(anim, onComplete, onError) {\n      setupWorker()\n      var processId = createProcess(onComplete, onError)\n      workerInstance.postMessage({\n        type: 'complete',\n        animation: anim,\n        id: processId,\n      })\n    }\n\n    return {\n      loadAnimation: loadAnimation,\n      loadData: loadData,\n      completeAnimation: completeAnimation,\n    }\n  })()\n\n  const ImagePreloader = (function () {\n    var proxyImage = (function () {\n      var canvas = createTag('canvas')\n      canvas.width = 1\n      canvas.height = 1\n      var ctx = canvas.getContext('2d')\n      ctx.fillStyle = 'rgba(0,0,0,0)'\n      ctx.fillRect(0, 0, 1, 1)\n      return canvas\n    })()\n\n    function imageLoaded() {\n      this.loadedAssets += 1\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null)\n        }\n      }\n    }\n    function footageLoaded() {\n      this.loadedFootagesCount += 1\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null)\n        }\n      }\n    }\n\n    function getAssetsPath(assetData, assetsPath, originalPath) {\n      var path = ''\n      if (assetData.e) {\n        path = assetData.p\n      } else if (assetsPath) {\n        var imagePath = assetData.p\n        if (imagePath.indexOf('images/') !== -1) {\n          imagePath = imagePath.split('/')[1]\n        }\n        path = assetsPath + imagePath\n      } else {\n        path = originalPath\n        path += assetData.u ? assetData.u : ''\n        path += assetData.p\n      }\n      return path\n    }\n\n    function testImageLoaded(img) {\n      var _count = 0\n      var intervalId = setInterval(\n        function () {\n          var box = img.getBBox()\n          if (box.width || _count > 500) {\n            this._imageLoaded()\n            clearInterval(intervalId)\n          }\n          _count += 1\n        }.bind(this),\n        50,\n      )\n    }\n\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path)\n      var img = createNS('image')\n      if (isSafari) {\n        this.testImageLoaded(img)\n      } else {\n        img.addEventListener('load', this._imageLoaded, false)\n      }\n      img.addEventListener(\n        'error',\n        function () {\n          ob.img = proxyImage\n          this._imageLoaded()\n        }.bind(this),\n        false,\n      )\n      img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path)\n      if (this._elementHelper.append) {\n        this._elementHelper.append(img)\n      } else {\n        this._elementHelper.appendChild(img)\n      }\n      var ob = {\n        img: img,\n        assetData: assetData,\n      }\n      return ob\n    }\n\n    function createImgData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path)\n      var img = createTag('img')\n      img.crossOrigin = 'anonymous'\n      img.addEventListener('load', this._imageLoaded, false)\n      img.addEventListener(\n        'error',\n        function () {\n          ob.img = proxyImage\n          this._imageLoaded()\n        }.bind(this),\n        false,\n      )\n      img.src = path\n      var ob = {\n        img: img,\n        assetData: assetData,\n      }\n      return ob\n    }\n\n    function createFootageData(data) {\n      var ob = {\n        assetData: data,\n      }\n      var path = getAssetsPath(data, this.assetsPath, this.path)\n      dataManager.loadData(\n        path,\n        function (footageData) {\n          ob.img = footageData\n          this._footageLoaded()\n        }.bind(this),\n        function () {\n          ob.img = {}\n          this._footageLoaded()\n        }.bind(this),\n      )\n      return ob\n    }\n\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb\n      var i\n      var len = assets.length\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          if (!assets[i].t || assets[i].t === 'seq') {\n            this.totalImages += 1\n            this.images.push(this._createImageData(assets[i]))\n          } else if (assets[i].t === 3) {\n            this.totalFootages += 1\n            this.images.push(this.createFootageData(assets[i]))\n          }\n        }\n      }\n    }\n\n    function setPath(path) {\n      this.path = path || ''\n    }\n\n    function setAssetsPath(path) {\n      this.assetsPath = path || ''\n    }\n\n    function getAsset(assetData) {\n      var i = 0\n      var len = this.images.length\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img\n        }\n        i += 1\n      }\n      return null\n    }\n\n    function destroy() {\n      this.imagesLoadedCb = null\n      this.images.length = 0\n    }\n\n    function loadedImages() {\n      return this.totalImages === this.loadedAssets\n    }\n\n    function loadedFootages() {\n      return this.totalFootages === this.loadedFootagesCount\n    }\n\n    function setCacheType(type, elementHelper) {\n      if (type === 'svg') {\n        this._elementHelper = elementHelper\n        this._createImageData = this.createImageData.bind(this)\n      } else {\n        this._createImageData = this.createImgData.bind(this)\n      }\n    }\n\n    function ImagePreloaderFactory() {\n      this._imageLoaded = imageLoaded.bind(this)\n      this._footageLoaded = footageLoaded.bind(this)\n      this.testImageLoaded = testImageLoaded.bind(this)\n      this.createFootageData = createFootageData.bind(this)\n      this.assetsPath = ''\n      this.path = ''\n      this.totalImages = 0\n      this.totalFootages = 0\n      this.loadedAssets = 0\n      this.loadedFootagesCount = 0\n      this.imagesLoadedCb = null\n      this.images = []\n    }\n\n    ImagePreloaderFactory.prototype = {\n      loadAssets: loadAssets,\n      setAssetsPath: setAssetsPath,\n      setPath: setPath,\n      loadedImages: loadedImages,\n      loadedFootages: loadedFootages,\n      destroy: destroy,\n      getAsset: getAsset,\n      createImgData: createImgData,\n      createImageData: createImageData,\n      imageLoaded: imageLoaded,\n      footageLoaded: footageLoaded,\n      setCacheType: setCacheType,\n    }\n\n    return ImagePreloaderFactory\n  })()\n\n  function BaseEvent() {}\n  BaseEvent.prototype = {\n    triggerEvent: function (eventName, args) {\n      if (this._cbs[eventName]) {\n        var callbacks = this._cbs[eventName]\n        for (var i = 0; i < callbacks.length; i += 1) {\n          callbacks[i](args)\n        }\n      }\n    },\n    addEventListener: function (eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = []\n      }\n      this._cbs[eventName].push(callback)\n\n      return function () {\n        this.removeEventListener(eventName, callback)\n      }.bind(this)\n    },\n    removeEventListener: function (eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null\n      } else if (this._cbs[eventName]) {\n        var i = 0\n        var len = this._cbs[eventName].length\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1)\n            i -= 1\n            len -= 1\n          }\n          i += 1\n        }\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null\n        }\n      }\n    },\n  }\n\n  const markerParser = (function () {\n    function parsePayloadLines(payload) {\n      var lines = payload.split('\\r\\n')\n      var keys = {}\n      var line\n      var keysCount = 0\n      for (var i = 0; i < lines.length; i += 1) {\n        line = lines[i].split(':')\n        if (line.length === 2) {\n          keys[line[0]] = line[1].trim()\n          keysCount += 1\n        }\n      }\n      if (keysCount === 0) {\n        throw new Error()\n      }\n      return keys\n    }\n\n    return function (_markers) {\n      var markers = []\n      for (var i = 0; i < _markers.length; i += 1) {\n        var _marker = _markers[i]\n        var markerData = {\n          time: _marker.tm,\n          duration: _marker.dr,\n        }\n        try {\n          markerData.payload = JSON.parse(_markers[i].cm)\n        } catch (_) {\n          try {\n            markerData.payload = parsePayloadLines(_markers[i].cm)\n          } catch (__) {\n            markerData.payload = {\n              name: _markers[i].cm,\n            }\n          }\n        }\n        markers.push(markerData)\n      }\n      return markers\n    }\n  })()\n\n  const ProjectInterface = (function () {\n    function registerComposition(comp) {\n      this.compositions.push(comp)\n    }\n\n    return function () {\n      function _thisProjectFunction(name) {\n        var i = 0\n        var len = this.compositions.length\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame)\n            }\n            return this.compositions[i].compInterface\n          }\n          i += 1\n        }\n        return null\n      }\n\n      _thisProjectFunction.compositions = []\n      _thisProjectFunction.currentFrame = 0\n\n      _thisProjectFunction.registerComposition = registerComposition\n\n      return _thisProjectFunction\n    }\n  })()\n\n  const renderers = {}\n\n  const registerRenderer = (key, value) => {\n    renderers[key] = value\n  }\n\n  function getRenderer(key) {\n    return renderers[key]\n  }\n\n  const AnimationItem = function () {\n    this._cbs = []\n    this.name = ''\n    this.path = ''\n    this.isLoaded = false\n    this.currentFrame = 0\n    this.currentRawFrame = 0\n    this.firstFrame = 0\n    this.totalFrames = 0\n    this.frameRate = 0\n    this.frameMult = 0\n    this.playSpeed = 1\n    this.playDirection = 1\n    this.playCount = 0\n    this.animationData = {}\n    this.assets = []\n    this.isPaused = true\n    this.autoplay = false\n    this.loop = true\n    this.renderer = null\n    this.animationID = createElementID()\n    this.assetsPath = ''\n    this.timeCompleted = 0\n    this.segmentPos = 0\n    this.isSubframeEnabled = getSubframeEnabled()\n    this.segments = []\n    this._idle = true\n    this._completedLoop = false\n    this.projectInterface = ProjectInterface()\n    this.imagePreloader = new ImagePreloader()\n    this.audioController = audioControllerFactory()\n    this.markers = []\n    this.configAnimation = this.configAnimation.bind(this)\n    this.onSetupError = this.onSetupError.bind(this)\n    this.onSegmentComplete = this.onSegmentComplete.bind(this)\n    this.drawnFrameEvent = new BMEnterFrameEvent('drawnFrame', 0, 0, 0)\n  }\n\n  extendPrototype([BaseEvent], AnimationItem)\n\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container\n    }\n    var animType = 'svg'\n    if (params.animType) {\n      animType = params.animType\n    } else if (params.renderer) {\n      animType = params.renderer\n    }\n    const RendererClass = getRenderer(animType)\n    this.renderer = new RendererClass(this, params.rendererSettings)\n    this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs)\n    this.renderer.setProjectInterface(this.projectInterface)\n    this.animType = animType\n    if (params.loop === '' || params.loop === null || params.loop === undefined || params.loop === true) {\n      this.loop = true\n    } else if (params.loop === false) {\n      this.loop = false\n    } else {\n      this.loop = parseInt(params.loop, 10)\n    }\n    this.autoplay = 'autoplay' in params ? params.autoplay : true\n    this.name = params.name ? params.name : ''\n    this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, 'autoloadSegments')\n      ? params.autoloadSegments\n      : true\n    this.assetsPath = params.assetsPath\n    this.initialSegment = params.initialSegment\n    if (params.audioFactory) {\n      this.audioController.setAudioFactory(params.audioFactory)\n    }\n    if (params.animationData) {\n      this.setupAnimation(params.animationData)\n    } else if (params.path) {\n      if (params.path.lastIndexOf('\\\\') !== -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1)\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1)\n      }\n      this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1)\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'))\n      dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError)\n    }\n  }\n\n  AnimationItem.prototype.onSetupError = function () {\n    this.trigger('data_failed')\n  }\n\n  AnimationItem.prototype.setupAnimation = function (data) {\n    dataManager.completeAnimation(data, this.configAnimation)\n  }\n\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    if (animationData) {\n      if (typeof animationData !== 'object') {\n        animationData = JSON.parse(animationData)\n      }\n    }\n    var params = {\n      wrapper: wrapper,\n      animationData: animationData,\n    }\n    var wrapperAttributes = wrapper.attributes\n\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-animation-path').value\n      : wrapperAttributes.getNamedItem('data-bm-path') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-path').value\n      : wrapperAttributes.getNamedItem('bm-path')\n      ? wrapperAttributes.getNamedItem('bm-path').value\n      : ''\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-type').value\n      : wrapperAttributes.getNamedItem('data-bm-type') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-type').value\n      : wrapperAttributes.getNamedItem('bm-type') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('bm-type').value\n      : wrapperAttributes.getNamedItem('data-bm-renderer') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-renderer').value\n      : wrapperAttributes.getNamedItem('bm-renderer')\n      ? wrapperAttributes.getNamedItem('bm-renderer').value\n      : 'canvas'\n\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-loop').value\n      : wrapperAttributes.getNamedItem('data-bm-loop') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-loop').value\n      : wrapperAttributes.getNamedItem('bm-loop')\n      ? wrapperAttributes.getNamedItem('bm-loop').value\n      : ''\n    if (loop === 'false') {\n      params.loop = false\n    } else if (loop === 'true') {\n      params.loop = true\n    } else if (loop !== '') {\n      params.loop = parseInt(loop, 10)\n    }\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-autoplay').value\n      : wrapperAttributes.getNamedItem('data-bm-autoplay') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-autoplay').value\n      : wrapperAttributes.getNamedItem('bm-autoplay')\n      ? wrapperAttributes.getNamedItem('bm-autoplay').value\n      : true\n    params.autoplay = autoplay !== 'false'\n\n    params.name = wrapperAttributes.getNamedItem('data-name') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-name').value\n      : wrapperAttributes.getNamedItem('data-bm-name') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-name').value\n      : wrapperAttributes.getNamedItem('bm-name')\n      ? wrapperAttributes.getNamedItem('bm-name').value\n      : ''\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-prerender').value\n      : wrapperAttributes.getNamedItem('data-bm-prerender') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-prerender').value\n      : wrapperAttributes.getNamedItem('bm-prerender')\n      ? wrapperAttributes.getNamedItem('bm-prerender').value\n      : ''\n\n    if (prerender === 'false') {\n      params.prerender = false\n    }\n    this.setParams(params)\n  }\n\n  AnimationItem.prototype.includeLayers = function (data) {\n    if (data.op > this.animationData.op) {\n      this.animationData.op = data.op\n      this.totalFrames = Math.floor(data.op - this.animationData.ip)\n    }\n    var layers = this.animationData.layers\n    var i\n    var len = layers.length\n    var newLayers = data.layers\n    var j\n    var jLen = newLayers.length\n    for (j = 0; j < jLen; j += 1) {\n      i = 0\n      while (i < len) {\n        if (layers[i].id === newLayers[j].id) {\n          layers[i] = newLayers[j]\n          break\n        }\n        i += 1\n      }\n    }\n    if (data.chars || data.fonts) {\n      this.renderer.globalData.fontManager.addChars(data.chars)\n      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs)\n    }\n    if (data.assets) {\n      len = data.assets.length\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data.assets[i])\n      }\n    }\n    this.animationData.__complete = false\n    dataManager.completeAnimation(this.animationData, this.onSegmentComplete)\n  }\n\n  AnimationItem.prototype.onSegmentComplete = function (data) {\n    this.animationData = data\n    var expressionsPlugin = getExpressionsPlugin()\n    if (expressionsPlugin) {\n      expressionsPlugin.initExpressions(this)\n    }\n    this.loadNextSegment()\n  }\n\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger('data_ready')\n      this.timeCompleted = this.totalFrames\n      return\n    }\n    var segment = segments.shift()\n    this.timeCompleted = segment.time * this.frameRate\n    var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json'\n    this.segmentPos += 1\n    dataManager.loadData(\n      segmentPath,\n      this.includeLayers.bind(this),\n      function () {\n        this.trigger('data_failed')\n      }.bind(this),\n    )\n  }\n\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments\n    if (!segments) {\n      this.timeCompleted = this.totalFrames\n    }\n    this.loadNextSegment()\n  }\n\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger('loaded_images')\n    this.checkLoaded()\n  }\n\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath)\n    this.imagePreloader.setPath(this.path)\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this))\n  }\n\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return\n    }\n    try {\n      this.animationData = animData\n      if (this.initialSegment) {\n        this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0])\n        this.firstFrame = Math.round(this.initialSegment[0])\n      } else {\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip)\n        this.firstFrame = Math.round(this.animationData.ip)\n      }\n      this.renderer.configAnimation(animData)\n      if (!animData.assets) {\n        animData.assets = []\n      }\n\n      this.assets = this.animationData.assets\n      this.frameRate = this.animationData.fr\n      this.frameMult = this.animationData.fr / 1000\n      this.renderer.searchExtraCompositions(animData.assets)\n      this.markers = markerParser(animData.markers || [])\n      this.trigger('config_ready')\n      this.preloadImages()\n      this.loadSegments()\n      this.updaFrameModifier()\n      this.waitForFontsLoaded()\n      if (this.isPaused) {\n        this.audioController.pause()\n      }\n    } catch (error) {\n      this.triggerConfigError(error)\n    }\n  }\n\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return\n    }\n    if (this.renderer.globalData.fontManager.isLoaded) {\n      this.checkLoaded()\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20)\n    }\n  }\n\n  AnimationItem.prototype.checkLoaded = function () {\n    if (\n      !this.isLoaded &&\n      this.renderer.globalData.fontManager.isLoaded &&\n      (this.imagePreloader.loadedImages() || this.renderer.rendererType !== 'canvas') &&\n      this.imagePreloader.loadedFootages()\n    ) {\n      this.isLoaded = true\n      var expressionsPlugin = getExpressionsPlugin()\n      if (expressionsPlugin) {\n        expressionsPlugin.initExpressions(this)\n      }\n      this.renderer.initItems()\n      setTimeout(\n        function () {\n          this.trigger('DOMLoaded')\n        }.bind(this),\n        0,\n      )\n      this.gotoFrame()\n      if (this.autoplay) {\n        this.play()\n      }\n    }\n  }\n\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize()\n  }\n\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.isSubframeEnabled = !!flag\n  }\n\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame // eslint-disable-line no-bitwise\n\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted\n    }\n    this.trigger('enterFrame')\n    this.renderFrame()\n    this.trigger('drawnFrame')\n  }\n\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false || !this.renderer) {\n      return\n    }\n    try {\n      this.renderer.renderFrame(this.currentFrame + this.firstFrame)\n    } catch (error) {\n      this.triggerRenderFrameError(error)\n    }\n  }\n\n  AnimationItem.prototype.play = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    if (this.isPaused === true) {\n      this.isPaused = false\n      this.trigger('_pause')\n      this.audioController.resume()\n      if (this._idle) {\n        this._idle = false\n        this.trigger('_active')\n      }\n    }\n  }\n\n  AnimationItem.prototype.pause = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    if (this.isPaused === false) {\n      this.isPaused = true\n      this.trigger('_play')\n      this._idle = true\n      this.trigger('_idle')\n      this.audioController.pause()\n    }\n  }\n\n  AnimationItem.prototype.togglePause = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    if (this.isPaused === true) {\n      this.play()\n    } else {\n      this.pause()\n    }\n  }\n\n  AnimationItem.prototype.stop = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.pause()\n    this.playCount = 0\n    this._completedLoop = false\n    this.setCurrentRawFrameValue(0)\n  }\n\n  AnimationItem.prototype.getMarkerData = function (markerName) {\n    var marker\n    for (var i = 0; i < this.markers.length; i += 1) {\n      marker = this.markers[i]\n      if (marker.payload && marker.payload.name === markerName) {\n        return marker\n      }\n    }\n    return null\n  }\n\n  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return\n    }\n    var numValue = Number(value)\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value)\n      if (marker) {\n        this.goToAndStop(marker.time, true)\n      }\n    } else if (isFrame) {\n      this.setCurrentRawFrameValue(value)\n    } else {\n      this.setCurrentRawFrameValue(value * this.frameModifier)\n    }\n    this.pause()\n  }\n\n  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return\n    }\n    var numValue = Number(value)\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value)\n      if (marker) {\n        if (!marker.duration) {\n          this.goToAndStop(marker.time, true)\n        } else {\n          this.playSegments([marker.time, marker.time + marker.duration], true)\n        }\n      }\n    } else {\n      this.goToAndStop(numValue, isFrame, name)\n    }\n    this.play()\n  }\n\n  AnimationItem.prototype.advanceTime = function (value) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return\n    }\n    var nextValue = this.currentRawFrame + value * this.frameModifier\n    var _isComplete = false\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true\n          nextValue = this.totalFrames - 1\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames)\n          this._completedLoop = true\n          this.trigger('loopComplete')\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue)\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          // eslint-disable-line no-plusplus\n          this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames))\n          if (!this._completedLoop) {\n            this._completedLoop = true\n          } else {\n            this.trigger('loopComplete')\n          }\n        } else {\n          _isComplete = true\n          nextValue = 0\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue)\n    }\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue)\n      this.pause()\n      this.trigger('complete')\n    }\n  }\n\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed)\n        } else {\n          this.setDirection(-1)\n        }\n      }\n      this.totalFrames = arr[0] - arr[1]\n      this.timeCompleted = this.totalFrames\n      this.firstFrame = arr[1]\n      this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset)\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed)\n        } else {\n          this.setDirection(1)\n        }\n      }\n      this.totalFrames = arr[1] - arr[0]\n      this.timeCompleted = this.totalFrames\n      this.firstFrame = arr[0]\n      this.setCurrentRawFrameValue(0.001 + offset)\n    }\n    this.trigger('segmentStart')\n  }\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init\n      }\n    }\n\n    this.firstFrame = init\n    this.totalFrames = end - init\n    this.timeCompleted = this.totalFrames\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true)\n    }\n  }\n\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0\n    }\n    if (typeof arr[0] === 'object') {\n      var i\n      var len = arr.length\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i])\n      }\n    } else {\n      this.segments.push(arr)\n    }\n    if (this.segments.length && forceFlag) {\n      this.adjustSegment(this.segments.shift(), 0)\n    }\n    if (this.isPaused) {\n      this.play()\n    }\n  }\n\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0\n    this.segments.push([this.animationData.ip, this.animationData.op])\n    if (forceFlag) {\n      this.checkSegments(0)\n    }\n  }\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset)\n      return true\n    }\n    return false\n  }\n\n  AnimationItem.prototype.destroy = function (name) {\n    if ((name && this.name !== name) || !this.renderer) {\n      return\n    }\n    this.renderer.destroy()\n    this.imagePreloader.destroy()\n    this.trigger('destroy')\n    this._cbs = null\n    this.onEnterFrame = null\n    this.onLoopComplete = null\n    this.onComplete = null\n    this.onSegmentStart = null\n    this.onDestroy = null\n    this.renderer = null\n    this.renderer = null\n    this.imagePreloader = null\n    this.projectInterface = null\n  }\n\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {\n    this.currentRawFrame = value\n    this.gotoFrame()\n  }\n\n  AnimationItem.prototype.setSpeed = function (val) {\n    this.playSpeed = val\n    this.updaFrameModifier()\n  }\n\n  AnimationItem.prototype.setDirection = function (val) {\n    this.playDirection = val < 0 ? -1 : 1\n    this.updaFrameModifier()\n  }\n\n  AnimationItem.prototype.setVolume = function (val, name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.audioController.setVolume(val)\n  }\n\n  AnimationItem.prototype.getVolume = function () {\n    return this.audioController.getVolume()\n  }\n\n  AnimationItem.prototype.mute = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.audioController.mute()\n  }\n\n  AnimationItem.prototype.unmute = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.audioController.unmute()\n  }\n\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection\n    this.audioController.setRate(this.playSpeed * this.playDirection)\n  }\n\n  AnimationItem.prototype.getPath = function () {\n    return this.path\n  }\n\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = ''\n    if (assetData.e) {\n      path = assetData.p\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p\n      if (imagePath.indexOf('images/') !== -1) {\n        imagePath = imagePath.split('/')[1]\n      }\n      path = this.assetsPath + imagePath\n    } else {\n      path = this.path\n      path += assetData.u ? assetData.u : ''\n      path += assetData.p\n    }\n    return path\n  }\n\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0\n    var len = this.assets.length\n    while (i < len) {\n      if (id === this.assets[i].id) {\n        return this.assets[i]\n      }\n      i += 1\n    }\n    return null\n  }\n\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide()\n  }\n\n  AnimationItem.prototype.show = function () {\n    this.renderer.show()\n  }\n\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate\n  }\n\n  AnimationItem.prototype.updateDocumentData = function (path, documentData, index) {\n    try {\n      var element = this.renderer.getElementByPath(path)\n      element.updateDocumentData(documentData, index)\n    } catch (error) {\n      // TODO: decide how to handle catch case\n    }\n  }\n\n  AnimationItem.prototype.trigger = function (name) {\n    if (this._cbs && this._cbs[name]) {\n      switch (name) {\n        case 'enterFrame':\n          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier))\n          break\n        case 'drawnFrame':\n          this.drawnFrameEvent.currentTime = this.currentFrame\n          this.drawnFrameEvent.totalTime = this.totalFrames\n          this.drawnFrameEvent.direction = this.frameModifier\n          this.triggerEvent(name, this.drawnFrameEvent)\n          break\n        case 'loopComplete':\n          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult))\n          break\n        case 'complete':\n          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult))\n          break\n        case 'segmentStart':\n          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames))\n          break\n        case 'destroy':\n          this.triggerEvent(name, new BMDestroyEvent(name, this))\n          break\n        default:\n          this.triggerEvent(name)\n      }\n    }\n    if (name === 'enterFrame' && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult))\n    }\n    if (name === 'loopComplete' && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult))\n    }\n    if (name === 'complete' && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult))\n    }\n    if (name === 'segmentStart' && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames))\n    }\n    if (name === 'destroy' && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name, this))\n    }\n  }\n\n  AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame)\n    this.triggerEvent('error', error)\n\n    if (this.onError) {\n      this.onError.call(this, error)\n    }\n  }\n\n  AnimationItem.prototype.triggerConfigError = function (nativeError) {\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame)\n    this.triggerEvent('error', error)\n\n    if (this.onError) {\n      this.onError.call(this, error)\n    }\n  }\n\n  const animationManager = (function () {\n    var moduleOb = {}\n    var registeredAnimations = []\n    var initTime = 0\n    var len = 0\n    var playingAnimationsNum = 0\n    var _stopped = true\n    var _isFrozen = false\n\n    function removeElement(ev) {\n      var i = 0\n      var animItem = ev.target\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1)\n          i -= 1\n          len -= 1\n          if (!animItem.isPaused) {\n            subtractPlayingCount()\n          }\n        }\n        i += 1\n      }\n    }\n\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null\n      }\n      var i = 0\n      while (i < len) {\n        if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation\n        }\n        i += 1\n      }\n      var animItem = new AnimationItem()\n      setupAnimation(animItem, element)\n      animItem.setData(element, animationData)\n      return animItem\n    }\n\n    function getRegisteredAnimations() {\n      var i\n      var lenAnims = registeredAnimations.length\n      var animations = []\n      for (i = 0; i < lenAnims; i += 1) {\n        animations.push(registeredAnimations[i].animation)\n      }\n      return animations\n    }\n\n    function addPlayingCount() {\n      playingAnimationsNum += 1\n      activate()\n    }\n\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1\n    }\n\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener('destroy', removeElement)\n      animItem.addEventListener('_active', addPlayingCount)\n      animItem.addEventListener('_idle', subtractPlayingCount)\n      registeredAnimations.push({ elem: element, animation: animItem })\n      len += 1\n    }\n\n    function loadAnimation(params) {\n      var animItem = new AnimationItem()\n      setupAnimation(animItem, null)\n      animItem.setParams(params)\n      return animItem\n    }\n\n    function setSpeed(val, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val, animation)\n      }\n    }\n\n    function setDirection(val, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val, animation)\n      }\n    }\n\n    function play(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation)\n      }\n    }\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime)\n      }\n      initTime = nowTime\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume)\n      } else {\n        _stopped = true\n      }\n    }\n\n    function first(nowTime) {\n      initTime = nowTime\n      window.requestAnimationFrame(resume)\n    }\n\n    function pause(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation)\n      }\n    }\n\n    function goToAndStop(value, isFrame, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation)\n      }\n    }\n\n    function stop(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation)\n      }\n    }\n\n    function togglePause(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation)\n      }\n    }\n\n    function destroy(animation) {\n      var i\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation)\n      }\n    }\n\n    function searchAnimations(animationData, standalone, renderer) {\n      var animElements = [].concat(\n        [].slice.call(document.getElementsByClassName('lottie')),\n        [].slice.call(document.getElementsByClassName('bodymovin')),\n      )\n      var i\n      var lenAnims = animElements.length\n      for (i = 0; i < lenAnims; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute('data-bm-type', renderer)\n        }\n        registerAnimation(animElements[i], animationData)\n      }\n      if (standalone && lenAnims === 0) {\n        if (!renderer) {\n          renderer = 'svg'\n        }\n        var body = document.getElementsByTagName('body')[0]\n        body.innerText = ''\n        var div = createTag('div')\n        div.style.width = '100%'\n        div.style.height = '100%'\n        div.setAttribute('data-bm-type', renderer)\n        body.appendChild(div)\n        registerAnimation(div, animationData)\n      }\n    }\n\n    function resize() {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize()\n      }\n    }\n\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first)\n          _stopped = false\n        }\n      }\n    }\n\n    function freeze() {\n      _isFrozen = true\n    }\n\n    function unfreeze() {\n      _isFrozen = false\n      activate()\n    }\n\n    function setVolume(val, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setVolume(val, animation)\n      }\n    }\n\n    function mute(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.mute(animation)\n      }\n    }\n\n    function unmute(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.unmute(animation)\n      }\n    }\n\n    moduleOb.registerAnimation = registerAnimation\n    moduleOb.loadAnimation = loadAnimation\n    moduleOb.setSpeed = setSpeed\n    moduleOb.setDirection = setDirection\n    moduleOb.play = play\n    moduleOb.pause = pause\n    moduleOb.stop = stop\n    moduleOb.togglePause = togglePause\n    moduleOb.searchAnimations = searchAnimations\n    moduleOb.resize = resize\n    // moduleOb.start = start;\n    moduleOb.goToAndStop = goToAndStop\n    moduleOb.destroy = destroy\n    moduleOb.freeze = freeze\n    moduleOb.unfreeze = unfreeze\n    moduleOb.setVolume = setVolume\n    moduleOb.mute = mute\n    moduleOb.unmute = unmute\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations\n    return moduleOb\n  })()\n\n  /* eslint-disable */\n  const BezierFactory = (function () {\n    /**\n     * BezierEasing - use bezier curve for transition easing function\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n     *\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\n     * Usage:\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\n     *\n     */\n\n    var ob = {}\n    ob.getBezierEasing = getBezierEasing\n    var beziers = {}\n\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p')\n      if (beziers[str]) {\n        return beziers[str]\n      }\n      var bezEasing = new BezierEasing([a, b, c, d])\n      beziers[str] = bezEasing\n      return bezEasing\n    }\n\n    // These values are established by empiricism with tests (tradeoff: performance VS precision)\n    var NEWTON_ITERATIONS = 4\n    var NEWTON_MIN_SLOPE = 0.001\n    var SUBDIVISION_PRECISION = 0.0000001\n    var SUBDIVISION_MAX_ITERATIONS = 10\n\n    var kSplineTableSize = 11\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0)\n\n    var float32ArraySupported = typeof Float32Array === 'function'\n\n    function A(aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1\n    }\n    function B(aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1\n    }\n    function C(aA1) {\n      return 3.0 * aA1\n    }\n\n    // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT\n    }\n\n    // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n    function getSlope(aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1)\n    }\n\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n        currentT,\n        i = 0\n      do {\n        currentT = aA + (aB - aA) / 2.0\n        currentX = calcBezier(currentT, mX1, mX2) - aX\n        if (currentX > 0.0) {\n          aB = currentT\n        } else {\n          aA = currentT\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS)\n      return currentT\n    }\n\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2)\n        if (currentSlope === 0.0) return aGuessT\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX\n        aGuessT -= currentX / currentSlope\n      }\n      return aGuessT\n    }\n\n    /**\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\n     */\n    function BezierEasing(points) {\n      this._p = points\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize)\n      this._precomputed = false\n\n      this.get = this.get.bind(this)\n    }\n\n    BezierEasing.prototype = {\n      get: function (x) {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3]\n        if (!this._precomputed) this._precompute()\n        if (mX1 === mY1 && mX2 === mY2) return x // linear\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n        if (x === 0) return 0\n        if (x === 1) return 1\n        return calcBezier(this._getTForX(x), mY1, mY2)\n      },\n\n      // Private part\n\n      _precompute: function () {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3]\n        this._precomputed = true\n        if (mX1 !== mY1 || mX2 !== mY2) {\n          this._calcSampleValues()\n        }\n      },\n\n      _calcSampleValues: function () {\n        var mX1 = this._p[0],\n          mX2 = this._p[2]\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2)\n        }\n      },\n\n      /**\n       * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\n       */\n      _getTForX: function (aX) {\n        var mX1 = this._p[0],\n          mX2 = this._p[2],\n          mSampleValues = this._mSampleValues\n\n        var intervalStart = 0.0\n        var currentSample = 1\n        var lastSample = kSplineTableSize - 1\n\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize\n        }\n        --currentSample\n\n        // Interpolate to provide an initial guess for t\n        var dist =\n          (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample])\n        var guessForT = intervalStart + dist * kSampleStepSize\n\n        var initialSlope = getSlope(guessForT, mX1, mX2)\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2)\n        }\n        if (initialSlope === 0.0) {\n          return guessForT\n        }\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2)\n      },\n    }\n\n    return ob\n  })()\n\n  const pooling = (function () {\n    function double(arr) {\n      return arr.concat(createSizedArray(arr.length))\n    }\n\n    return {\n      double: double,\n    }\n  })()\n\n  const poolFactory = (function () {\n    return function (initialLength, _create, _release) {\n      var _length = 0\n      var _maxLength = initialLength\n      var pool = createSizedArray(_maxLength)\n\n      var ob = {\n        newElement: newElement,\n        release: release,\n      }\n\n      function newElement() {\n        var element\n        if (_length) {\n          _length -= 1\n          element = pool[_length]\n        } else {\n          element = _create()\n        }\n        return element\n      }\n\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling.double(pool)\n          _maxLength *= 2\n        }\n        if (_release) {\n          _release(element)\n        }\n        pool[_length] = element\n        _length += 1\n      }\n\n      return ob\n    }\n  })()\n\n  const bezierLengthPool = (function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray('float32', getDefaultCurveSegments()),\n        lengths: createTypedArray('float32', getDefaultCurveSegments()),\n      }\n    }\n    return poolFactory(8, create)\n  })()\n\n  const segmentsLengthPool = (function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0,\n      }\n    }\n\n    function release(element) {\n      var i\n      var len = element.lengths.length\n      for (i = 0; i < len; i += 1) {\n        bezierLengthPool.release(element.lengths[i])\n      }\n      element.lengths.length = 0\n    }\n\n    return poolFactory(8, create, release)\n  })()\n\n  function bezFunction() {\n    var math = Math\n\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1\n      return det1 > -0.001 && det1 < 0.001\n    }\n\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3)\n      }\n      var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2))\n      var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2))\n      var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2))\n      var diffDist\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3\n        } else {\n          diffDist = dist3 - dist2 - dist1\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1\n      } else {\n        diffDist = dist2 - dist1 - dist3\n      }\n      return diffDist > -0.0001 && diffDist < 0.0001\n    }\n\n    var getBezierLength = (function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = getDefaultCurveSegments()\n        var k\n        var i\n        var len\n        var ptCoord\n        var perc\n        var addedLength = 0\n        var ptDistance\n        var point = []\n        var lastPoint = []\n        var lengthData = bezierLengthPool.newElement()\n        len = pt3.length\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1)\n          ptDistance = 0\n          for (i = 0; i < len; i += 1) {\n            ptCoord =\n              bmPow(1 - perc, 3) * pt1[i] +\n              3 * bmPow(1 - perc, 2) * perc * pt3[i] +\n              3 * (1 - perc) * bmPow(perc, 2) * pt4[i] +\n              bmPow(perc, 3) * pt2[i]\n            point[i] = ptCoord\n            if (lastPoint[i] !== null) {\n              ptDistance += bmPow(point[i] - lastPoint[i], 2)\n            }\n            lastPoint[i] = point[i]\n          }\n          if (ptDistance) {\n            ptDistance = bmSqrt(ptDistance)\n            addedLength += ptDistance\n          }\n          lengthData.percents[k] = perc\n          lengthData.lengths[k] = addedLength\n        }\n        lengthData.addedLength = addedLength\n        return lengthData\n      }\n    })()\n\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segmentsLengthPool.newElement()\n      var closed = shapeData.c\n      var pathV = shapeData.v\n      var pathO = shapeData.o\n      var pathI = shapeData.i\n      var i\n      var len = shapeData._length\n      var lengths = segmentsLength.lengths\n      var totalLength = 0\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1])\n        totalLength += lengths[i].addedLength\n      }\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0])\n        totalLength += lengths[i].addedLength\n      }\n      segmentsLength.totalLength = totalLength\n      return segmentsLength\n    }\n\n    function BezierData(length) {\n      this.segmentLength = 0\n      this.points = new Array(length)\n    }\n\n    function PointData(partial, point) {\n      this.partialLength = partial\n      this.point = point\n    }\n\n    var buildBezierData = (function () {\n      var storedData = {}\n\n      return function (pt1, pt2, pt3, pt4) {\n        var bezierName = (\n          pt1[0] +\n          '_' +\n          pt1[1] +\n          '_' +\n          pt2[0] +\n          '_' +\n          pt2[1] +\n          '_' +\n          pt3[0] +\n          '_' +\n          pt3[1] +\n          '_' +\n          pt4[0] +\n          '_' +\n          pt4[1]\n        ).replace(/\\./g, 'p')\n        if (!storedData[bezierName]) {\n          var curveSegments = getDefaultCurveSegments()\n          var k\n          var i\n          var len\n          var ptCoord\n          var perc\n          var addedLength = 0\n          var ptDistance\n          var point\n          var lastPoint = null\n          if (\n            pt1.length === 2 &&\n            (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) &&\n            pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) &&\n            pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])\n          ) {\n            curveSegments = 2\n          }\n          var bezierData = new BezierData(curveSegments)\n          len = pt3.length\n          for (k = 0; k < curveSegments; k += 1) {\n            point = createSizedArray(len)\n            perc = k / (curveSegments - 1)\n            ptDistance = 0\n            for (i = 0; i < len; i += 1) {\n              ptCoord =\n                bmPow(1 - perc, 3) * pt1[i] +\n                3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) +\n                3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) +\n                bmPow(perc, 3) * pt2[i]\n              point[i] = ptCoord\n              if (lastPoint !== null) {\n                ptDistance += bmPow(point[i] - lastPoint[i], 2)\n              }\n            }\n            ptDistance = bmSqrt(ptDistance)\n            addedLength += ptDistance\n            bezierData.points[k] = new PointData(ptDistance, point)\n            lastPoint = point\n          }\n          bezierData.segmentLength = addedLength\n          storedData[bezierName] = bezierData\n        }\n        return storedData[bezierName]\n      }\n    })()\n\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents\n      var lengths = bezierData.lengths\n      var len = percents.length\n      var initPos = bmFloor((len - 1) * perc)\n      var lengthPos = perc * bezierData.addedLength\n      var lPerc = 0\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos]\n      }\n      var dir = lengths[initPos] > lengthPos ? -1 : 1\n      var flag = true\n      while (flag) {\n        if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n          lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos])\n          flag = false\n        } else {\n          initPos += dir\n        }\n        if (initPos < 0 || initPos >= len - 1) {\n          // FIX for TypedArrays that don't store floating point values with enough accuracy\n          if (initPos === len - 1) {\n            return percents[initPos]\n          }\n          flag = false\n        }\n      }\n      return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc\n    }\n\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData)\n      var u1 = 1 - t1\n      var ptX =\n        math.round(\n          (u1 * u1 * u1 * pt1[0] +\n            (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] +\n            (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] +\n            t1 * t1 * t1 * pt2[0]) *\n            1000,\n        ) / 1000\n      var ptY =\n        math.round(\n          (u1 * u1 * u1 * pt1[1] +\n            (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] +\n            (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] +\n            t1 * t1 * t1 * pt2[1]) *\n            1000,\n        ) / 1000\n      return [ptX, ptY]\n    }\n\n    var bezierSegmentPoints = createTypedArray('float32', 8)\n\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      if (startPerc < 0) {\n        startPerc = 0\n      } else if (startPerc > 1) {\n        startPerc = 1\n      }\n      var t0 = getDistancePerc(startPerc, bezierData)\n      endPerc = endPerc > 1 ? 1 : endPerc\n      var t1 = getDistancePerc(endPerc, bezierData)\n      var i\n      var len = pt1.length\n      var u0 = 1 - t0\n      var u1 = 1 - t1\n      var u0u0u0 = u0 * u0 * u0\n      var t0u0u0_3 = t0 * u0 * u0 * 3 // eslint-disable-line camelcase\n      var t0t0u0_3 = t0 * t0 * u0 * 3 // eslint-disable-line camelcase\n      var t0t0t0 = t0 * t0 * t0\n      //\n      var u0u0u1 = u0 * u0 * u1\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1 // eslint-disable-line camelcase\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1 // eslint-disable-line camelcase\n      var t0t0t1 = t0 * t0 * t1\n      //\n      var u0u1u1 = u0 * u1 * u1\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1 // eslint-disable-line camelcase\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1 // eslint-disable-line camelcase\n      var t0t1t1 = t0 * t1 * t1\n      //\n      var u1u1u1 = u1 * u1 * u1\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1 // eslint-disable-line camelcase\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1 // eslint-disable-line camelcase\n      var t1t1t1 = t1 * t1 * t1\n      for (i = 0; i < len; i += 1) {\n        bezierSegmentPoints[i * 4] =\n          math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n        bezierSegmentPoints[i * 4 + 1] =\n          math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n        bezierSegmentPoints[i * 4 + 2] =\n          math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n        bezierSegmentPoints[i * 4 + 3] =\n          math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n      }\n\n      return bezierSegmentPoints\n    }\n\n    return {\n      getSegmentsLength: getSegmentsLength,\n      getNewSegment: getNewSegment,\n      getPointInSegment: getPointInSegment,\n      buildBezierData: buildBezierData,\n      pointOnLine2D: pointOnLine2D,\n      pointOnLine3D: pointOnLine3D,\n    }\n  }\n\n  const bez = bezFunction()\n\n  const PropertyFactory = (function () {\n    var initFrame = initialDefaultFrame\n    var mathAbs = Math.abs\n\n    function interpolateValue(frameNum, caching) {\n      var offsetTime = this.offsetTime\n      var newValue\n      if (this.propType === 'multidimensional') {\n        newValue = createTypedArray('float32', this.pv.length)\n      }\n      var iterationIndex = caching.lastIndex\n      var i = iterationIndex\n      var len = this.keyframes.length - 1\n      var flag = true\n      var keyData\n      var nextKeyData\n      var keyframeMetadata\n\n      while (flag) {\n        keyData = this.keyframes[i]\n        nextKeyData = this.keyframes[i + 1]\n        if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData\n          }\n          iterationIndex = 0\n          break\n        }\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i\n          break\n        }\n        if (i < len - 1) {\n          i += 1\n        } else {\n          iterationIndex = 0\n          flag = false\n        }\n      }\n      keyframeMetadata = this.keyframesMetadata[i] || {}\n\n      var k\n      var kLen\n      var perc\n      var jLen\n      var j\n      var fnc\n      var nextKeyTime = nextKeyData.t - offsetTime\n      var keyTime = keyData.t - offsetTime\n      var endValue\n      if (keyData.to) {\n        if (!keyframeMetadata.bezierData) {\n          keyframeMetadata.bezierData = bez.buildBezierData(\n            keyData.s,\n            nextKeyData.s || keyData.e,\n            keyData.to,\n            keyData.ti,\n          )\n        }\n        var bezierData = keyframeMetadata.bezierData\n        if (frameNum >= nextKeyTime || frameNum < keyTime) {\n          var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0\n          kLen = bezierData.points[ind].point.length\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k]\n          }\n          // caching._lastKeyframeIndex = -1;\n        } else {\n          if (keyframeMetadata.__fnct) {\n            fnc = keyframeMetadata.__fnct\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get\n            keyframeMetadata.__fnct = fnc\n          }\n          perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime))\n          var distanceInLine = bezierData.segmentLength * perc\n\n          var segmentPerc\n          var addedLength =\n            caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0\n          j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0\n          flag = true\n          jLen = bezierData.points.length\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength\n            if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k]\n              }\n              break\n            } else if (\n              distanceInLine >= addedLength &&\n              distanceInLine < addedLength + bezierData.points[j + 1].partialLength\n            ) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength\n              kLen = bezierData.points[j].point.length\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] =\n                  bezierData.points[j].point[k] +\n                  (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc\n              }\n              break\n            }\n            if (j < jLen - 1) {\n              j += 1\n            } else {\n              flag = false\n            }\n          }\n          caching._lastPoint = j\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength\n          caching._lastKeyframeIndex = i\n        }\n      } else {\n        var outX\n        var outY\n        var inX\n        var inY\n        var keyValue\n        len = keyData.s.length\n        endValue = nextKeyData.s || keyData.e\n        if (this.sh && keyData.h !== 1) {\n          if (frameNum >= nextKeyTime) {\n            newValue[0] = endValue[0]\n            newValue[1] = endValue[1]\n            newValue[2] = endValue[2]\n          } else if (frameNum <= keyTime) {\n            newValue[0] = keyData.s[0]\n            newValue[1] = keyData.s[1]\n            newValue[2] = keyData.s[2]\n          } else {\n            var quatStart = createQuaternion(keyData.s)\n            var quatEnd = createQuaternion(endValue)\n            var time = (frameNum - keyTime) / (nextKeyTime - keyTime)\n            quaternionToEuler(newValue, slerp(quatStart, quatEnd, time))\n          }\n        } else {\n          for (i = 0; i < len; i += 1) {\n            if (keyData.h !== 1) {\n              if (frameNum >= nextKeyTime) {\n                perc = 1\n              } else if (frameNum < keyTime) {\n                perc = 0\n              } else {\n                if (keyData.o.x.constructor === Array) {\n                  if (!keyframeMetadata.__fnct) {\n                    keyframeMetadata.__fnct = []\n                  }\n                  if (!keyframeMetadata.__fnct[i]) {\n                    outX = keyData.o.x[i] === undefined ? keyData.o.x[0] : keyData.o.x[i]\n                    outY = keyData.o.y[i] === undefined ? keyData.o.y[0] : keyData.o.y[i]\n                    inX = keyData.i.x[i] === undefined ? keyData.i.x[0] : keyData.i.x[i]\n                    inY = keyData.i.y[i] === undefined ? keyData.i.y[0] : keyData.i.y[i]\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get\n                    keyframeMetadata.__fnct[i] = fnc\n                  } else {\n                    fnc = keyframeMetadata.__fnct[i]\n                  }\n                } else if (!keyframeMetadata.__fnct) {\n                  outX = keyData.o.x\n                  outY = keyData.o.y\n                  inX = keyData.i.x\n                  inY = keyData.i.y\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get\n                  keyData.keyframeMetadata = fnc\n                } else {\n                  fnc = keyframeMetadata.__fnct\n                }\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime))\n              }\n            }\n\n            endValue = nextKeyData.s || keyData.e\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc\n\n            if (this.propType === 'multidimensional') {\n              newValue[i] = keyValue\n            } else {\n              newValue = keyValue\n            }\n          }\n        }\n      }\n      caching.lastIndex = iterationIndex\n      return newValue\n    }\n\n    // based on @Toji's https://github.com/toji/gl-matrix/\n    function slerp(a, b, t) {\n      var out = []\n      var ax = a[0]\n      var ay = a[1]\n      var az = a[2]\n      var aw = a[3]\n      var bx = b[0]\n      var by = b[1]\n      var bz = b[2]\n      var bw = b[3]\n\n      var omega\n      var cosom\n      var sinom\n      var scale0\n      var scale1\n\n      cosom = ax * bx + ay * by + az * bz + aw * bw\n      if (cosom < 0.0) {\n        cosom = -cosom\n        bx = -bx\n        by = -by\n        bz = -bz\n        bw = -bw\n      }\n      if (1.0 - cosom > 0.000001) {\n        omega = Math.acos(cosom)\n        sinom = Math.sin(omega)\n        scale0 = Math.sin((1.0 - t) * omega) / sinom\n        scale1 = Math.sin(t * omega) / sinom\n      } else {\n        scale0 = 1.0 - t\n        scale1 = t\n      }\n      out[0] = scale0 * ax + scale1 * bx\n      out[1] = scale0 * ay + scale1 * by\n      out[2] = scale0 * az + scale1 * bz\n      out[3] = scale0 * aw + scale1 * bw\n\n      return out\n    }\n\n    function quaternionToEuler(out, quat) {\n      var qx = quat[0]\n      var qy = quat[1]\n      var qz = quat[2]\n      var qw = quat[3]\n      var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz)\n      var attitude = Math.asin(2 * qx * qy + 2 * qz * qw)\n      var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz)\n      out[0] = heading / degToRads\n      out[1] = attitude / degToRads\n      out[2] = bank / degToRads\n    }\n\n    function createQuaternion(values) {\n      var heading = values[0] * degToRads\n      var attitude = values[1] * degToRads\n      var bank = values[2] * degToRads\n      var c1 = Math.cos(heading / 2)\n      var c2 = Math.cos(attitude / 2)\n      var c3 = Math.cos(bank / 2)\n      var s1 = Math.sin(heading / 2)\n      var s2 = Math.sin(attitude / 2)\n      var s3 = Math.sin(bank / 2)\n      var w = c1 * c2 * c3 - s1 * s2 * s3\n      var x = s1 * s2 * c3 + c1 * c2 * s3\n      var y = s1 * c2 * c3 + c1 * s2 * s3\n      var z = c1 * s2 * c3 - s1 * c2 * s3\n\n      return [x, y, z, w]\n    }\n\n    function getValueAtCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime\n      var initTime = this.keyframes[0].t - this.offsetTime\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime\n      if (\n        !(\n          frameNum === this._caching.lastFrame ||\n          (this._caching.lastFrame !== initFrame &&\n            ((this._caching.lastFrame >= endTime && frameNum >= endTime) ||\n              (this._caching.lastFrame < initTime && frameNum < initTime)))\n        )\n      ) {\n        if (this._caching.lastFrame >= frameNum) {\n          this._caching._lastKeyframeIndex = -1\n          this._caching.lastIndex = 0\n        }\n\n        var renderResult = this.interpolateValue(frameNum, this._caching)\n        this.pv = renderResult\n      }\n      this._caching.lastFrame = frameNum\n      return this.pv\n    }\n\n    function setVValue(val) {\n      var multipliedValue\n      if (this.propType === 'unidimensional') {\n        multipliedValue = val * this.mult\n        if (mathAbs(this.v - multipliedValue) > 0.00001) {\n          this.v = multipliedValue\n          this._mdf = true\n        }\n      } else {\n        var i = 0\n        var len = this.v.length\n        while (i < len) {\n          multipliedValue = val[i] * this.mult\n          if (mathAbs(this.v[i] - multipliedValue) > 0.00001) {\n            this.v[i] = multipliedValue\n            this._mdf = true\n          }\n          i += 1\n        }\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return\n      }\n      if (this.lock) {\n        this.setVValue(this.pv)\n        return\n      }\n      this.lock = true\n      this._mdf = this._isFirstFrame\n      var i\n      var len = this.effectsSequence.length\n      var finalValue = this.kf ? this.pv : this.data.k\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue)\n      }\n      this.setVValue(finalValue)\n      this._isFirstFrame = false\n      this.lock = false\n      this.frameId = this.elem.globalData.frameId\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction)\n      this.container.addDynamicProperty(this)\n    }\n\n    function ValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional'\n      this.mult = mult || 1\n      this.data = data\n      this.v = mult ? data.k * mult : data.k\n      this.pv = data.k\n      this._mdf = false\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.k = false\n      this.kf = false\n      this.vel = 0\n      this.effectsSequence = []\n      this._isFirstFrame = true\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.addEffect = addEffect\n    }\n\n    function MultiDimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional'\n      this.mult = mult || 1\n      this.data = data\n      this._mdf = false\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.k = false\n      this.kf = false\n      this.frameId = -1\n      var i\n      var len = data.k.length\n      this.v = createTypedArray('float32', len)\n      this.pv = createTypedArray('float32', len)\n      this.vel = createTypedArray('float32', len)\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = data.k[i] * this.mult\n        this.pv[i] = data.k[i]\n      }\n      this._isFirstFrame = true\n      this.effectsSequence = []\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.addEffect = addEffect\n    }\n\n    function KeyframedValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional'\n      this.keyframes = data.k\n      this.keyframesMetadata = []\n      this.offsetTime = elem.data.st\n      this.frameId = -1\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: 0,\n        _lastKeyframeIndex: -1,\n      }\n      this.k = true\n      this.kf = true\n      this.data = data\n      this.mult = mult || 1\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.v = initFrame\n      this.pv = initFrame\n      this._isFirstFrame = true\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.interpolateValue = interpolateValue\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)]\n      this.addEffect = addEffect\n    }\n\n    function KeyframedMultidimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional'\n      var i\n      var len = data.k.length\n      var s\n      var e\n      var to\n      var ti\n      for (i = 0; i < len - 1; i += 1) {\n        if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\n          s = data.k[i].s\n          e = data.k[i + 1].s\n          to = data.k[i].to\n          ti = data.k[i].ti\n          if (\n            (s.length === 2 &&\n              !(s[0] === e[0] && s[1] === e[1]) &&\n              bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) &&\n              bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1])) ||\n            (s.length === 3 &&\n              !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) &&\n              bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) &&\n              bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2]))\n          ) {\n            data.k[i].to = null\n            data.k[i].ti = null\n          }\n          if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n            if (s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\n              data.k[i].to = null\n              data.k[i].ti = null\n            }\n          }\n        }\n      }\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)]\n      this.data = data\n      this.keyframes = data.k\n      this.keyframesMetadata = []\n      this.offsetTime = elem.data.st\n      this.k = true\n      this.kf = true\n      this._isFirstFrame = true\n      this.mult = mult || 1\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.interpolateValue = interpolateValue\n      this.frameId = -1\n      var arrLen = data.k[0].s.length\n      this.v = createTypedArray('float32', arrLen)\n      this.pv = createTypedArray('float32', arrLen)\n      for (i = 0; i < arrLen; i += 1) {\n        this.v[i] = initFrame\n        this.pv[i] = initFrame\n      }\n      this._caching = { lastFrame: initFrame, lastIndex: 0, value: createTypedArray('float32', arrLen) }\n      this.addEffect = addEffect\n    }\n\n    function getProp(elem, data, type, mult, container) {\n      var p\n      if (!data.k.length) {\n        p = new ValueProperty(elem, data, mult, container)\n      } else if (typeof data.k[0] === 'number') {\n        p = new MultiDimensionalProperty(elem, data, mult, container)\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem, data, mult, container)\n            break\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem, data, mult, container)\n            break\n          default:\n            break\n        }\n      }\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p)\n      }\n      return p\n    }\n\n    var ob = {\n      getProp: getProp,\n    }\n    return ob\n  })()\n\n  function DynamicPropertyContainer() {}\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop)\n        this.container.addDynamicProperty(this)\n        this._isAnimated = true\n      }\n    },\n    iterateDynamicProperties: function () {\n      this._mdf = false\n      var i\n      var len = this.dynamicProperties.length\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue()\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true\n        }\n      }\n    },\n    initDynamicPropertyContainer: function (container) {\n      this.container = container\n      this.dynamicProperties = []\n      this._mdf = false\n      this._isAnimated = false\n    },\n  }\n\n  const pointPool = (function () {\n    function create() {\n      return createTypedArray('float32', 2)\n    }\n    return poolFactory(8, create)\n  })()\n\n  function ShapePath() {\n    this.c = false\n    this._length = 0\n    this._maxLength = 8\n    this.v = createSizedArray(this._maxLength)\n    this.o = createSizedArray(this._maxLength)\n    this.i = createSizedArray(this._maxLength)\n  }\n\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed\n    this.setLength(len)\n    var i = 0\n    while (i < len) {\n      this.v[i] = pointPool.newElement()\n      this.o[i] = pointPool.newElement()\n      this.i[i] = pointPool.newElement()\n      i += 1\n    }\n  }\n\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength()\n    }\n    this._length = len\n  }\n\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength))\n    this.i = this.i.concat(createSizedArray(this._maxLength))\n    this.o = this.o.concat(createSizedArray(this._maxLength))\n    this._maxLength *= 2\n  }\n\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr\n    this._length = Math.max(this._length, pos + 1)\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength()\n    }\n    switch (type) {\n      case 'v':\n        arr = this.v\n        break\n      case 'i':\n        arr = this.i\n        break\n      case 'o':\n        arr = this.o\n        break\n      default:\n        arr = []\n        break\n    }\n    if (!arr[pos] || (arr[pos] && !replace)) {\n      arr[pos] = pointPool.newElement()\n    }\n    arr[pos][0] = x\n    arr[pos][1] = y\n  }\n\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, 'v', pos, replace)\n    this.setXYAt(oX, oY, 'o', pos, replace)\n    this.setXYAt(iX, iY, 'i', pos, replace)\n  }\n\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath()\n    newPath.setPathData(this.c, this._length)\n    var vertices = this.v\n    var outPoints = this.o\n    var inPoints = this.i\n    var init = 0\n    if (this.c) {\n      newPath.setTripleAt(\n        vertices[0][0],\n        vertices[0][1],\n        inPoints[0][0],\n        inPoints[0][1],\n        outPoints[0][0],\n        outPoints[0][1],\n        0,\n        false,\n      )\n      init = 1\n    }\n    var cnt = this._length - 1\n    var len = this._length\n\n    var i\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(\n        vertices[cnt][0],\n        vertices[cnt][1],\n        inPoints[cnt][0],\n        inPoints[cnt][1],\n        outPoints[cnt][0],\n        outPoints[cnt][1],\n        i,\n        false,\n      )\n      cnt -= 1\n    }\n    return newPath\n  }\n\n  const shapePool = (function () {\n    function create() {\n      return new ShapePath()\n    }\n\n    function release(shapePath) {\n      var len = shapePath._length\n      var i\n      for (i = 0; i < len; i += 1) {\n        pointPool.release(shapePath.v[i])\n        pointPool.release(shapePath.i[i])\n        pointPool.release(shapePath.o[i])\n        shapePath.v[i] = null\n        shapePath.i[i] = null\n        shapePath.o[i] = null\n      }\n      shapePath._length = 0\n      shapePath.c = false\n    }\n\n    function clone(shape) {\n      var cloned = factory.newElement()\n      var i\n      var len = shape._length === undefined ? shape.v.length : shape._length\n      cloned.setLength(len)\n      cloned.c = shape.c\n\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i)\n      }\n      return cloned\n    }\n\n    var factory = poolFactory(4, create, release)\n    factory.clone = clone\n\n    return factory\n  })()\n\n  function ShapeCollection() {\n    this._length = 0\n    this._maxLength = 4\n    this.shapes = createSizedArray(this._maxLength)\n  }\n\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength))\n      this._maxLength *= 2\n    }\n    this.shapes[this._length] = shapeData\n    this._length += 1\n  }\n\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i\n    for (i = 0; i < this._length; i += 1) {\n      shapePool.release(this.shapes[i])\n    }\n    this._length = 0\n  }\n\n  const shapeCollectionPool = (function () {\n    var ob = {\n      newShapeCollection: newShapeCollection,\n      release: release,\n    }\n\n    var _length = 0\n    var _maxLength = 4\n    var pool = createSizedArray(_maxLength)\n\n    function newShapeCollection() {\n      var shapeCollection\n      if (_length) {\n        _length -= 1\n        shapeCollection = pool[_length]\n      } else {\n        shapeCollection = new ShapeCollection()\n      }\n      return shapeCollection\n    }\n\n    function release(shapeCollection) {\n      var i\n      var len = shapeCollection._length\n      for (i = 0; i < len; i += 1) {\n        shapePool.release(shapeCollection.shapes[i])\n      }\n      shapeCollection._length = 0\n\n      if (_length === _maxLength) {\n        pool = pooling.double(pool)\n        _maxLength *= 2\n      }\n      pool[_length] = shapeCollection\n      _length += 1\n    }\n\n    return ob\n  })()\n\n  const ShapePropertyFactory = (function () {\n    var initFrame = -999999\n\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex\n      var keyPropS\n      var keyPropE\n      var isHold\n      var j\n      var k\n      var jLen\n      var kLen\n      var perc\n      var vertexValue\n      var kf = this.keyframes\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0]\n        isHold = true\n        iterationIndex = 0\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0]\n        /* if(kf[kf.length - 1].s){\n                keyPropS = kf[kf.length - 1].s[0];\n            }else{\n                keyPropS = kf[kf.length - 2].e[0];\n            } */\n        isHold = true\n      } else {\n        var i = iterationIndex\n        var len = kf.length - 1\n        var flag = true\n        var keyData\n        var nextKeyData\n        var keyframeMetadata\n        while (flag) {\n          keyData = kf[i]\n          nextKeyData = kf[i + 1]\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break\n          }\n          if (i < len - 1) {\n            i += 1\n          } else {\n            flag = false\n          }\n        }\n        keyframeMetadata = this.keyframesMetadata[i] || {}\n        isHold = keyData.h === 1\n        iterationIndex = i\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0\n          } else {\n            var fnc\n            if (keyframeMetadata.__fnct) {\n              fnc = keyframeMetadata.__fnct\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get\n              keyframeMetadata.__fnct = fnc\n            }\n            perc = fnc(\n              (frameNum - (keyData.t - this.offsetTime)) /\n                (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)),\n            )\n          }\n          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0]\n        }\n        keyPropS = keyData.s[0]\n      }\n      jLen = previousValue._length\n      kLen = keyPropS.i[0].length\n      caching.lastIndex = iterationIndex\n\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc\n          previousValue.i[j][k] = vertexValue\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc\n          previousValue.o[j][k] = vertexValue\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc\n          previousValue.v[j][k] = vertexValue\n        }\n      }\n    }\n\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime\n      var initTime = this.keyframes[0].t - this.offsetTime\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime\n      var lastFrame = this._caching.lastFrame\n      if (\n        !(\n          lastFrame !== initFrame &&\n          ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime))\n        )\n      ) {\n        /// /\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0\n        this.interpolateShape(frameNum, this.pv, this._caching)\n        /// /\n      }\n      this._caching.lastFrame = frameNum\n      return this.pv\n    }\n\n    function resetShape() {\n      this.paths = this.localShapeCollection\n    }\n\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false\n      }\n      var i\n      var len = shape1._length\n      for (i = 0; i < len; i += 1) {\n        if (\n          shape1.v[i][0] !== shape2.v[i][0] ||\n          shape1.v[i][1] !== shape2.v[i][1] ||\n          shape1.o[i][0] !== shape2.o[i][0] ||\n          shape1.o[i][1] !== shape2.o[i][1] ||\n          shape1.i[i][0] !== shape2.i[i][0] ||\n          shape1.i[i][1] !== shape2.i[i][1]\n        ) {\n          return false\n        }\n      }\n      return true\n    }\n\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shapePool.clone(newPath)\n        this.localShapeCollection.releaseShapes()\n        this.localShapeCollection.addShape(this.v)\n        this._mdf = true\n        this.paths = this.localShapeCollection\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return\n      }\n      if (!this.effectsSequence.length) {\n        this._mdf = false\n        return\n      }\n      if (this.lock) {\n        this.setVValue(this.pv)\n        return\n      }\n      this.lock = true\n      this._mdf = false\n      var finalValue\n      if (this.kf) {\n        finalValue = this.pv\n      } else if (this.data.ks) {\n        finalValue = this.data.ks.k\n      } else {\n        finalValue = this.data.pt.k\n      }\n      var i\n      var len = this.effectsSequence.length\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue)\n      }\n      this.setVValue(finalValue)\n      this.lock = false\n      this.frameId = this.elem.globalData.frameId\n    }\n\n    function ShapeProperty(elem, data, type) {\n      this.propType = 'shape'\n      this.comp = elem.comp\n      this.container = elem\n      this.elem = elem\n      this.data = data\n      this.k = false\n      this.kf = false\n      this._mdf = false\n      var pathData = type === 3 ? data.pt.k : data.ks.k\n      this.v = shapePool.clone(pathData)\n      this.pv = shapePool.clone(this.v)\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n      this.paths = this.localShapeCollection\n      this.paths.addShape(this.v)\n      this.reset = resetShape\n      this.effectsSequence = []\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction)\n      this.container.addDynamicProperty(this)\n    }\n\n    ShapeProperty.prototype.interpolateShape = interpolateShape\n    ShapeProperty.prototype.getValue = processEffectsSequence\n    ShapeProperty.prototype.setVValue = setVValue\n    ShapeProperty.prototype.addEffect = addEffect\n\n    function KeyframedShapeProperty(elem, data, type) {\n      this.propType = 'shape'\n      this.comp = elem.comp\n      this.elem = elem\n      this.container = elem\n      this.offsetTime = elem.data.st\n      this.keyframes = type === 3 ? data.pt.k : data.ks.k\n      this.keyframesMetadata = []\n      this.k = true\n      this.kf = true\n      var len = this.keyframes[0].s[0].i.length\n      this.v = shapePool.newElement()\n      this.v.setPathData(this.keyframes[0].s[0].c, len)\n      this.pv = shapePool.clone(this.v)\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n      this.paths = this.localShapeCollection\n      this.paths.addShape(this.v)\n      this.lastFrame = initFrame\n      this.reset = resetShape\n      this._caching = { lastFrame: initFrame, lastIndex: 0 }\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)]\n    }\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape\n    KeyframedShapeProperty.prototype.setVValue = setVValue\n    KeyframedShapeProperty.prototype.addEffect = addEffect\n\n    var EllShapeProperty = (function () {\n      var cPoint = roundCorner\n\n      function EllShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement()\n        this.v.setPathData(true, 4)\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n        this.paths = this.localShapeCollection\n        this.localShapeCollection.addShape(this.v)\n        this.d = data.d\n        this.elem = elem\n        this.comp = elem.comp\n        this.frameId = -1\n        this.initDynamicPropertyContainer(elem)\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this)\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this)\n        if (this.dynamicProperties.length) {\n          this.k = true\n        } else {\n          this.k = false\n          this.convertEllToPath()\n        }\n      }\n\n      EllShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return\n          }\n          this.frameId = this.elem.globalData.frameId\n          this.iterateDynamicProperties()\n\n          if (this._mdf) {\n            this.convertEllToPath()\n          }\n        },\n        convertEllToPath: function () {\n          var p0 = this.p.v[0]\n          var p1 = this.p.v[1]\n          var s0 = this.s.v[0] / 2\n          var s1 = this.s.v[1] / 2\n          var _cw = this.d !== 3\n          var _v = this.v\n          _v.v[0][0] = p0\n          _v.v[0][1] = p1 - s1\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0\n          _v.v[1][1] = p1\n          _v.v[2][0] = p0\n          _v.v[2][1] = p1 + s1\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0\n          _v.v[3][1] = p1\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint\n          _v.i[0][1] = p1 - s1\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0\n          _v.i[1][1] = p1 - s1 * cPoint\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint\n          _v.i[2][1] = p1 + s1\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0\n          _v.i[3][1] = p1 + s1 * cPoint\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint\n          _v.o[0][1] = p1 - s1\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0\n          _v.o[1][1] = p1 + s1 * cPoint\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint\n          _v.o[2][1] = p1 + s1\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0\n          _v.o[3][1] = p1 - s1 * cPoint\n        },\n      }\n\n      extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory)\n\n      return EllShapePropertyFactory\n    })()\n\n    var StarShapeProperty = (function () {\n      function StarShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement()\n        this.v.setPathData(true, 0)\n        this.elem = elem\n        this.comp = elem.comp\n        this.data = data\n        this.frameId = -1\n        this.d = data.d\n        this.initDynamicPropertyContainer(elem)\n        if (data.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this)\n          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this)\n          this.convertToPath = this.convertStarToPath\n        } else {\n          this.convertToPath = this.convertPolygonToPath\n        }\n        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this)\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this)\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this)\n        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this)\n        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this)\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n        this.localShapeCollection.addShape(this.v)\n        this.paths = this.localShapeCollection\n        if (this.dynamicProperties.length) {\n          this.k = true\n        } else {\n          this.k = false\n          this.convertToPath()\n        }\n      }\n\n      StarShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return\n          }\n          this.frameId = this.elem.globalData.frameId\n          this.iterateDynamicProperties()\n          if (this._mdf) {\n            this.convertToPath()\n          }\n        },\n        convertStarToPath: function () {\n          var numPts = Math.floor(this.pt.v) * 2\n          var angle = (Math.PI * 2) / numPts\n          /* this.v.v.length = numPts;\n                this.v.i.length = numPts;\n                this.v.o.length = numPts; */\n          var longFlag = true\n          var longRad = this.or.v\n          var shortRad = this.ir.v\n          var longRound = this.os.v\n          var shortRound = this.is.v\n          var longPerimSegment = (2 * Math.PI * longRad) / (numPts * 2)\n          var shortPerimSegment = (2 * Math.PI * shortRad) / (numPts * 2)\n          var i\n          var rad\n          var roundness\n          var perimSegment\n          var currentAng = -Math.PI / 2\n          currentAng += this.r.v\n          var dir = this.data.d === 3 ? -1 : 1\n          this.v._length = 0\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad\n            roundness = longFlag ? longRound : shortRound\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment\n            var x = rad * Math.cos(currentAng)\n            var y = rad * Math.sin(currentAng)\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y)\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y)\n            x += +this.p.v[0]\n            y += +this.p.v[1]\n            this.v.setTripleAt(\n              x,\n              y,\n              x - ox * perimSegment * roundness * dir,\n              y - oy * perimSegment * roundness * dir,\n              x + ox * perimSegment * roundness * dir,\n              y + oy * perimSegment * roundness * dir,\n              i,\n              true,\n            )\n\n            /* this.v.v[i] = [x,y];\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\n                    this.v._length = numPts; */\n            longFlag = !longFlag\n            currentAng += angle * dir\n          }\n        },\n        convertPolygonToPath: function () {\n          var numPts = Math.floor(this.pt.v)\n          var angle = (Math.PI * 2) / numPts\n          var rad = this.or.v\n          var roundness = this.os.v\n          var perimSegment = (2 * Math.PI * rad) / (numPts * 4)\n          var i\n          var currentAng = -Math.PI * 0.5\n          var dir = this.data.d === 3 ? -1 : 1\n          currentAng += this.r.v\n          this.v._length = 0\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng)\n            var y = rad * Math.sin(currentAng)\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y)\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y)\n            x += +this.p.v[0]\n            y += +this.p.v[1]\n            this.v.setTripleAt(\n              x,\n              y,\n              x - ox * perimSegment * roundness * dir,\n              y - oy * perimSegment * roundness * dir,\n              x + ox * perimSegment * roundness * dir,\n              y + oy * perimSegment * roundness * dir,\n              i,\n              true,\n            )\n            currentAng += angle * dir\n          }\n          this.paths.length = 0\n          this.paths[0] = this.v\n        },\n      }\n      extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory)\n\n      return StarShapePropertyFactory\n    })()\n\n    var RectShapeProperty = (function () {\n      function RectShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement()\n        this.v.c = true\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n        this.localShapeCollection.addShape(this.v)\n        this.paths = this.localShapeCollection\n        this.elem = elem\n        this.comp = elem.comp\n        this.frameId = -1\n        this.d = data.d\n        this.initDynamicPropertyContainer(elem)\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this)\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this)\n        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this)\n        if (this.dynamicProperties.length) {\n          this.k = true\n        } else {\n          this.k = false\n          this.convertRectToPath()\n        }\n      }\n\n      RectShapePropertyFactory.prototype = {\n        convertRectToPath: function () {\n          var p0 = this.p.v[0]\n          var p1 = this.p.v[1]\n          var v0 = this.s.v[0] / 2\n          var v1 = this.s.v[1] / 2\n          var round = bmMin(v0, v1, this.r.v)\n          var cPoint = round * (1 - roundCorner)\n          this.v._length = 0\n\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true)\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true)\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true)\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true)\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true)\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true)\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2)\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3)\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true)\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true)\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true)\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true)\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true)\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true)\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true)\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true)\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true)\n            }\n          }\n        },\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return\n          }\n          this.frameId = this.elem.globalData.frameId\n          this.iterateDynamicProperties()\n          if (this._mdf) {\n            this.convertRectToPath()\n          }\n        },\n        reset: resetShape,\n      }\n      extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory)\n\n      return RectShapePropertyFactory\n    })()\n\n    function getShapeProp(elem, data, type) {\n      var prop\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data.pt : data.ks\n        var keys = dataProp.k\n        if (keys.length) {\n          prop = new KeyframedShapeProperty(elem, data, type)\n        } else {\n          prop = new ShapeProperty(elem, data, type)\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem, data)\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem, data)\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem, data)\n      }\n      if (prop.k) {\n        elem.addDynamicProperty(prop)\n      }\n      return prop\n    }\n\n    function getConstructorFunction() {\n      return ShapeProperty\n    }\n\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty\n    }\n\n    var ob = {}\n    ob.getShapeProp = getShapeProp\n    ob.getConstructorFunction = getConstructorFunction\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction\n    return ob\n  })()\n\n  /*!\n Transformation Matrix v2.0\n (c) Epistemex 2014-2015\n www.epistemex.com\n By Ken Fyrstenberg\n Contributions by leeoniya.\n License: MIT, header required.\n */\n\n  /**\n   * 2D transformation matrix object initialized with identity matrix.\n   *\n   * The matrix can synchronize a canvas context by supplying the context\n   * as an argument, or later apply current absolute transform to an\n   * existing context.\n   *\n   * All values are handled as floating point values.\n   *\n   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\n   * @prop {number} a - scale x\n   * @prop {number} b - shear y\n   * @prop {number} c - shear x\n   * @prop {number} d - scale y\n   * @prop {number} e - translate x\n   * @prop {number} f - translate y\n   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\n   * @constructor\n   */\n\n  const Matrix = (function () {\n    var _cos = Math.cos\n    var _sin = Math.sin\n    var _tan = Math.tan\n    var _rnd = Math.round\n\n    function reset() {\n      this.props[0] = 1\n      this.props[1] = 0\n      this.props[2] = 0\n      this.props[3] = 0\n      this.props[4] = 0\n      this.props[5] = 1\n      this.props[6] = 0\n      this.props[7] = 0\n      this.props[8] = 0\n      this.props[9] = 0\n      this.props[10] = 1\n      this.props[11] = 0\n      this.props[12] = 0\n      this.props[13] = 0\n      this.props[14] = 0\n      this.props[15] = 1\n      return this\n    }\n\n    function rotate(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n    }\n\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1)\n    }\n\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1)\n    }\n\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n    }\n\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0)\n    }\n\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay))\n    }\n\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n        ._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n        ._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n      // return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\n    }\n\n    function scale(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1\n      }\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this\n      }\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1)\n    }\n\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a\n      this.props[1] = b\n      this.props[2] = c\n      this.props[3] = d\n      this.props[4] = e\n      this.props[5] = f\n      this.props[6] = g\n      this.props[7] = h\n      this.props[8] = i\n      this.props[9] = j\n      this.props[10] = k\n      this.props[11] = l\n      this.props[12] = m\n      this.props[13] = n\n      this.props[14] = o\n      this.props[15] = p\n      return this\n    }\n\n    function translate(tx, ty, tz) {\n      tz = tz || 0\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1)\n      }\n      return this\n    }\n\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props\n\n      if (\n        a2 === 1 &&\n        b2 === 0 &&\n        c2 === 0 &&\n        d2 === 0 &&\n        e2 === 0 &&\n        f2 === 1 &&\n        g2 === 0 &&\n        h2 === 0 &&\n        i2 === 0 &&\n        j2 === 0 &&\n        k2 === 1 &&\n        l2 === 0\n      ) {\n        // NOTE: commenting this condition because TurboFan deoptimizes code when present\n        // if(m2 !== 0 || n2 !== 0 || o2 !== 0){\n        _p[12] = _p[12] * a2 + _p[15] * m2\n        _p[13] = _p[13] * f2 + _p[15] * n2\n        _p[14] = _p[14] * k2 + _p[15] * o2\n        _p[15] *= p2\n        // }\n        this._identityCalculated = false\n        return this\n      }\n\n      var a1 = _p[0]\n      var b1 = _p[1]\n      var c1 = _p[2]\n      var d1 = _p[3]\n      var e1 = _p[4]\n      var f1 = _p[5]\n      var g1 = _p[6]\n      var h1 = _p[7]\n      var i1 = _p[8]\n      var j1 = _p[9]\n      var k1 = _p[10]\n      var l1 = _p[11]\n      var m1 = _p[12]\n      var n1 = _p[13]\n      var o1 = _p[14]\n      var p1 = _p[15]\n\n      /* matrix order (canvas compatible):\n       * ace\n       * bdf\n       * 001\n       */\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2\n\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2\n\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2\n\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2\n\n      this._identityCalculated = false\n      return this\n    }\n\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(\n          this.props[0] !== 1 ||\n          this.props[1] !== 0 ||\n          this.props[2] !== 0 ||\n          this.props[3] !== 0 ||\n          this.props[4] !== 0 ||\n          this.props[5] !== 1 ||\n          this.props[6] !== 0 ||\n          this.props[7] !== 0 ||\n          this.props[8] !== 0 ||\n          this.props[9] !== 0 ||\n          this.props[10] !== 1 ||\n          this.props[11] !== 0 ||\n          this.props[12] !== 0 ||\n          this.props[13] !== 0 ||\n          this.props[14] !== 0 ||\n          this.props[15] !== 1\n        )\n        this._identityCalculated = true\n      }\n      return this._identity\n    }\n\n    function equals(matr) {\n      var i = 0\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false\n        }\n        i += 1\n      }\n      return true\n    }\n\n    function clone(matr) {\n      var i\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i]\n      }\n      return matr\n    }\n\n    function cloneFromProps(props) {\n      var i\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i]\n      }\n    }\n\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14],\n      }\n      /* return {\n         x: x * me.a + y * me.c + me.e,\n         y: x * me.b + y * me.d + me.f\n         }; */\n    }\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12]\n    }\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13]\n    }\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n    }\n\n    function getInverseMatrix() {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4]\n      var a = this.props[5] / determinant\n      var b = -this.props[1] / determinant\n      var c = -this.props[4] / determinant\n      var d = this.props[0] / determinant\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant\n      var inverseMatrix = new Matrix()\n      inverseMatrix.props[0] = a\n      inverseMatrix.props[1] = b\n      inverseMatrix.props[4] = c\n      inverseMatrix.props[5] = d\n      inverseMatrix.props[12] = e\n      inverseMatrix.props[13] = f\n      return inverseMatrix\n    }\n\n    function inversePoint(pt) {\n      var inverseMatrix = this.getInverseMatrix()\n      return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0)\n    }\n\n    function inversePoints(pts) {\n      var i\n      var len = pts.length\n      var retPts = []\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i])\n      }\n      return retPts\n    }\n\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray('float32', 6)\n      if (this.isIdentity()) {\n        arr[0] = pt1[0]\n        arr[1] = pt1[1]\n        arr[2] = pt2[0]\n        arr[3] = pt2[1]\n        arr[4] = pt3[0]\n        arr[5] = pt3[1]\n      } else {\n        var p0 = this.props[0]\n        var p1 = this.props[1]\n        var p4 = this.props[4]\n        var p5 = this.props[5]\n        var p12 = this.props[12]\n        var p13 = this.props[13]\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13\n      }\n      return arr\n    }\n\n    function applyToPointArray(x, y, z) {\n      var arr\n      if (this.isIdentity()) {\n        arr = [x, y, z]\n      } else {\n        arr = [\n          x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n          x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n          x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14],\n        ]\n      }\n      return arr\n    }\n\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + ',' + y\n      }\n      var _p = this.props\n      return (\n        Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 +\n        ',' +\n        Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100\n      )\n    }\n\n    function toCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n      /* if(this.isIdentity()) {\n            return '';\n        } */\n      var i = 0\n      var props = this.props\n      var cssValue = 'matrix3d('\n      var v = 10000\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v\n        cssValue += i === 15 ? ')' : ','\n        i += 1\n      }\n      return cssValue\n    }\n\n    function roundMatrixProperty(val) {\n      var v = 10000\n      if ((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\n        return _rnd(val * v) / v\n      }\n      return val\n    }\n\n    function to2dCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n      /* if(this.isIdentity()) {\n            return '';\n        } */\n      var props = this.props\n      var _a = roundMatrixProperty(props[0])\n      var _b = roundMatrixProperty(props[1])\n      var _c = roundMatrixProperty(props[4])\n      var _d = roundMatrixProperty(props[5])\n      var _e = roundMatrixProperty(props[12])\n      var _f = roundMatrixProperty(props[13])\n      return 'matrix(' + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ')'\n    }\n\n    return function () {\n      this.reset = reset\n      this.rotate = rotate\n      this.rotateX = rotateX\n      this.rotateY = rotateY\n      this.rotateZ = rotateZ\n      this.skew = skew\n      this.skewFromAxis = skewFromAxis\n      this.shear = shear\n      this.scale = scale\n      this.setTransform = setTransform\n      this.translate = translate\n      this.transform = transform\n      this.applyToPoint = applyToPoint\n      this.applyToX = applyToX\n      this.applyToY = applyToY\n      this.applyToZ = applyToZ\n      this.applyToPointArray = applyToPointArray\n      this.applyToTriplePoints = applyToTriplePoints\n      this.applyToPointStringified = applyToPointStringified\n      this.toCSS = toCSS\n      this.to2dCSS = to2dCSS\n      this.clone = clone\n      this.cloneFromProps = cloneFromProps\n      this.equals = equals\n      this.inversePoints = inversePoints\n      this.inversePoint = inversePoint\n      this.getInverseMatrix = getInverseMatrix\n      this._t = this.transform\n      this.isIdentity = isIdentity\n      this._identity = true\n      this._identityCalculated = false\n\n      this.props = createTypedArray('float32', 16)\n      this.reset()\n    }\n  })()\n\n  const lottie = {}\n  var standalone = '__[STANDALONE]__'\n  var animationData = '__[ANIMATIONDATA]__'\n  var renderer = ''\n\n  function setLocation(href) {\n    setLocationHref(href)\n  }\n\n  function searchAnimations() {\n    if (standalone === true) {\n      animationManager.searchAnimations(animationData, standalone, renderer)\n    } else {\n      animationManager.searchAnimations()\n    }\n  }\n\n  function setSubframeRendering(flag) {\n    setSubframeEnabled(flag)\n  }\n\n  function setPrefix(prefix) {\n    setIdPrefix(prefix)\n  }\n\n  function loadAnimation(params) {\n    if (standalone === true) {\n      params.animationData = JSON.parse(animationData)\n    }\n    return animationManager.loadAnimation(params)\n  }\n\n  function setQuality(value) {\n    if (typeof value === 'string') {\n      switch (value) {\n        case 'high':\n          setDefaultCurveSegments(200)\n          break\n        default:\n        case 'medium':\n          setDefaultCurveSegments(50)\n          break\n        case 'low':\n          setDefaultCurveSegments(10)\n          break\n      }\n    } else if (!isNaN(value) && value > 1) {\n      setDefaultCurveSegments(value)\n    }\n    if (getDefaultCurveSegments() >= 50) {\n      roundValues(false)\n    } else {\n      roundValues(true)\n    }\n  }\n\n  function inBrowser() {\n    return typeof navigator !== 'undefined'\n  }\n\n  function installPlugin(type, plugin) {\n    if (type === 'expressions') {\n      setExpressionsPlugin(plugin)\n    }\n  }\n\n  function getFactory(name) {\n    switch (name) {\n      case 'propertyFactory':\n        return PropertyFactory\n      case 'shapePropertyFactory':\n        return ShapePropertyFactory\n      case 'matrix':\n        return Matrix\n      default:\n        return null\n    }\n  }\n\n  lottie.play = animationManager.play\n  lottie.pause = animationManager.pause\n  lottie.setLocationHref = setLocation\n  lottie.togglePause = animationManager.togglePause\n  lottie.setSpeed = animationManager.setSpeed\n  lottie.setDirection = animationManager.setDirection\n  lottie.stop = animationManager.stop\n  lottie.searchAnimations = searchAnimations\n  lottie.registerAnimation = animationManager.registerAnimation\n  lottie.loadAnimation = loadAnimation\n  lottie.setSubframeRendering = setSubframeRendering\n  lottie.resize = animationManager.resize\n  // lottie.start = start;\n  lottie.goToAndStop = animationManager.goToAndStop\n  lottie.destroy = animationManager.destroy\n  lottie.setQuality = setQuality\n  lottie.inBrowser = inBrowser\n  lottie.installPlugin = installPlugin\n  lottie.freeze = animationManager.freeze\n  lottie.unfreeze = animationManager.unfreeze\n  lottie.setVolume = animationManager.setVolume\n  lottie.mute = animationManager.mute\n  lottie.unmute = animationManager.unmute\n  lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations\n  lottie.useWebWorker = setWebWorker\n  lottie.setIDPrefix = setPrefix\n  lottie.__getFactory = getFactory\n  lottie.version = '[[BM_VERSION]]'\n\n  function checkReady() {\n    if (document.readyState === 'complete') {\n      clearInterval(readyStateCheckInterval)\n      searchAnimations()\n    }\n  }\n\n  function getQueryVariable(variable) {\n    var vars = queryString.split('&')\n    for (var i = 0; i < vars.length; i += 1) {\n      var pair = vars[i].split('=')\n      if (decodeURIComponent(pair[0]) == variable) {\n        // eslint-disable-line eqeqeq\n        return decodeURIComponent(pair[1])\n      }\n    }\n    return null\n  }\n  var queryString = ''\n  if (standalone) {\n    var scripts = document.getElementsByTagName('script')\n    var index = scripts.length - 1\n    var myScript = scripts[index] || {\n      src: '',\n    }\n    queryString = myScript.src ? myScript.src.replace(/^[^\\?]+\\??/, '') : '' // eslint-disable-line no-useless-escape\n    renderer = getQueryVariable('renderer')\n  }\n  var readyStateCheckInterval = setInterval(checkReady, 100)\n\n  // this adds bodymovin to the window object for backwards compatibility\n  try {\n    if (\n      !(typeof exports === 'object' && typeof module !== 'undefined') &&\n      !(typeof define === 'function' && define.amd) // eslint-disable-line no-undef\n    ) {\n      window.bodymovin = lottie\n    }\n  } catch (err) {\n    //\n  }\n\n  const ShapeModifiers = (function () {\n    var ob = {}\n    var modifiers = {}\n    ob.registerModifier = registerModifier\n    ob.getModifier = getModifier\n\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory\n      }\n    }\n\n    function getModifier(nm, elem, data) {\n      return new modifiers[nm](elem, data)\n    }\n\n    return ob\n  })()\n\n  function ShapeModifier() {}\n  ShapeModifier.prototype.initModifierProperties = function () {}\n  ShapeModifier.prototype.addShapeToModifier = function () {}\n  ShapeModifier.prototype.addShape = function (data) {\n    if (!this.closed) {\n      // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\n      data.sh.container.addDynamicProperty(data.sh)\n      var shapeData = { shape: data.sh, data: data, localShapeCollection: shapeCollectionPool.newShapeCollection() }\n      this.shapes.push(shapeData)\n      this.addShapeToModifier(shapeData)\n      if (this._isAnimated) {\n        data.setAsAnimated()\n      }\n    }\n  }\n  ShapeModifier.prototype.init = function (elem, data) {\n    this.shapes = []\n    this.elem = elem\n    this.initDynamicPropertyContainer(elem)\n    this.initModifierProperties(elem, data)\n    this.frameId = initialDefaultFrame\n    this.closed = false\n    this.k = false\n    if (this.dynamicProperties.length) {\n      this.k = true\n    } else {\n      this.getValue(true)\n    }\n  }\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return\n    }\n    this.frameId = this.elem.globalData.frameId\n    this.iterateDynamicProperties()\n  }\n\n  extendPrototype([DynamicPropertyContainer], ShapeModifier)\n\n  function TrimModifier() {}\n  extendPrototype([ShapeModifier], TrimModifier)\n  TrimModifier.prototype.initModifierProperties = function (elem, data) {\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this)\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this)\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this)\n    this.sValue = 0\n    this.eValue = 0\n    this.getValue = this.processKeys\n    this.m = data.m\n    this._isAnimated =\n      !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length\n  }\n\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = []\n  }\n\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = []\n    if (e <= 1) {\n      segments.push({\n        s: s,\n        e: e,\n      })\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1,\n      })\n    } else {\n      segments.push({\n        s: s,\n        e: 1,\n      })\n      segments.push({\n        s: 0,\n        e: e - 1,\n      })\n    }\n    var shapeSegments = []\n    var i\n    var len = segments.length\n    var segmentOb\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i]\n      if (\n        !(\n          segmentOb.e * totalModifierLength < addedLength ||\n          segmentOb.s * totalModifierLength > addedLength + shapeLength\n        )\n      ) {\n        var shapeS\n        var shapeE\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength\n        }\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength\n        }\n        shapeSegments.push([shapeS, shapeE])\n      }\n    }\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0])\n    }\n    return shapeSegments\n  }\n\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i\n    var len = pathsData.length\n    for (i = 0; i < len; i += 1) {\n      segmentsLengthPool.release(pathsData[i])\n    }\n    pathsData.length = 0\n    return pathsData\n  }\n\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s\n    var e\n    if (this._mdf || _isFirstFrame) {\n      var o = (this.o.v % 360) / 360\n      if (o < 0) {\n        o += 1\n      }\n      if (this.s.v > 1) {\n        s = 1 + o\n      } else if (this.s.v < 0) {\n        s = 0 + o\n      } else {\n        s = this.s.v + o\n      }\n      if (this.e.v > 1) {\n        e = 1 + o\n      } else if (this.e.v < 0) {\n        e = 0 + o\n      } else {\n        e = this.e.v + o\n      }\n\n      if (s > e) {\n        var _s = s\n        s = e\n        e = _s\n      }\n      s = Math.round(s * 10000) * 0.0001\n      e = Math.round(e * 10000) * 0.0001\n      this.sValue = s\n      this.eValue = e\n    } else {\n      s = this.sValue\n      e = this.eValue\n    }\n    var shapePaths\n    var i\n    var len = this.shapes.length\n    var j\n    var jLen\n    var pathsData\n    var pathData\n    var totalShapeLength\n    var totalModifierLength = 0\n\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes()\n        this.shapes[i].shape._mdf = true\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection\n        if (this._mdf) {\n          this.shapes[i].pathsData.length = 0\n        }\n      }\n    } else if (!((e === 1 && s === 0) || (e === 0 && s === 1))) {\n      var segments = []\n      var shapeData\n      var localShapeCollection\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]\n        // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection\n        } else {\n          shapePaths = shapeData.shape.paths\n          jLen = shapePaths._length\n          totalShapeLength = 0\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData)\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j])\n              pathsData.push(pathData)\n              totalShapeLength += pathData.totalLength\n            }\n            shapeData.totalShapeLength = totalShapeLength\n            shapeData.pathsData = pathsData\n          }\n\n          totalModifierLength += totalShapeLength\n          shapeData.shape._mdf = true\n        }\n      }\n      var shapeS = s\n      var shapeE = e\n      var addedLength = 0\n      var edges\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i]\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection\n          localShapeCollection.releaseShapes()\n          // if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength)\n            addedLength += shapeData.totalShapeLength\n          } else {\n            edges = [[shapeS, shapeE]]\n          }\n          jLen = edges.length\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0]\n            shapeE = edges[j][1]\n            segments.length = 0\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE,\n              })\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1),\n              })\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength,\n              })\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1),\n              })\n            }\n            var newShapesData = this.addShapes(shapeData, segments[0])\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1]\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop()\n                  this.addPaths(newShapesData, localShapeCollection)\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape)\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection)\n                  newShapesData = this.addShapes(shapeData, segments[1])\n                }\n              }\n              this.addPaths(newShapesData, localShapeCollection)\n            }\n          }\n          shapeData.shape.paths = localShapeCollection\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        // Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\n        // Don't remove this even if it's losing cached info.\n        this.shapes[i].pathsData.length = 0\n        this.shapes[i].shape._mdf = true\n      }\n    }\n  }\n\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i\n    var len = newPaths.length\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i])\n    }\n  }\n\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos)\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1)\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], 'v', pos)\n    }\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1)\n  }\n\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], 'o', pos)\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1)\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], 'v', pos)\n    }\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1)\n  }\n\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData\n    var shapePaths = shapeData.shape.paths.shapes\n    var i\n    var len = shapeData.shape.paths._length\n    var j\n    var jLen\n    var addedLength = 0\n    var currentLengthData\n    var segmentCount\n    var lengths\n    var segment\n    var shapes = []\n    var initPos\n    var newShape = true\n    if (!shapePath) {\n      shapePath = shapePool.newElement()\n      segmentCount = 0\n      initPos = 0\n    } else {\n      segmentCount = shapePath._length\n      initPos = shapePath._length\n    }\n    shapes.push(shapePath)\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths\n      shapePath.c = shapePaths[i].c\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1]\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength\n          shapePath.c = false\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false\n          break\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[j],\n              shapePaths[i].v[j],\n              shapePath,\n              segmentCount,\n              newShape,\n            )\n            newShape = false\n          } else {\n            segment = bez.getNewSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].v[j],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[j],\n              (shapeSegment.s - addedLength) / currentLengthData.addedLength,\n              (shapeSegment.e - addedLength) / currentLengthData.addedLength,\n              lengths[j - 1],\n            )\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape)\n            // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n            newShape = false\n            shapePath.c = false\n          }\n          addedLength += currentLengthData.addedLength\n          segmentCount += 1\n        }\n      }\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1]\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[0],\n              shapePaths[i].v[0],\n              shapePath,\n              segmentCount,\n              newShape,\n            )\n            newShape = false\n          } else {\n            segment = bez.getNewSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].v[0],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[0],\n              (shapeSegment.s - addedLength) / segmentLength,\n              (shapeSegment.e - addedLength) / segmentLength,\n              lengths[j - 1],\n            )\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape)\n            // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n            newShape = false\n            shapePath.c = false\n          }\n        } else {\n          shapePath.c = false\n        }\n        addedLength += currentLengthData.addedLength\n        segmentCount += 1\n      }\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos)\n        shapePath.setXYAt(\n          shapePath.v[shapePath._length - 1][0],\n          shapePath.v[shapePath._length - 1][1],\n          'o',\n          shapePath._length - 1,\n        )\n      }\n      if (addedLength > shapeSegment.e) {\n        break\n      }\n      if (i < len - 1) {\n        shapePath = shapePool.newElement()\n        newShape = true\n        shapes.push(shapePath)\n        segmentCount = 0\n      }\n    }\n    return shapes\n  }\n\n  function PuckerAndBloatModifier() {}\n  extendPrototype([ShapeModifier], PuckerAndBloatModifier)\n  PuckerAndBloatModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys\n    this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this)\n    this._isAnimated = !!this.amount.effectsSequence.length\n  }\n\n  PuckerAndBloatModifier.prototype.processPath = function (path, amount) {\n    var percent = amount / 100\n    var centerPoint = [0, 0]\n    var pathLength = path._length\n    var i = 0\n    for (i = 0; i < pathLength; i += 1) {\n      centerPoint[0] += path.v[i][0]\n      centerPoint[1] += path.v[i][1]\n    }\n    centerPoint[0] /= pathLength\n    centerPoint[1] /= pathLength\n    var clonedPath = shapePool.newElement()\n    clonedPath.c = path.c\n    var vX\n    var vY\n    var oX\n    var oY\n    var iX\n    var iY\n    for (i = 0; i < pathLength; i += 1) {\n      vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent\n      vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent\n      oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent\n      oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent\n      iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent\n      iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent\n      clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i)\n    }\n    return clonedPath\n  }\n\n  PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths\n    var i\n    var len = this.shapes.length\n    var j\n    var jLen\n    var amount = this.amount.v\n\n    if (amount !== 0) {\n      var shapeData\n      var localShapeCollection\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]\n        localShapeCollection = shapeData.localShapeCollection\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes()\n          shapeData.shape._mdf = true\n          shapePaths = shapeData.shape.paths.shapes\n          jLen = shapeData.shape.paths._length\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amount))\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false\n    }\n  }\n\n  const TransformPropertyFactory = (function () {\n    var defaultVector = [0, 0]\n\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf\n      this.iterateDynamicProperties()\n      this._mdf = this._mdf || _mdf\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2])\n      }\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2])\n      }\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v)\n      }\n      if (this.r) {\n        mat.rotate(-this.r.v)\n      } else {\n        mat\n          .rotateZ(-this.rz.v)\n          .rotateY(this.ry.v)\n          .rotateX(this.rx.v)\n          .rotateZ(-this.or.v[2])\n          .rotateY(this.or.v[1])\n          .rotateX(this.or.v[0])\n      }\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v)\n        } else {\n          mat.translate(this.px.v, this.py.v, 0)\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2])\n      }\n    }\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return\n      }\n      if (this._isDirty) {\n        this.precalculateMatrix()\n        this._isDirty = false\n      }\n\n      this.iterateDynamicProperties()\n\n      if (this._mdf || forceRender) {\n        var frameRate\n        this.v.cloneFromProps(this.pre.props)\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2])\n        }\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2])\n        }\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v)\n        }\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v)\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v\n            .rotateZ(-this.rz.v)\n            .rotateY(this.ry.v)\n            .rotateX(this.rx.v)\n            .rotateZ(-this.or.v[2])\n            .rotateY(this.or.v[1])\n            .rotateX(this.or.v[0])\n        }\n        if (this.autoOriented) {\n          var v1\n          var v2\n          frameRate = this.elem.globalData.frameRate\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0)\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0)\n            } else if (\n              this.p._caching.lastFrame + this.p.offsetTime >=\n              this.p.keyframes[this.p.keyframes.length - 1].t\n            ) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0)\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0)\n            } else {\n              v1 = this.p.pv\n              v2 = this.p.getValueAtTime(\n                (this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate,\n                this.p.offsetTime,\n              )\n            }\n          } else if (\n            this.px &&\n            this.px.keyframes &&\n            this.py.keyframes &&\n            this.px.getValueAtTime &&\n            this.py.getValueAtTime\n          ) {\n            v1 = []\n            v2 = []\n            var px = this.px\n            var py = this.py\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0)\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0)\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0)\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0)\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0)\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0)\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0)\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0)\n            } else {\n              v1 = [px.pv, py.pv]\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime)\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime)\n            }\n          } else {\n            v2 = defaultVector\n            v1 = v2\n          }\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]))\n        }\n        if (this.data.p && this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v)\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0)\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2])\n        }\n      }\n      this.frameId = this.elem.globalData.frameId\n    }\n\n    function precalculateMatrix() {\n      if (!this.a.k) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2])\n        this.appliedTransformations = 1\n      } else {\n        return\n      }\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2])\n        this.appliedTransformations = 2\n      } else {\n        return\n      }\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v)\n          this.appliedTransformations = 3\n        } else {\n          return\n        }\n      }\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v)\n          this.appliedTransformations = 4\n        }\n      } else if (\n        !this.rz.effectsSequence.length &&\n        !this.ry.effectsSequence.length &&\n        !this.rx.effectsSequence.length &&\n        !this.or.effectsSequence.length\n      ) {\n        this.pre\n          .rotateZ(-this.rz.v)\n          .rotateY(this.ry.v)\n          .rotateX(this.rx.v)\n          .rotateZ(-this.or.v[2])\n          .rotateY(this.or.v[1])\n          .rotateX(this.or.v[0])\n        this.appliedTransformations = 4\n      }\n    }\n\n    function autoOrient() {\n      //\n      // var prevP = this.getValueAtTime();\n    }\n\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop)\n      this.elem.addDynamicProperty(prop)\n      this._isDirty = true\n    }\n\n    function TransformProperty(elem, data, container) {\n      this.elem = elem\n      this.frameId = -1\n      this.propType = 'transform'\n      this.data = data\n      this.v = new Matrix()\n      // Precalculated matrix with non animated properties\n      this.pre = new Matrix()\n      this.appliedTransformations = 0\n      this.initDynamicPropertyContainer(container || elem)\n      if (data.p && data.p.s) {\n        this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this)\n        this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this)\n        if (data.p.z) {\n          this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this)\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem, data.p || { k: [0, 0, 0] }, 1, 0, this)\n      }\n      if (data.rx) {\n        this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this)\n        this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this)\n        this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this)\n        if (data.or.k[0].ti) {\n          var i\n          var len = data.or.k.length\n          for (i = 0; i < len; i += 1) {\n            data.or.k[i].to = null\n            data.or.k[i].ti = null\n          }\n        }\n        this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this)\n        // sh Indicates it needs to be capped between -180 and 180\n        this.or.sh = true\n      } else {\n        this.r = PropertyFactory.getProp(elem, data.r || { k: 0 }, 0, degToRads, this)\n      }\n      if (data.sk) {\n        this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this)\n        this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this)\n      }\n      this.a = PropertyFactory.getProp(elem, data.a || { k: [0, 0, 0] }, 1, 0, this)\n      this.s = PropertyFactory.getProp(elem, data.s || { k: [100, 100, 100] }, 1, 0.01, this)\n      // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\n      if (data.o) {\n        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem)\n      } else {\n        this.o = { _mdf: false, v: 1 }\n      }\n      this._isDirty = true\n      if (!this.dynamicProperties.length) {\n        this.getValue(true)\n      }\n    }\n\n    TransformProperty.prototype = {\n      applyToMatrix: applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix: precalculateMatrix,\n      autoOrient: autoOrient,\n    }\n\n    extendPrototype([DynamicPropertyContainer], TransformProperty)\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty\n\n    function getTransformProperty(elem, data, container) {\n      return new TransformProperty(elem, data, container)\n    }\n\n    return {\n      getTransformProperty: getTransformProperty,\n    }\n  })()\n\n  function RepeaterModifier() {}\n  extendPrototype([ShapeModifier], RepeaterModifier)\n\n  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys\n    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this)\n    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this)\n    this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this)\n    this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this)\n    this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this)\n    this.data = data\n    if (!this.dynamicProperties.length) {\n      this.getValue(true)\n    }\n    this._isAnimated = !!this.dynamicProperties.length\n    this.pMatrix = new Matrix()\n    this.rMatrix = new Matrix()\n    this.sMatrix = new Matrix()\n    this.tMatrix = new Matrix()\n    this.matrix = new Matrix()\n  }\n\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\n    var dir = inv ? -1 : 1\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc)\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc)\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2])\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2])\n    rMatrix.rotate(-transform.r.v * dir * perc)\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2])\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2])\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY)\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2])\n  }\n\n  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\n    this.elem = elem\n    this.arr = arr\n    this.pos = pos\n    this.elemsData = elemsData\n    this._currentCopies = 0\n    this._elements = []\n    this._groups = []\n    this.frameId = -1\n    this.initDynamicPropertyContainer(elem)\n    this.initModifierProperties(elem, arr[pos])\n    while (pos > 0) {\n      pos -= 1\n      // this._elements.unshift(arr.splice(pos,1)[0]);\n      this._elements.unshift(arr[pos])\n    }\n    if (this.dynamicProperties.length) {\n      this.k = true\n    } else {\n      this.getValue(true)\n    }\n  }\n\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i\n    var len = elements.length\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false\n      if (elements[i].ty === 'gr') {\n        this.resetElements(elements[i].it)\n      }\n    }\n  }\n\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var newElements = JSON.parse(JSON.stringify(elements))\n    this.resetElements(newElements)\n    return newElements\n  }\n\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i\n    var len = elements.length\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag\n      if (elements[i].ty === 'gr') {\n        this.changeGroupRender(elements[i].it, renderFlag)\n      }\n    }\n  }\n\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items\n    var itemsTransform\n    var i\n    var dir\n    var cont\n    var hasReloaded = false\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v)\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: 'gr',\n          }\n          group.it.push({\n            a: { a: 0, ix: 1, k: [0, 0] },\n            nm: 'Transform',\n            o: { a: 0, ix: 7, k: 100 },\n            p: { a: 0, ix: 2, k: [0, 0] },\n            r: {\n              a: 1,\n              ix: 6,\n              k: [\n                { s: 0, e: 0, t: 0 },\n                { s: 0, e: 0, t: 1 },\n              ],\n            },\n            s: { a: 0, ix: 3, k: [100, 100] },\n            sa: { a: 0, ix: 5, k: 0 },\n            sk: { a: 0, ix: 4, k: 0 },\n            ty: 'tr',\n          })\n\n          this.arr.splice(0, 0, group)\n          this._groups.splice(0, 0, group)\n          this._currentCopies += 1\n        }\n        this.elem.reloadShapes()\n        hasReloaded = true\n      }\n      cont = 0\n      var renderFlag\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies\n        this._groups[i]._render = renderFlag\n        this.changeGroupRender(this._groups[i].it, renderFlag)\n        if (!renderFlag) {\n          var elems = this.elemsData[i].it\n          var transformData = elems[elems.length - 1]\n          if (transformData.transform.op.v !== 0) {\n            transformData.transform.op._mdf = true\n            transformData.transform.op.v = 0\n          } else {\n            transformData.transform.op._mdf = false\n          }\n        }\n        cont += 1\n      }\n\n      this._currentCopies = copies\n      /// /\n\n      var offset = this.o.v\n      var offsetModulo = offset % 1\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset)\n      var pProps = this.pMatrix.props\n      var rProps = this.rMatrix.props\n      var sProps = this.sMatrix.props\n      this.pMatrix.reset()\n      this.rMatrix.reset()\n      this.sMatrix.reset()\n      this.tMatrix.reset()\n      this.matrix.reset()\n      var iteration = 0\n\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false)\n          iteration += 1\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false)\n          iteration += offsetModulo\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true)\n          iteration -= 1\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true)\n          iteration -= offsetModulo\n        }\n      }\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1\n      dir = this.data.m === 1 ? 1 : -1\n      cont = this._currentCopies\n      var j\n      var jLen\n      while (cont) {\n        items = this.elemsData[i].it\n        itemsTransform = items[items.length - 1].transform.mProps.v.props\n        jLen = itemsTransform.length\n        items[items.length - 1].transform.mProps._mdf = true\n        items[items.length - 1].transform.op._mdf = true\n        items[items.length - 1].transform.op.v =\n          this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1))\n\n        if (iteration !== 0) {\n          if ((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false)\n          }\n          this.matrix.transform(\n            rProps[0],\n            rProps[1],\n            rProps[2],\n            rProps[3],\n            rProps[4],\n            rProps[5],\n            rProps[6],\n            rProps[7],\n            rProps[8],\n            rProps[9],\n            rProps[10],\n            rProps[11],\n            rProps[12],\n            rProps[13],\n            rProps[14],\n            rProps[15],\n          )\n          this.matrix.transform(\n            sProps[0],\n            sProps[1],\n            sProps[2],\n            sProps[3],\n            sProps[4],\n            sProps[5],\n            sProps[6],\n            sProps[7],\n            sProps[8],\n            sProps[9],\n            sProps[10],\n            sProps[11],\n            sProps[12],\n            sProps[13],\n            sProps[14],\n            sProps[15],\n          )\n          this.matrix.transform(\n            pProps[0],\n            pProps[1],\n            pProps[2],\n            pProps[3],\n            pProps[4],\n            pProps[5],\n            pProps[6],\n            pProps[7],\n            pProps[8],\n            pProps[9],\n            pProps[10],\n            pProps[11],\n            pProps[12],\n            pProps[13],\n            pProps[14],\n            pProps[15],\n          )\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j]\n          }\n          this.matrix.reset()\n        } else {\n          this.matrix.reset()\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j]\n          }\n        }\n        iteration += 1\n        cont -= 1\n        i += dir\n      }\n    } else {\n      cont = this._currentCopies\n      i = 0\n      dir = 1\n      while (cont) {\n        items = this.elemsData[i].it\n        itemsTransform = items[items.length - 1].transform.mProps.v.props\n        items[items.length - 1].transform.mProps._mdf = false\n        items[items.length - 1].transform.op._mdf = false\n        cont -= 1\n        i += dir\n      }\n    }\n    return hasReloaded\n  }\n\n  RepeaterModifier.prototype.addShape = function () {}\n\n  function RoundCornersModifier() {}\n  extendPrototype([ShapeModifier], RoundCornersModifier)\n  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys\n    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this)\n    this._isAnimated = !!this.rd.effectsSequence.length\n  }\n\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var clonedPath = shapePool.newElement()\n    clonedPath.c = path.c\n    var i\n    var len = path._length\n    var currentV\n    var currentI\n    var currentO\n    var closerV\n    var distance\n    var newPosPerc\n    var index = 0\n    var vX\n    var vY\n    var oX\n    var oY\n    var iX\n    var iY\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i]\n      currentO = path.o[i]\n      currentI = path.i[i]\n      if (\n        currentV[0] === currentO[0] &&\n        currentV[1] === currentO[1] &&\n        currentV[0] === currentI[0] &&\n        currentV[1] === currentI[1]\n      ) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index)\n          /* clonedPath.v[index] = currentV;\n                clonedPath.o[index] = currentO;\n                clonedPath.i[index] = currentI; */\n          index += 1\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1]\n          } else {\n            closerV = path.v[i - 1]\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2))\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0\n          iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc\n          vX = iX\n          iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc\n          vY = iY\n          oX = vX - (vX - currentV[0]) * roundCorner\n          oY = vY - (vY - currentV[1]) * roundCorner\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index)\n          index += 1\n\n          if (i === len - 1) {\n            closerV = path.v[0]\n          } else {\n            closerV = path.v[i + 1]\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2))\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0\n          oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc\n          vX = oX\n          oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc\n          vY = oY\n          iX = vX - (vX - currentV[0]) * roundCorner\n          iY = vY - (vY - currentV[1]) * roundCorner\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index)\n          index += 1\n        }\n      } else {\n        clonedPath.setTripleAt(\n          path.v[i][0],\n          path.v[i][1],\n          path.o[i][0],\n          path.o[i][1],\n          path.i[i][0],\n          path.i[i][1],\n          index,\n        )\n        index += 1\n      }\n    }\n    return clonedPath\n  }\n\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths\n    var i\n    var len = this.shapes.length\n    var j\n    var jLen\n    var rd = this.rd.v\n\n    if (rd !== 0) {\n      var shapeData\n      var localShapeCollection\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]\n        localShapeCollection = shapeData.localShapeCollection\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes()\n          shapeData.shape._mdf = true\n          shapePaths = shapeData.shape.paths.shapes\n          jLen = shapeData.shape.paths._length\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd))\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false\n    }\n  }\n\n  function getFontProperties(fontData) {\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : []\n\n    var fWeight = 'normal'\n    var fStyle = 'normal'\n    var len = styles.length\n    var styleName\n    for (var i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase()\n      switch (styleName) {\n        case 'italic':\n          fStyle = 'italic'\n          break\n        case 'bold':\n          fWeight = '700'\n          break\n        case 'black':\n          fWeight = '900'\n          break\n        case 'medium':\n          fWeight = '500'\n          break\n        case 'regular':\n        case 'normal':\n          fWeight = '400'\n          break\n        case 'light':\n        case 'thin':\n          fWeight = '200'\n          break\n        default:\n          break\n      }\n    }\n\n    return {\n      style: fStyle,\n      weight: fontData.fWeight || fWeight,\n    }\n  }\n\n  const FontManager = (function () {\n    var maxWaitingTime = 5000\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: [],\n      data: {\n        shapes: [],\n      },\n    }\n    var combinedCharacters = []\n    // Hindi characters\n    combinedCharacters = combinedCharacters.concat([\n      2304,\n      2305,\n      2306,\n      2307,\n      2362,\n      2363,\n      2364,\n      2364,\n      2366,\n      2367,\n      2368,\n      2369,\n      2370,\n      2371,\n      2372,\n      2373,\n      2374,\n      2375,\n      2376,\n      2377,\n      2378,\n      2379,\n      2380,\n      2381,\n      2382,\n      2383,\n      2387,\n      2388,\n      2389,\n      2390,\n      2391,\n      2402,\n      2403,\n    ])\n\n    var surrogateModifiers = ['d83cdffb', 'd83cdffc', 'd83cdffd', 'd83cdffe', 'd83cdfff']\n\n    var zeroWidthJoiner = [65039, 8205]\n\n    function trimFontOptions(font) {\n      var familyArray = font.split(',')\n      var i\n      var len = familyArray.length\n      var enabledFamilies = []\n      for (i = 0; i < len; i += 1) {\n        if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {\n          enabledFamilies.push(familyArray[i])\n        }\n      }\n      return enabledFamilies.join(',')\n    }\n\n    function setUpNode(font, family) {\n      var parentNode = createTag('span')\n      // Node is invisible to screen readers.\n      parentNode.setAttribute('aria-hidden', true)\n      parentNode.style.fontFamily = family\n      var node = createTag('span')\n      // Characters that vary significantly among different fonts\n      node.innerText = 'giItT1WQy@!-/#'\n      // Visible - so we can measure it - but not on the screen\n      parentNode.style.position = 'absolute'\n      parentNode.style.left = '-10000px'\n      parentNode.style.top = '-10000px'\n      // Large font size makes even subtle changes obvious\n      parentNode.style.fontSize = '300px'\n      // Reset any font properties\n      parentNode.style.fontVariant = 'normal'\n      parentNode.style.fontStyle = 'normal'\n      parentNode.style.fontWeight = 'normal'\n      parentNode.style.letterSpacing = '0'\n      parentNode.appendChild(node)\n      document.body.appendChild(parentNode)\n\n      // Remember width with no applied web font\n      var width = node.offsetWidth\n      node.style.fontFamily = trimFontOptions(font) + ', ' + family\n      return { node: node, w: width, parent: parentNode }\n    }\n\n    function checkLoadedFonts() {\n      var i\n      var len = this.fonts.length\n      var node\n      var w\n      var loadedCount = len\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1\n        } else if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true\n        } else {\n          node = this.fonts[i].monoCase.node\n          w = this.fonts[i].monoCase.w\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1\n            this.fonts[i].loaded = true\n          } else {\n            node = this.fonts[i].sansCase.node\n            w = this.fonts[i].sansCase.w\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1\n              this.fonts[i].loaded = true\n            }\n          }\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent)\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent)\n          }\n        }\n      }\n\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFontsBinded, 20)\n      } else {\n        setTimeout(this.setIsLoadedBinded, 10)\n      }\n    }\n\n    function createHelper(fontData, def) {\n      var engine = document.body && def ? 'svg' : 'canvas'\n      var helper\n      var fontProps = getFontProperties(fontData)\n      if (engine === 'svg') {\n        var tHelper = createNS('text')\n        tHelper.style.fontSize = '100px'\n        // tHelper.style.fontFamily = fontData.fFamily;\n        tHelper.setAttribute('font-family', fontData.fFamily)\n        tHelper.setAttribute('font-style', fontProps.style)\n        tHelper.setAttribute('font-weight', fontProps.weight)\n        tHelper.textContent = '1'\n        if (fontData.fClass) {\n          tHelper.style.fontFamily = 'inherit'\n          tHelper.setAttribute('class', fontData.fClass)\n        } else {\n          tHelper.style.fontFamily = fontData.fFamily\n        }\n        def.appendChild(tHelper)\n        helper = tHelper\n      } else {\n        var tCanvasHelper = new OffscreenCanvas(500, 500).getContext('2d')\n        tCanvasHelper.font = fontProps.style + ' ' + fontProps.weight + ' 100px ' + fontData.fFamily\n        helper = tCanvasHelper\n      }\n      function measure(text) {\n        if (engine === 'svg') {\n          helper.textContent = text\n          return helper.getComputedTextLength()\n        }\n        return helper.measureText(text).width\n      }\n      return {\n        measureText: measure,\n      }\n    }\n\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true\n        return\n      }\n      if (this.chars) {\n        this.isLoaded = true\n        this.fonts = fontData.list\n        return\n      }\n      if (!document.body) {\n        this.isLoaded = true\n        fontData.list.forEach((data) => {\n          data.helper = createHelper(data)\n          data.cache = {}\n        })\n        this.fonts = fontData.list\n        return\n      }\n\n      var fontArr = fontData.list\n      var i\n      var len = fontArr.length\n      var _pendingFonts = len\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true\n        var loadedSelector\n        var j\n        fontArr[i].loaded = false\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace')\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif')\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true\n          _pendingFonts -= 1\n        } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll(\n            'style[f-forigin=\"p\"][f-family=\"' +\n              fontArr[i].fFamily +\n              '\"], style[f-origin=\"3\"][f-family=\"' +\n              fontArr[i].fFamily +\n              '\"]',\n          )\n\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false\n          }\n\n          if (shouldLoadFont) {\n            var s = createTag('style')\n            s.setAttribute('f-forigin', fontArr[i].fOrigin)\n            s.setAttribute('f-origin', fontArr[i].origin)\n            s.setAttribute('f-family', fontArr[i].fFamily)\n            s.type = 'text/css'\n            s.innerText =\n              '@font-face {font-family: ' +\n              fontArr[i].fFamily +\n              \"; font-style: normal; src: url('\" +\n              fontArr[i].fPath +\n              \"');}\"\n            defs.appendChild(s)\n          }\n        } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]')\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              // Font is already loaded\n              shouldLoadFont = false\n            }\n          }\n\n          if (shouldLoadFont) {\n            var l = createTag('link')\n            l.setAttribute('f-forigin', fontArr[i].fOrigin)\n            l.setAttribute('f-origin', fontArr[i].origin)\n            l.type = 'text/css'\n            l.rel = 'stylesheet'\n            l.href = fontArr[i].fPath\n            document.body.appendChild(l)\n          }\n        } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]')\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              // Font is already loaded\n              shouldLoadFont = false\n            }\n          }\n\n          if (shouldLoadFont) {\n            var sc = createTag('link')\n            sc.setAttribute('f-forigin', fontArr[i].fOrigin)\n            sc.setAttribute('f-origin', fontArr[i].origin)\n            sc.setAttribute('rel', 'stylesheet')\n            sc.setAttribute('href', fontArr[i].fPath)\n            defs.appendChild(sc)\n          }\n        }\n        fontArr[i].helper = createHelper(fontArr[i], defs)\n        fontArr[i].cache = {}\n        this.fonts.push(fontArr[i])\n      }\n      if (_pendingFonts === 0) {\n        this.isLoaded = true\n      } else {\n        // On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\n        // Adding this timeout seems to fix it\n        setTimeout(this.checkLoadedFonts.bind(this), 100)\n      }\n    }\n\n    function addChars(chars) {\n      if (!chars) {\n        return\n      }\n      if (!this.chars) {\n        this.chars = []\n      }\n      var i\n      var len = chars.length\n      var j\n      var jLen = this.chars.length\n      var found\n      for (i = 0; i < len; i += 1) {\n        j = 0\n        found = false\n        while (j < jLen) {\n          if (\n            this.chars[j].style === chars[i].style &&\n            this.chars[j].fFamily === chars[i].fFamily &&\n            this.chars[j].ch === chars[i].ch\n          ) {\n            found = true\n          }\n          j += 1\n        }\n        if (!found) {\n          this.chars.push(chars[i])\n          jLen += 1\n        }\n      }\n    }\n\n    function getCharData(char, style, font) {\n      var i = 0\n      var len = this.chars.length\n      while (i < len) {\n        if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i]\n        }\n        i += 1\n      }\n      if (\n        ((typeof char === 'string' && char.charCodeAt(0) !== 13) || !char) &&\n        console &&\n        console.warn && // eslint-disable-line no-console\n        !this._warned\n      ) {\n        this._warned = true\n        console.warn('Missing character from exported characters list: ', char, style, font) // eslint-disable-line no-console\n      }\n      return emptyChar\n    }\n\n    function measureText(char, fontName, size) {\n      var fontData = this.getFontByName(fontName)\n      var index = char.charCodeAt(0)\n      if (!fontData.cache[index + 1]) {\n        var tHelper = fontData.helper\n        if (char === ' ') {\n          var doubleSize = tHelper.measureText('|' + char + '|')\n          var singleSize = tHelper.measureText('||')\n          fontData.cache[index + 1] = (doubleSize - singleSize) / 100\n        } else {\n          fontData.cache[index + 1] = tHelper.measureText(char) / 100\n        }\n      }\n      return fontData.cache[index + 1] * size\n    }\n\n    function getFontByName(name) {\n      var i = 0\n      var len = this.fonts.length\n      while (i < len) {\n        if (this.fonts[i].fName === name) {\n          return this.fonts[i]\n        }\n        i += 1\n      }\n      return this.fonts[0]\n    }\n\n    function isModifier(firstCharCode, secondCharCode) {\n      var sum = firstCharCode.toString(16) + secondCharCode.toString(16)\n      return surrogateModifiers.indexOf(sum) !== -1\n    }\n\n    function isZeroWidthJoiner(firstCharCode, secondCharCode) {\n      if (!secondCharCode) {\n        return firstCharCode === zeroWidthJoiner[1]\n      }\n      return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1]\n    }\n\n    function isCombinedCharacter(char) {\n      return combinedCharacters.indexOf(char) !== -1\n    }\n\n    function setIsLoaded() {\n      this.isLoaded = true\n    }\n\n    var Font = function () {\n      this.fonts = []\n      this.chars = null\n      this.typekitLoaded = 0\n      this.isLoaded = false\n      this._warned = false\n      this.initTime = Date.now()\n      this.setIsLoadedBinded = this.setIsLoaded.bind(this)\n      this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this)\n    }\n    Font.isModifier = isModifier\n    Font.isZeroWidthJoiner = isZeroWidthJoiner\n    Font.isCombinedCharacter = isCombinedCharacter\n\n    var fontPrototype = {\n      addChars: addChars,\n      addFonts: addFonts,\n      getCharData: getCharData,\n      getFontByName: getFontByName,\n      measureText: measureText,\n      checkLoadedFonts: checkLoadedFonts,\n      setIsLoaded: setIsLoaded,\n    }\n\n    Font.prototype = fontPrototype\n\n    return Font\n  })()\n\n  function RenderableElement() {}\n\n  RenderableElement.prototype = {\n    initRenderable: function () {\n      // layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\n      this.isInRange = false\n      // layer's display state\n      this.hidden = false\n      // If layer's transparency equals 0, it can be hidden\n      this.isTransparent = false\n      // list of animated components\n      this.renderableComponents = []\n    },\n    addRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component)\n      }\n    },\n    removeRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1)\n      }\n    },\n    prepareRenderableFrame: function (num) {\n      this.checkLayerLimits(num)\n    },\n    checkTransparency: function () {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true\n          this.hide()\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false\n        this.show()\n      }\n    },\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     *\n     */\n    checkLayerLimits: function (num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true\n          this._mdf = true\n          this.isInRange = true\n          this.show()\n        }\n      } else if (this.isInRange !== false) {\n        this.globalData._mdf = true\n        this.isInRange = false\n        this.hide()\n      }\n    },\n    renderRenderable: function () {\n      var i\n      var len = this.renderableComponents.length\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame)\n      }\n      /* this.maskManager.renderFrame(this.finalTransform.mat);\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame); */\n    },\n    sourceRectAtTime: function () {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100,\n      }\n    },\n    getLayerSize: function () {\n      if (this.data.ty === 5) {\n        return { w: this.data.textData.width, h: this.data.textData.height }\n      }\n      return { w: this.data.width, h: this.data.height }\n    },\n  }\n\n  const MaskManagerInterface = (function () {\n    function MaskInterface(mask, data) {\n      this._mask = mask\n      this._data = data\n    }\n    Object.defineProperty(MaskInterface.prototype, 'maskPath', {\n      get: function () {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue()\n        }\n        return this._mask.prop\n      },\n    })\n    Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {\n      get: function () {\n        if (this._mask.op.k) {\n          this._mask.op.getValue()\n        }\n        return this._mask.op.v * 100\n      },\n    })\n\n    var MaskManager = function (maskManager) {\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length)\n      var i\n      var len = maskManager.viewData.length\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i])\n      }\n\n      var maskFunction = function (name) {\n        i = 0\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name) {\n            return _masksInterfaces[i]\n          }\n          i += 1\n        }\n        return null\n      }\n      return maskFunction\n    }\n    return MaskManager\n  })()\n\n  const ExpressionPropertyInterface = (function () {\n    var defaultUnidimensionalValue = { pv: 0, v: 0, mult: 1 }\n    var defaultMultidimensionalValue = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 }\n\n    function completeProperty(expressionValue, property, type) {\n      Object.defineProperty(expressionValue, 'velocity', {\n        get: function () {\n          return property.getVelocityAtTime(property.comp.currentFrame)\n        },\n      })\n      expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0\n        }\n        var value = ''\n        if ('s' in property.keyframes[pos - 1]) {\n          value = property.keyframes[pos - 1].s\n        } else if ('e' in property.keyframes[pos - 2]) {\n          value = property.keyframes[pos - 2].e\n        } else {\n          value = property.keyframes[pos - 2].s\n        }\n        var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value) // eslint-disable-line no-new-wrappers\n        valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate\n        valueProp.value = type === 'unidimensional' ? value[0] : value\n        return valueProp\n      }\n      expressionValue.valueAtTime = property.getValueAtTime\n      expressionValue.speedAtTime = property.getSpeedAtTime\n      expressionValue.velocityAtTime = property.getVelocityAtTime\n      expressionValue.propertyGroup = property.propertyGroup\n    }\n\n    function UnidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultUnidimensionalValue\n      }\n      var mult = 1 / property.mult\n      var val = property.pv * mult\n      var expressionValue = new Number(val) // eslint-disable-line no-new-wrappers\n      expressionValue.value = val\n      completeProperty(expressionValue, property, 'unidimensional')\n\n      return function () {\n        if (property.k) {\n          property.getValue()\n        }\n        val = property.v * mult\n        if (expressionValue.value !== val) {\n          expressionValue = new Number(val) // eslint-disable-line no-new-wrappers\n          expressionValue.value = val\n          completeProperty(expressionValue, property, 'unidimensional')\n        }\n        return expressionValue\n      }\n    }\n\n    function MultidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultMultidimensionalValue\n      }\n      var mult = 1 / property.mult\n      var len = (property.data && property.data.l) || property.pv.length\n      var expressionValue = createTypedArray('float32', len)\n      var arrValue = createTypedArray('float32', len)\n      expressionValue.value = arrValue\n      completeProperty(expressionValue, property, 'multidimensional')\n\n      return function () {\n        if (property.k) {\n          property.getValue()\n        }\n        for (var i = 0; i < len; i += 1) {\n          arrValue[i] = property.v[i] * mult\n          expressionValue[i] = arrValue[i]\n        }\n        return expressionValue\n      }\n    }\n\n    // TODO: try to avoid using this getter\n    function defaultGetter() {\n      return defaultUnidimensionalValue\n    }\n\n    return function (property) {\n      if (!property) {\n        return defaultGetter\n      }\n      if (property.propType === 'unidimensional') {\n        return UnidimensionalPropertyInterface(property)\n      }\n      return MultidimensionalPropertyInterface(property)\n    }\n  })()\n\n  const TransformExpressionInterface = (function () {\n    return function (transform) {\n      function _thisFunction(name) {\n        switch (name) {\n          case 'scale':\n          case 'Scale':\n          case 'ADBE Scale':\n          case 6:\n            return _thisFunction.scale\n          case 'rotation':\n          case 'Rotation':\n          case 'ADBE Rotation':\n          case 'ADBE Rotate Z':\n          case 10:\n            return _thisFunction.rotation\n          case 'ADBE Rotate X':\n            return _thisFunction.xRotation\n          case 'ADBE Rotate Y':\n            return _thisFunction.yRotation\n          case 'position':\n          case 'Position':\n          case 'ADBE Position':\n          case 2:\n            return _thisFunction.position\n          case 'ADBE Position_0':\n            return _thisFunction.xPosition\n          case 'ADBE Position_1':\n            return _thisFunction.yPosition\n          case 'ADBE Position_2':\n            return _thisFunction.zPosition\n          case 'anchorPoint':\n          case 'AnchorPoint':\n          case 'Anchor Point':\n          case 'ADBE AnchorPoint':\n          case 1:\n            return _thisFunction.anchorPoint\n          case 'opacity':\n          case 'Opacity':\n          case 11:\n            return _thisFunction.opacity\n          default:\n            return null\n        }\n      }\n      Object.defineProperty(_thisFunction, 'rotation', {\n        get: ExpressionPropertyInterface(transform.r || transform.rz),\n      })\n\n      Object.defineProperty(_thisFunction, 'zRotation', {\n        get: ExpressionPropertyInterface(transform.rz || transform.r),\n      })\n\n      Object.defineProperty(_thisFunction, 'xRotation', {\n        get: ExpressionPropertyInterface(transform.rx),\n      })\n\n      Object.defineProperty(_thisFunction, 'yRotation', {\n        get: ExpressionPropertyInterface(transform.ry),\n      })\n      Object.defineProperty(_thisFunction, 'scale', {\n        get: ExpressionPropertyInterface(transform.s),\n      })\n      var _px\n      var _py\n      var _pz\n      var _transformFactory\n      if (transform.p) {\n        _transformFactory = ExpressionPropertyInterface(transform.p)\n      } else {\n        _px = ExpressionPropertyInterface(transform.px)\n        _py = ExpressionPropertyInterface(transform.py)\n        if (transform.pz) {\n          _pz = ExpressionPropertyInterface(transform.pz)\n        }\n      }\n      Object.defineProperty(_thisFunction, 'position', {\n        get: function () {\n          if (transform.p) {\n            return _transformFactory()\n          }\n          return [_px(), _py(), _pz ? _pz() : 0]\n        },\n      })\n\n      Object.defineProperty(_thisFunction, 'xPosition', {\n        get: ExpressionPropertyInterface(transform.px),\n      })\n\n      Object.defineProperty(_thisFunction, 'yPosition', {\n        get: ExpressionPropertyInterface(transform.py),\n      })\n\n      Object.defineProperty(_thisFunction, 'zPosition', {\n        get: ExpressionPropertyInterface(transform.pz),\n      })\n\n      Object.defineProperty(_thisFunction, 'anchorPoint', {\n        get: ExpressionPropertyInterface(transform.a),\n      })\n\n      Object.defineProperty(_thisFunction, 'opacity', {\n        get: ExpressionPropertyInterface(transform.o),\n      })\n\n      Object.defineProperty(_thisFunction, 'skew', {\n        get: ExpressionPropertyInterface(transform.sk),\n      })\n\n      Object.defineProperty(_thisFunction, 'skewAxis', {\n        get: ExpressionPropertyInterface(transform.sa),\n      })\n\n      Object.defineProperty(_thisFunction, 'orientation', {\n        get: ExpressionPropertyInterface(transform.or),\n      })\n\n      return _thisFunction\n    }\n  })()\n\n  const LayerExpressionInterface = (function () {\n    function getMatrix(time) {\n      var toWorldMat = new Matrix()\n      if (time !== undefined) {\n        var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time)\n        propMatrix.clone(toWorldMat)\n      } else {\n        var transformMat = this._elem.finalTransform.mProp\n        transformMat.applyToMatrix(toWorldMat)\n      }\n      return toWorldMat\n    }\n\n    function toWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      toWorldMat.props[12] = 0\n      toWorldMat.props[13] = 0\n      toWorldMat.props[14] = 0\n      return this.applyPoint(toWorldMat, arr)\n    }\n\n    function toWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      return this.applyPoint(toWorldMat, arr)\n    }\n\n    function fromWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      toWorldMat.props[12] = 0\n      toWorldMat.props[13] = 0\n      toWorldMat.props[14] = 0\n      return this.invertPoint(toWorldMat, arr)\n    }\n\n    function fromWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      return this.invertPoint(toWorldMat, arr)\n    }\n\n    function applyPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i\n        var len = this._elem.hierarchy.length\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix)\n        }\n      }\n      return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0)\n    }\n\n    function invertPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i\n        var len = this._elem.hierarchy.length\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix)\n        }\n      }\n      return matrix.inversePoint(arr)\n    }\n\n    function fromComp(arr) {\n      var toWorldMat = new Matrix()\n      toWorldMat.reset()\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat)\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i\n        var len = this._elem.hierarchy.length\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat)\n        }\n        return toWorldMat.inversePoint(arr)\n      }\n      return toWorldMat.inversePoint(arr)\n    }\n\n    function sampleImage() {\n      return [1, 1, 1, 1]\n    }\n\n    return function (elem) {\n      var transformInterface\n\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem)\n      }\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects\n      }\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Root Vectors Group':\n          case 'Contents':\n          case 2:\n            return _thisLayerFunction.shapeInterface\n          case 1:\n          case 6:\n          case 'Transform':\n          case 'transform':\n          case 'ADBE Transform Group':\n            return transformInterface\n          case 4:\n          case 'ADBE Effect Parade':\n          case 'effects':\n          case 'Effects':\n            return _thisLayerFunction.effect\n          case 'ADBE Text Properties':\n            return _thisLayerFunction.textInterface\n          default:\n            return null\n        }\n      }\n      _thisLayerFunction.getMatrix = getMatrix\n      _thisLayerFunction.invertPoint = invertPoint\n      _thisLayerFunction.applyPoint = applyPoint\n      _thisLayerFunction.toWorld = toWorld\n      _thisLayerFunction.toWorldVec = toWorldVec\n      _thisLayerFunction.fromWorld = fromWorld\n      _thisLayerFunction.fromWorldVec = fromWorldVec\n      _thisLayerFunction.toComp = toWorld\n      _thisLayerFunction.fromComp = fromComp\n      _thisLayerFunction.sampleImage = sampleImage\n      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem)\n      _thisLayerFunction._elem = elem\n      transformInterface = TransformExpressionInterface(elem.finalTransform.mProp)\n      var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint')\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function () {\n            return elem.hierarchy.length\n          },\n        },\n        parent: {\n          get: function () {\n            return elem.hierarchy[0].layerInterface\n          },\n        },\n        rotation: getDescriptor(transformInterface, 'rotation'),\n        scale: getDescriptor(transformInterface, 'scale'),\n        position: getDescriptor(transformInterface, 'position'),\n        opacity: getDescriptor(transformInterface, 'opacity'),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function () {\n            return transformInterface\n          },\n        },\n        active: {\n          get: function () {\n            return elem.isInRange\n          },\n        },\n      })\n\n      _thisLayerFunction.startTime = elem.data.st\n      _thisLayerFunction.index = elem.data.ind\n      _thisLayerFunction.source = elem.data.refId\n      _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100\n      _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100\n      _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate\n      _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate\n      _thisLayerFunction._name = elem.data.nm\n\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface\n      return _thisLayerFunction\n    }\n  })()\n\n  const propertyGroupFactory = (function () {\n    return function (interfaceFunction, parentPropertyGroup) {\n      return function (val) {\n        val = val === undefined ? 1 : val\n        if (val <= 0) {\n          return interfaceFunction\n        }\n        return parentPropertyGroup(val - 1)\n      }\n    }\n  })()\n\n  const PropertyInterface = (function () {\n    return function (propertyName, propertyGroup) {\n      var interfaceFunction = {\n        _name: propertyName,\n      }\n\n      function _propertyGroup(val) {\n        val = val === undefined ? 1 : val\n        if (val <= 0) {\n          return interfaceFunction\n        }\n        return propertyGroup(val - 1)\n      }\n\n      return _propertyGroup\n    }\n  })()\n\n  const EffectsExpressionInterface = (function () {\n    var ob = {\n      createEffectsInterface: createEffectsInterface,\n    }\n\n    function createEffectsInterface(elem, propertyGroup) {\n      if (elem.effectsManager) {\n        var effectElements = []\n        var effectsData = elem.data.ef\n        var i\n        var len = elem.effectsManager.effectElements.length\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(\n            createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem),\n          )\n        }\n\n        var effects = elem.data.ef || []\n        var groupInterface = function (name) {\n          i = 0\n          len = effects.length\n          while (i < len) {\n            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n              return effectElements[i]\n            }\n            i += 1\n          }\n          return null\n        }\n        Object.defineProperty(groupInterface, 'numProperties', {\n          get: function () {\n            return effects.length\n          },\n        })\n        return groupInterface\n      }\n      return null\n    }\n\n    function createGroupInterface(data, elements, propertyGroup, elem) {\n      function groupInterface(name) {\n        var effects = data.ef\n        var i = 0\n        var len = effects.length\n        while (i < len) {\n          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n            if (effects[i].ty === 5) {\n              return effectElements[i]\n            }\n            return effectElements[i]()\n          }\n          i += 1\n        }\n        throw new Error()\n      }\n      var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup)\n\n      var effectElements = []\n      var i\n      var len = data.ef.length\n      for (i = 0; i < len; i += 1) {\n        if (data.ef[i].ty === 5) {\n          effectElements.push(\n            createGroupInterface(\n              data.ef[i],\n              elements.effectElements[i],\n              elements.effectElements[i].propertyGroup,\n              elem,\n            ),\n          )\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup))\n        }\n      }\n\n      if (data.mn === 'ADBE Color Control') {\n        Object.defineProperty(groupInterface, 'color', {\n          get: function () {\n            return effectElements[0]()\n          },\n        })\n      }\n      Object.defineProperties(groupInterface, {\n        numProperties: {\n          get: function () {\n            return data.np\n          },\n        },\n        _name: { value: data.nm },\n        propertyGroup: { value: _propertyGroup },\n      })\n      groupInterface.enabled = data.en !== 0\n      groupInterface.active = groupInterface.enabled\n      return groupInterface\n    }\n\n    function createValueInterface(element, type, elem, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p)\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem.comp.compInterface(element.p.v)\n        }\n        return expressionProperty()\n      }\n\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(PropertyInterface('', propertyGroup))\n      }\n\n      return interfaceFunction\n    }\n\n    return ob\n  })()\n\n  const CompExpressionInterface = (function () {\n    return function (comp) {\n      function _thisLayerFunction(name) {\n        var i = 0\n        var len = comp.layers.length\n        while (i < len) {\n          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\n            return comp.elements[i].layerInterface\n          }\n          i += 1\n        }\n        return null\n        // return {active:false};\n      }\n      Object.defineProperty(_thisLayerFunction, '_name', { value: comp.data.nm })\n      _thisLayerFunction.layer = _thisLayerFunction\n      _thisLayerFunction.pixelAspect = 1\n      _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h\n      _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w\n      _thisLayerFunction.pixelAspect = 1\n      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate\n      _thisLayerFunction.displayStartTime = 0\n      _thisLayerFunction.numLayers = comp.layers.length\n      return _thisLayerFunction\n    }\n  })()\n\n  const ShapePathInterface = (function () {\n    return function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh\n\n      function interfaceFunction(val) {\n        if (\n          val === 'Shape' ||\n          val === 'shape' ||\n          val === 'Path' ||\n          val === 'path' ||\n          val === 'ADBE Vector Shape' ||\n          val === 2\n        ) {\n          return interfaceFunction.path\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      prop.setGroupProperty(PropertyInterface('Path', _propertyGroup))\n      Object.defineProperties(interfaceFunction, {\n        path: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue()\n            }\n            return prop\n          },\n        },\n        shape: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue()\n            }\n            return prop\n          },\n        },\n        _name: { value: shape.nm },\n        ix: { value: shape.ix },\n        propertyIndex: { value: shape.ix },\n        mn: { value: shape.mn },\n        propertyGroup: { value: propertyGroup },\n      })\n      return interfaceFunction\n    }\n  })()\n\n  const ShapeExpressionInterface = (function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = []\n      var i\n      var len = shapes ? shapes.length : 0\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty === 'gr') {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'fl') {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'st') {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'tm') {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'tr') {\n          // arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\n        } else if (shapes[i].ty === 'el') {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'sr') {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'sh') {\n          arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'rc') {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'rd') {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'rp') {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'gf') {\n          arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else {\n          arr.push(defaultInterfaceFactory(shapes[i], view[i], propertyGroup))\n        }\n      }\n      return arr\n    }\n\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces\n      var interfaceFunction = function _interfaceFunction(value) {\n        var i = 0\n        var len = interfaces.length\n        while (i < len) {\n          if (\n            interfaces[i]._name === value ||\n            interfaces[i].mn === value ||\n            interfaces[i].propertyIndex === value ||\n            interfaces[i].ix === value ||\n            interfaces[i].ind === value\n          ) {\n            return interfaces[i]\n          }\n          i += 1\n        }\n        if (typeof value === 'number') {\n          return interfaces[value - 1]\n        }\n        return null\n      }\n\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup)\n      interfaceFunction.numProperties = interfaces.length\n      var transformInterface = transformInterfaceFactory(\n        shape.it[shape.it.length - 1],\n        view.it[view.it.length - 1],\n        interfaceFunction.propertyGroup,\n      )\n      interfaceFunction.transform = transformInterface\n      interfaceFunction.propertyIndex = shape.cix\n      interfaceFunction._name = shape.nm\n\n      return interfaceFunction\n    }\n\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value) {\n        switch (value) {\n          case 'ADBE Vectors Group':\n          case 'Contents':\n          case 2:\n            return interfaceFunction.content\n          // Not necessary for now. Keeping them here in case a new case appears\n          // case 'ADBE Vector Transform Group':\n          // case 3:\n          default:\n            return interfaceFunction.transform\n        }\n      }\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup)\n      var transformInterface = transformInterfaceFactory(\n        shape.it[shape.it.length - 1],\n        view.it[view.it.length - 1],\n        interfaceFunction.propertyGroup,\n      )\n      interfaceFunction.content = content\n      interfaceFunction.transform = transformInterface\n      Object.defineProperty(interfaceFunction, '_name', {\n        get: function () {\n          return shape.nm\n        },\n      })\n      // interfaceFunction.content = interfaceFunction;\n      interfaceFunction.numProperties = shape.np\n      interfaceFunction.propertyIndex = shape.ix\n      interfaceFunction.nm = shape.nm\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color\n        }\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity\n        }\n        return null\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c),\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        _name: { value: shape.nm },\n        mn: { value: shape.mn },\n      })\n\n      view.c.setGroupProperty(PropertyInterface('Color', propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup))\n      return interfaceFunction\n    }\n\n    function gradientFillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Start Point' || val === 'start point') {\n          return interfaceFunction.startPoint\n        }\n        if (val === 'End Point' || val === 'end point') {\n          return interfaceFunction.endPoint\n        }\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity\n        }\n        return null\n      }\n      Object.defineProperties(interfaceFunction, {\n        startPoint: {\n          get: ExpressionPropertyInterface(view.s),\n        },\n        endPoint: {\n          get: ExpressionPropertyInterface(view.e),\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        type: {\n          get: function () {\n            return 'a'\n          },\n        },\n        _name: { value: shape.nm },\n        mn: { value: shape.mn },\n      })\n\n      view.s.setGroupProperty(PropertyInterface('Start Point', propertyGroup))\n      view.e.setGroupProperty(PropertyInterface('End Point', propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup))\n      return interfaceFunction\n    }\n    function defaultInterfaceFactory() {\n      function interfaceFunction() {\n        return null\n      }\n      return interfaceFunction\n    }\n\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup)\n      function addPropertyToDashOb(i) {\n        Object.defineProperty(dashOb, shape.d[i].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i].p),\n        })\n      }\n      var i\n      var len = shape.d ? shape.d.length : 0\n      var dashOb = {}\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i)\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup)\n      }\n\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color\n        }\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity\n        }\n        if (val === 'Stroke Width' || val === 'stroke width') {\n          return interfaceFunction.strokeWidth\n        }\n        return null\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c),\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        strokeWidth: {\n          get: ExpressionPropertyInterface(view.w),\n        },\n        dash: {\n          get: function () {\n            return dashOb\n          },\n        },\n        _name: { value: shape.nm },\n        mn: { value: shape.mn },\n      })\n\n      view.c.setGroupProperty(PropertyInterface('Color', _propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup))\n      view.w.setGroupProperty(PropertyInterface('Stroke Width', _propertyGroup))\n      return interfaceFunction\n    }\n\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === shape.e.ix || val === 'End' || val === 'end') {\n          return interfaceFunction.end\n        }\n        if (val === shape.s.ix) {\n          return interfaceFunction.start\n        }\n        if (val === shape.o.ix) {\n          return interfaceFunction.offset\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      interfaceFunction.propertyIndex = shape.ix\n\n      view.s.setGroupProperty(PropertyInterface('Start', _propertyGroup))\n      view.e.setGroupProperty(PropertyInterface('End', _propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup))\n      interfaceFunction.propertyIndex = shape.ix\n      interfaceFunction.propertyGroup = propertyGroup\n\n      Object.defineProperties(interfaceFunction, {\n        start: {\n          get: ExpressionPropertyInterface(view.s),\n        },\n        end: {\n          get: ExpressionPropertyInterface(view.e),\n        },\n        offset: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.a.ix === value || value === 'Anchor Point') {\n          return interfaceFunction.anchorPoint\n        }\n        if (shape.o.ix === value || value === 'Opacity') {\n          return interfaceFunction.opacity\n        }\n        if (shape.p.ix === value || value === 'Position') {\n          return interfaceFunction.position\n        }\n        if (shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation') {\n          return interfaceFunction.rotation\n        }\n        if (shape.s.ix === value || value === 'Scale') {\n          return interfaceFunction.scale\n        }\n        if ((shape.sk && shape.sk.ix === value) || value === 'Skew') {\n          return interfaceFunction.skew\n        }\n        if ((shape.sa && shape.sa.ix === value) || value === 'Skew Axis') {\n          return interfaceFunction.skewAxis\n        }\n        return null\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup))\n      view.transform.mProps.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n      view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point', _propertyGroup))\n      view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale', _propertyGroup))\n      view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup))\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew', _propertyGroup))\n        view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle', _propertyGroup))\n      }\n      view.transform.op.setGroupProperty(PropertyInterface('Opacity', _propertyGroup))\n      Object.defineProperties(interfaceFunction, {\n        opacity: {\n          get: ExpressionPropertyInterface(view.transform.mProps.o),\n        },\n        position: {\n          get: ExpressionPropertyInterface(view.transform.mProps.p),\n        },\n        anchorPoint: {\n          get: ExpressionPropertyInterface(view.transform.mProps.a),\n        },\n        scale: {\n          get: ExpressionPropertyInterface(view.transform.mProps.s),\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(view.transform.mProps.r),\n        },\n        skew: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk),\n        },\n        skewAxis: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.ty = 'tr'\n      interfaceFunction.mn = shape.mn\n      interfaceFunction.propertyGroup = propertyGroup\n      return interfaceFunction\n    }\n\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position\n        }\n        if (shape.s.ix === value) {\n          return interfaceFunction.size\n        }\n        return null\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      interfaceFunction.propertyIndex = shape.ix\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup))\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n\n      Object.defineProperties(interfaceFunction, {\n        size: {\n          get: ExpressionPropertyInterface(prop.s),\n        },\n        position: {\n          get: ExpressionPropertyInterface(prop.p),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position\n        }\n        if (shape.r.ix === value) {\n          return interfaceFunction.rotation\n        }\n        if (shape.pt.ix === value) {\n          return interfaceFunction.points\n        }\n        if (shape.or.ix === value || value === 'ADBE Vector Star Outer Radius') {\n          return interfaceFunction.outerRadius\n        }\n        if (shape.os.ix === value) {\n          return interfaceFunction.outerRoundness\n        }\n        if (shape.ir && (shape.ir.ix === value || value === 'ADBE Vector Star Inner Radius')) {\n          return interfaceFunction.innerRadius\n        }\n        if (shape.is && shape.is.ix === value) {\n          return interfaceFunction.innerRoundness\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh\n      interfaceFunction.propertyIndex = shape.ix\n      prop.or.setGroupProperty(PropertyInterface('Outer Radius', _propertyGroup))\n      prop.os.setGroupProperty(PropertyInterface('Outer Roundness', _propertyGroup))\n      prop.pt.setGroupProperty(PropertyInterface('Points', _propertyGroup))\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup))\n      if (shape.ir) {\n        prop.ir.setGroupProperty(PropertyInterface('Inner Radius', _propertyGroup))\n        prop.is.setGroupProperty(PropertyInterface('Inner Roundness', _propertyGroup))\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p),\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(prop.r),\n        },\n        points: {\n          get: ExpressionPropertyInterface(prop.pt),\n        },\n        outerRadius: {\n          get: ExpressionPropertyInterface(prop.or),\n        },\n        outerRoundness: {\n          get: ExpressionPropertyInterface(prop.os),\n        },\n        innerRadius: {\n          get: ExpressionPropertyInterface(prop.ir),\n        },\n        innerRoundness: {\n          get: ExpressionPropertyInterface(prop.is),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position\n        }\n        if (shape.r.ix === value) {\n          return interfaceFunction.roundness\n        }\n        if (shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size') {\n          return interfaceFunction.size\n        }\n        return null\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh\n      interfaceFunction.propertyIndex = shape.ix\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup))\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup))\n\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p),\n        },\n        roundness: {\n          get: ExpressionPropertyInterface(prop.r),\n        },\n        size: {\n          get: ExpressionPropertyInterface(prop.s),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.r.ix === value || value === 'Round Corners 1') {\n          return interfaceFunction.radius\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var prop = view\n      interfaceFunction.propertyIndex = shape.ix\n      prop.rd.setGroupProperty(PropertyInterface('Radius', _propertyGroup))\n\n      Object.defineProperties(interfaceFunction, {\n        radius: {\n          get: ExpressionPropertyInterface(prop.rd),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.c.ix === value || value === 'Copies') {\n          return interfaceFunction.copies\n        }\n        if (shape.o.ix === value || value === 'Offset') {\n          return interfaceFunction.offset\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var prop = view\n      interfaceFunction.propertyIndex = shape.ix\n      prop.c.setGroupProperty(PropertyInterface('Copies', _propertyGroup))\n      prop.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup))\n      Object.defineProperties(interfaceFunction, {\n        copies: {\n          get: ExpressionPropertyInterface(prop.c),\n        },\n        offset: {\n          get: ExpressionPropertyInterface(prop.o),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    return function (shapes, view, propertyGroup) {\n      var interfaces\n      function _interfaceFunction(value) {\n        if (typeof value === 'number') {\n          value = value === undefined ? 1 : value\n          if (value === 0) {\n            return propertyGroup\n          }\n          return interfaces[value - 1]\n        }\n        var i = 0\n        var len = interfaces.length\n        while (i < len) {\n          if (interfaces[i]._name === value) {\n            return interfaces[i]\n          }\n          i += 1\n        }\n        return null\n      }\n      function parentGroupWrapper() {\n        return propertyGroup\n      }\n      _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper)\n      interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup)\n      _interfaceFunction.numProperties = interfaces.length\n      _interfaceFunction._name = 'Contents'\n      return _interfaceFunction\n    }\n  })()\n\n  const TextExpressionInterface = (function () {\n    return function (elem) {\n      var _prevValue\n      var _sourceText\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Text Document':\n            return _thisLayerFunction.sourceText\n          default:\n            return null\n        }\n      }\n      Object.defineProperty(_thisLayerFunction, 'sourceText', {\n        get: function () {\n          elem.textProperty.getValue()\n          var stringValue = elem.textProperty.currentData.t\n          if (stringValue !== _prevValue) {\n            elem.textProperty.currentData.t = _prevValue\n            _sourceText = new String(stringValue) // eslint-disable-line no-new-wrappers\n            // If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\n            _sourceText.value = stringValue || new String(stringValue) // eslint-disable-line no-new-wrappers\n          }\n          return _sourceText\n        },\n      })\n      return _thisLayerFunction\n    }\n  })()\n\n  const getBlendMode = (function () {\n    var blendModeEnums = {\n      0: 'source-over',\n      1: 'multiply',\n      2: 'screen',\n      3: 'overlay',\n      4: 'darken',\n      5: 'lighten',\n      6: 'color-dodge',\n      7: 'color-burn',\n      8: 'hard-light',\n      9: 'soft-light',\n      10: 'difference',\n      11: 'exclusion',\n      12: 'hue',\n      13: 'saturation',\n      14: 'color',\n      15: 'luminosity',\n    }\n\n    return function (mode) {\n      return blendModeEnums[mode] || ''\n    }\n  })()\n\n  function SliderEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function AngleEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function ColorEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container)\n  }\n  function PointEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container)\n  }\n  function LayerIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function MaskIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function CheckboxEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function NoValueEffect() {\n    this.p = {}\n  }\n\n  function EffectsManager(data, element) {\n    var effects = data.ef || []\n    this.effectElements = []\n    var i\n    var len = effects.length\n    var effectItem\n    for (i = 0; i < len; i += 1) {\n      effectItem = new GroupEffect(effects[i], element)\n      this.effectElements.push(effectItem)\n    }\n  }\n\n  function GroupEffect(data, element) {\n    this.init(data, element)\n  }\n\n  extendPrototype([DynamicPropertyContainer], GroupEffect)\n\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties\n\n  GroupEffect.prototype.init = function (data, element) {\n    this.data = data\n    this.effectElements = []\n    this.initDynamicPropertyContainer(element)\n    var i\n    var len = this.data.ef.length\n    var eff\n    var effects = this.data.ef\n    for (i = 0; i < len; i += 1) {\n      eff = null\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this)\n          break\n        case 1:\n          eff = new AngleEffect(effects[i], element, this)\n          break\n        case 2:\n          eff = new ColorEffect(effects[i], element, this)\n          break\n        case 3:\n          eff = new PointEffect(effects[i], element, this)\n          break\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this)\n          break\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this)\n          break\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this)\n          break\n        case 5:\n          eff = new EffectsManager(effects[i], element, this)\n          break\n        // case 6:\n        default:\n          eff = new NoValueEffect(effects[i], element, this)\n          break\n      }\n      if (eff) {\n        this.effectElements.push(eff)\n      }\n    }\n  }\n\n  function BaseElement() {}\n\n  BaseElement.prototype = {\n    checkMasks: function () {\n      if (!this.data.hasMask) {\n        return false\n      }\n      var i = 0\n      var len = this.data.masksProperties.length\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {\n          return true\n        }\n        i += 1\n      }\n      return false\n    },\n    initExpressions: function () {\n      this.layerInterface = LayerExpressionInterface(this)\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager)\n      }\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface)\n      this.layerInterface.registerEffectsInterface(effectsInterface)\n\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this)\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(\n          this.shapesData,\n          this.itemsData,\n          this.layerInterface,\n        )\n        this.layerInterface.content = this.layerInterface.shapeInterface\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this)\n        this.layerInterface.text = this.layerInterface.textInterface\n      }\n    },\n    setBlendMode: function () {\n      var blendModeValue = getBlendMode(this.data.bm)\n      var elem = this.baseElement || this.layerElement\n\n      elem.style['mix-blend-mode'] = blendModeValue\n    },\n    initBaseData: function (data, globalData, comp) {\n      this.globalData = globalData\n      this.comp = comp\n      this.data = data\n      this.layerId = createElementID()\n\n      // Stretch factor for old animations missing this property.\n      if (!this.data.sr) {\n        this.data.sr = 1\n      }\n      // effects manager\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties)\n    },\n    getType: function () {\n      return this.type\n    },\n    sourceRectAtTime: function () {},\n  }\n\n  /**\n   * @file\n   * Handles element's layer frame update.\n   * Checks layer in point and out point\n   *\n   */\n\n  function FrameElement() {}\n\n  FrameElement.prototype = {\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     */\n    initFrame: function () {\n      // set to true when inpoint is rendered\n      this._isFirstFrame = false\n      // list of animated properties\n      this.dynamicProperties = []\n      // If layer has been modified in current tick this will be true\n      this._mdf = false\n    },\n    /**\n     * @function\n     * Calculates all dynamic values\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     * @param {boolean} isVisible\n     * if layers is currently in range\n     *\n     */\n    prepareProperties: function (num, isVisible) {\n      var i\n      var len = this.dynamicProperties.length\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\n          this.dynamicProperties[i].getValue()\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true\n            this._mdf = true\n          }\n        }\n      }\n    },\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop)\n      }\n    },\n  }\n\n  const FootageInterface = (function () {\n    var outlineInterfaceFactory = function (elem) {\n      var currentPropertyName = ''\n      var currentProperty = elem.getFootageData()\n      function init() {\n        currentPropertyName = ''\n        currentProperty = elem.getFootageData()\n        return searchProperty\n      }\n      function searchProperty(value) {\n        if (currentProperty[value]) {\n          currentPropertyName = value\n          currentProperty = currentProperty[value]\n          if (typeof currentProperty === 'object') {\n            return searchProperty\n          }\n          return currentProperty\n        }\n        var propertyNameIndex = value.indexOf(currentPropertyName)\n        if (propertyNameIndex !== -1) {\n          var index = parseInt(value.substr(propertyNameIndex + currentPropertyName.length), 10)\n          currentProperty = currentProperty[index]\n          if (typeof currentProperty === 'object') {\n            return searchProperty\n          }\n          return currentProperty\n        }\n        return ''\n      }\n      return init\n    }\n\n    var dataInterfaceFactory = function (elem) {\n      function interfaceFunction(value) {\n        if (value === 'Outline') {\n          return interfaceFunction.outlineInterface()\n        }\n        return null\n      }\n\n      interfaceFunction._name = 'Outline'\n      interfaceFunction.outlineInterface = outlineInterfaceFactory(elem)\n      return interfaceFunction\n    }\n\n    return function (elem) {\n      function _interfaceFunction(value) {\n        if (value === 'Data') {\n          return _interfaceFunction.dataInterface\n        }\n        return null\n      }\n\n      _interfaceFunction._name = 'Data'\n      _interfaceFunction.dataInterface = dataInterfaceFactory(elem)\n      return _interfaceFunction\n    }\n  })()\n\n  function FootageElement(data, globalData, comp) {\n    this.initFrame()\n    this.initRenderable()\n    this.assetData = globalData.getAssetData(data.refId)\n    this.footageData = globalData.imageLoader.getAsset(this.assetData)\n    this.initBaseData(data, globalData, comp)\n  }\n\n  FootageElement.prototype.prepareFrame = function () {}\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement)\n\n  FootageElement.prototype.getBaseElement = function () {\n    return null\n  }\n\n  FootageElement.prototype.renderFrame = function () {}\n\n  FootageElement.prototype.destroy = function () {}\n\n  FootageElement.prototype.initExpressions = function () {\n    this.layerInterface = FootageInterface(this)\n  }\n\n  FootageElement.prototype.getFootageData = function () {\n    return this.footageData\n  }\n\n  function AudioElement(data, globalData, comp) {\n    this.initFrame()\n    this.initRenderable()\n    this.assetData = globalData.getAssetData(data.refId)\n    this.initBaseData(data, globalData, comp)\n    this._isPlaying = false\n    this._canPlay = false\n    var assetPath = this.globalData.getAssetsPath(this.assetData)\n    this.audio = this.globalData.audioController.createAudio(assetPath)\n    this._currentTime = 0\n    this.globalData.audioController.addAudio(this)\n    this._volumeMultiplier = 1\n    this._volume = 1\n    this._previousVolume = null\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true }\n    this.lv = PropertyFactory.getProp(this, data.au && data.au.lv ? data.au.lv : { k: [100] }, 1, 0.01, this)\n  }\n\n  AudioElement.prototype.prepareFrame = function (num) {\n    this.prepareRenderableFrame(num, true)\n    this.prepareProperties(num, true)\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v\n      this._currentTime = timeRemapped\n    } else {\n      this._currentTime = num / this.data.sr\n    }\n    this._volume = this.lv.v[0]\n    var totalVolume = this._volume * this._volumeMultiplier\n    if (this._previousVolume !== totalVolume) {\n      this._previousVolume = totalVolume\n      this.audio.volume(totalVolume)\n    }\n  }\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement)\n\n  AudioElement.prototype.renderFrame = function () {\n    if (this.isInRange && this._canPlay) {\n      if (!this._isPlaying) {\n        this.audio.play()\n        this.audio.seek(this._currentTime / this.globalData.frameRate)\n        this._isPlaying = true\n      } else if (\n        !this.audio.playing() ||\n        Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1\n      ) {\n        this.audio.seek(this._currentTime / this.globalData.frameRate)\n      }\n    }\n  }\n\n  AudioElement.prototype.show = function () {\n    // this.audio.play()\n  }\n\n  AudioElement.prototype.hide = function () {\n    this.audio.pause()\n    this._isPlaying = false\n  }\n\n  AudioElement.prototype.pause = function () {\n    this.audio.pause()\n    this._isPlaying = false\n    this._canPlay = false\n  }\n\n  AudioElement.prototype.resume = function () {\n    this._canPlay = true\n  }\n\n  AudioElement.prototype.setRate = function (rateValue) {\n    this.audio.rate(rateValue)\n  }\n\n  AudioElement.prototype.volume = function (volumeValue) {\n    this._volumeMultiplier = volumeValue\n    this._previousVolume = volumeValue * this._volume\n    this.audio.volume(this._previousVolume)\n  }\n\n  AudioElement.prototype.getBaseElement = function () {\n    return null\n  }\n\n  AudioElement.prototype.destroy = function () {}\n\n  AudioElement.prototype.sourceRectAtTime = function () {}\n\n  AudioElement.prototype.initExpressions = function () {}\n\n  function BaseRenderer() {}\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i\n    var len = this.layers.length\n    var data\n    this.completeLayers = true\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (!this.elements[i]) {\n        data = this.layers[i]\n        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {\n          this.buildItem(i)\n        }\n      }\n      this.completeLayers = this.elements[i] ? this.completeLayers : false\n    }\n    this.checkPendingElements()\n  }\n\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer)\n      case 0:\n        return this.createComp(layer)\n      case 1:\n        return this.createSolid(layer)\n      case 3:\n        return this.createNull(layer)\n      case 4:\n        return this.createShape(layer)\n      case 5:\n        return this.createText(layer)\n      case 6:\n        return this.createAudio(layer)\n      case 13:\n        return this.createCamera(layer)\n      case 15:\n        return this.createFootage(layer)\n      default:\n        return this.createNull(layer)\n    }\n  }\n\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error(\"You're using a 3d camera. Try the html renderer.\")\n  }\n\n  BaseRenderer.prototype.createAudio = function (data) {\n    return new AudioElement(data, this.globalData, this)\n  }\n\n  BaseRenderer.prototype.createFootage = function (data) {\n    return new FootageElement(data, this.globalData, this)\n  }\n\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i\n    var len = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i)\n    }\n    this.checkPendingElements()\n  }\n\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false\n    var i\n    var len = newLayers.length\n    var j\n    var jLen = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      j = 0\n      while (j < jLen) {\n        if (this.layers[j].id === newLayers[i].id) {\n          this.layers[j] = newLayers[i]\n          break\n        }\n        j += 1\n      }\n    }\n  }\n\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface\n  }\n\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems()\n    }\n  }\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements\n    var layers = this.layers\n    var i = 0\n    var len = layers.length\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        // eslint-disable-line eqeqeq\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i)\n          this.addPendingElement(element)\n        } else {\n          hierarchy.push(elements[i])\n          elements[i].setAsParent()\n          if (layers[i].parent !== undefined) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy)\n          } else {\n            element.setHierarchy(hierarchy)\n          }\n        }\n      }\n      i += 1\n    }\n  }\n\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element)\n  }\n\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i\n    var len = assets.length\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i])\n        comp.initExpressions()\n        this.globalData.projectInterface.registerComposition(comp)\n      }\n    }\n  }\n\n  BaseRenderer.prototype.getElementByPath = function (path) {\n    var pathValue = path.shift()\n    var element\n    if (typeof pathValue === 'number') {\n      element = this.elements[pathValue]\n    } else {\n      var i\n      var len = this.elements.length\n      for (i = 0; i < len; i += 1) {\n        if (this.elements[i].data.nm === pathValue) {\n          element = this.elements[i]\n          break\n        }\n      }\n    }\n    if (path.length === 0) {\n      return element\n    }\n    return element.getElementByPath(path)\n  }\n\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager()\n    this.globalData.fontManager.addChars(animData.chars)\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer)\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem)\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem)\n    this.globalData.imageLoader = this.animationItem.imagePreloader\n    this.globalData.audioController = this.animationItem.audioController\n    this.globalData.frameId = 0\n    this.globalData.frameRate = animData.fr\n    this.globalData.nm = animData.nm\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h,\n    }\n  }\n\n  function TransformElement() {}\n\n  TransformElement.prototype = {\n    initTransform: function () {\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 },\n        _matMdf: false,\n        _opMdf: false,\n        mat: new Matrix(),\n      }\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true\n      }\n\n      // TODO: check TYPE 11: Guided elements\n      if (this.data.ty !== 11) {\n        // this.createElements();\n      }\n    },\n    renderTransform: function () {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame\n\n      if (this.hierarchy) {\n        var mat\n        var finalMat = this.finalTransform.mat\n        var i = 0\n        var len = this.hierarchy.length\n        // Checking if any of the transformation matrices in the hierarchy chain has changed.\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true\n              break\n            }\n            i += 1\n          }\n        }\n\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props\n          finalMat.cloneFromProps(mat)\n          for (i = 0; i < len; i += 1) {\n            mat = this.hierarchy[i].finalTransform.mProp.v.props\n            finalMat.transform(\n              mat[0],\n              mat[1],\n              mat[2],\n              mat[3],\n              mat[4],\n              mat[5],\n              mat[6],\n              mat[7],\n              mat[8],\n              mat[9],\n              mat[10],\n              mat[11],\n              mat[12],\n              mat[13],\n              mat[14],\n              mat[15],\n            )\n          }\n        }\n      }\n    },\n    globalToLocal: function (pt) {\n      var transforms = []\n      transforms.push(this.finalTransform)\n      var flag = true\n      var comp = this.comp\n      while (flag) {\n        if (comp.finalTransform) {\n          if (comp.data.hasMask) {\n            transforms.splice(0, 0, comp.finalTransform)\n          }\n          comp = comp.comp\n        } else {\n          flag = false\n        }\n      }\n      var i\n      var len = transforms.length\n      var ptNew\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0)\n        // ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0]\n      }\n      return pt\n    },\n    mHelper: new Matrix(),\n  }\n\n  function MaskElement(data, element, globalData) {\n    this.data = data\n    this.element = element\n    this.globalData = globalData\n    this.storedData = []\n    this.masksProperties = this.data.masksProperties || []\n    this.maskElement = null\n    var defs = this.globalData.defs\n    var i\n    var len = this.masksProperties ? this.masksProperties.length : 0\n    this.viewData = createSizedArray(len)\n    this.solidPath = ''\n\n    var path\n    var properties = this.masksProperties\n    var count = 0\n    var currentMasks = []\n    var j\n    var jLen\n    var layerId = createElementID()\n    var rect\n    var expansor\n    var feMorph\n    var x\n    var maskType = 'clipPath'\n    var maskRef = 'clip-path'\n    for (i = 0; i < len; i += 1) {\n      if (\n        (properties[i].mode !== 'a' && properties[i].mode !== 'n') ||\n        properties[i].inv ||\n        properties[i].o.k !== 100 ||\n        properties[i].o.x\n      ) {\n        maskType = 'mask'\n        maskRef = 'mask'\n      }\n\n      if ((properties[i].mode === 's' || properties[i].mode === 'i') && count === 0) {\n        rect = createNS('rect')\n        rect.setAttribute('fill', '#ffffff')\n        rect.setAttribute('width', this.element.comp.data.w || 0)\n        rect.setAttribute('height', this.element.comp.data.h || 0)\n        currentMasks.push(rect)\n      } else {\n        rect = null\n      }\n\n      path = createNS('path')\n      if (properties[i].mode === 'n') {\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: '',\n        }\n        defs.appendChild(path)\n      } else {\n        count += 1\n\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff')\n        path.setAttribute('clip-rule', 'nonzero')\n        var filterID\n\n        if (properties[i].x.k !== 0) {\n          maskType = 'mask'\n          maskRef = 'mask'\n          x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element)\n          filterID = createElementID()\n          expansor = createNS('filter')\n          expansor.setAttribute('id', filterID)\n          feMorph = createNS('feMorphology')\n          feMorph.setAttribute('operator', 'erode')\n          feMorph.setAttribute('in', 'SourceGraphic')\n          feMorph.setAttribute('radius', '0')\n          expansor.appendChild(feMorph)\n          defs.appendChild(expansor)\n          path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff')\n        } else {\n          feMorph = null\n          x = null\n        }\n\n        // TODO move this to a factory or to a constructor\n        this.storedData[i] = {\n          elem: path,\n          x: x,\n          expan: feMorph,\n          lastPath: '',\n          lastOperator: '',\n          filterId: filterID,\n          lastRadius: 0,\n        }\n        if (properties[i].mode === 'i') {\n          jLen = currentMasks.length\n          var g = createNS('g')\n          for (j = 0; j < jLen; j += 1) {\n            g.appendChild(currentMasks[j])\n          }\n          var mask = createNS('mask')\n          mask.setAttribute('mask-type', 'alpha')\n          mask.setAttribute('id', layerId + '_' + count)\n          mask.appendChild(path)\n          defs.appendChild(mask)\n          g.setAttribute('mask', 'url(' + getLocationHref() + '#' + layerId + '_' + count + ')')\n\n          currentMasks.length = 0\n          currentMasks.push(g)\n        } else {\n          currentMasks.push(path)\n        }\n        if (properties[i].inv && !this.solidPath) {\n          this.solidPath = this.createLayerSolidPath()\n        }\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          elem: path,\n          lastPath: '',\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          invRect: rect,\n        }\n        if (!this.viewData[i].prop.k) {\n          this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i])\n        }\n      }\n    }\n\n    this.maskElement = createNS(maskType)\n\n    len = currentMasks.length\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i])\n    }\n\n    if (count > 0) {\n      this.maskElement.setAttribute('id', layerId)\n      this.element.maskedElement.setAttribute(maskRef, 'url(' + getLocationHref() + '#' + layerId + ')')\n      defs.appendChild(this.maskElement)\n    }\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this)\n    }\n  }\n\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop\n  }\n\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat\n    var i\n    var len = this.masksProperties.length\n    for (i = 0; i < len; i += 1) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i])\n      }\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v)\n      }\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS())\n        }\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== 'erode') {\n              this.storedData[i].lastOperator = 'erode'\n              this.storedData[i].elem.setAttribute(\n                'filter',\n                'url(' + getLocationHref() + '#' + this.storedData[i].filterId + ')',\n              )\n            }\n            feMorph.setAttribute('radius', -this.storedData[i].x.v)\n          } else {\n            if (this.storedData[i].lastOperator !== 'dilate') {\n              this.storedData[i].lastOperator = 'dilate'\n              this.storedData[i].elem.setAttribute('filter', null)\n            }\n            this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2)\n          }\n        }\n      }\n    }\n  }\n\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement\n  }\n\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = 'M0,0 '\n    path += ' h' + this.globalData.compSize.w\n    path += ' v' + this.globalData.compSize.h\n    path += ' h-' + this.globalData.compSize.w\n    path += ' v-' + this.globalData.compSize.h + ' '\n    return path\n  }\n\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = ' M' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1]\n    var i\n    var len\n    len = pathNodes._length\n    for (i = 1; i < len; i += 1) {\n      // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\n      pathString +=\n        ' C' +\n        pathNodes.o[i - 1][0] +\n        ',' +\n        pathNodes.o[i - 1][1] +\n        ' ' +\n        pathNodes.i[i][0] +\n        ',' +\n        pathNodes.i[i][1] +\n        ' ' +\n        pathNodes.v[i][0] +\n        ',' +\n        pathNodes.v[i][1]\n    }\n    // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\n    if (pathNodes.c && len > 1) {\n      pathString +=\n        ' C' +\n        pathNodes.o[i - 1][0] +\n        ',' +\n        pathNodes.o[i - 1][1] +\n        ' ' +\n        pathNodes.i[0][0] +\n        ',' +\n        pathNodes.i[0][1] +\n        ' ' +\n        pathNodes.v[0][0] +\n        ',' +\n        pathNodes.v[0][1]\n    }\n    // pathNodes.__renderedString = pathString;\n\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = ''\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString\n        }\n        viewData.elem.setAttribute('d', pathShapeValue)\n      }\n      viewData.lastPath = pathString\n    }\n  }\n\n  MaskElement.prototype.destroy = function () {\n    this.element = null\n    this.globalData = null\n    this.maskElement = null\n    this.data = null\n    this.masksProperties = null\n  }\n\n  const filtersFactory = (function () {\n    var ob = {}\n    ob.createFilter = createFilter\n    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter\n\n    function createFilter(filId, skipCoordinates) {\n      var fil = createNS('filter')\n      fil.setAttribute('id', filId)\n      if (skipCoordinates !== true) {\n        fil.setAttribute('filterUnits', 'objectBoundingBox')\n        fil.setAttribute('x', '0%')\n        fil.setAttribute('y', '0%')\n        fil.setAttribute('width', '100%')\n        fil.setAttribute('height', '100%')\n      }\n      return fil\n    }\n\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS('feColorMatrix')\n      feColorMatrix.setAttribute('type', 'matrix')\n      feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB')\n      feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1')\n      return feColorMatrix\n    }\n\n    return ob\n  })()\n\n  const featureSupport = (function () {\n    var ob = {\n      maskType: true,\n    }\n    if (\n      /MSIE 10/i.test(navigator.userAgent) ||\n      /MSIE 9/i.test(navigator.userAgent) ||\n      /rv:11.0/i.test(navigator.userAgent) ||\n      /Edge\\/\\d./i.test(navigator.userAgent)\n    ) {\n      ob.maskType = false\n    }\n    return ob\n  })()\n\n  var registeredEffects = {}\n  var idPrefix = 'filter_result_'\n\n  function SVGEffects(elem) {\n    var i\n    var source = 'SourceGraphic'\n    var len = elem.data.ef ? elem.data.ef.length : 0\n    var filId = createElementID()\n    var fil = filtersFactory.createFilter(filId, true)\n    var count = 0\n    this.filters = []\n    var filterManager\n    for (i = 0; i < len; i += 1) {\n      filterManager = null\n      var type = elem.data.ef[i].ty\n      if (registeredEffects[type]) {\n        var Effect = registeredEffects[type].effect\n        filterManager = new Effect(fil, elem.effectsManager.effectElements[i], elem, idPrefix + count, source)\n        source = idPrefix + count\n        if (registeredEffects[type].countsAsEffect) {\n          count += 1\n        }\n      }\n      if (filterManager) {\n        this.filters.push(filterManager)\n      }\n    }\n    if (count) {\n      elem.globalData.defs.appendChild(fil)\n      elem.layerElement.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')')\n    }\n    if (this.filters.length) {\n      elem.addRenderableComponent(this)\n    }\n  }\n\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i\n    var len = this.filters.length\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame)\n    }\n  }\n\n  function registerEffect(id, effect, countsAsEffect) {\n    registeredEffects[id] = {\n      effect,\n      countsAsEffect,\n    }\n  }\n\n  function SVGBaseElement() {}\n\n  SVGBaseElement.prototype = {\n    initRendererElement: function () {\n      this.layerElement = createNS('g')\n    },\n    createContainerElements: function () {\n      this.matteElement = createNS('g')\n      this.transformedElement = this.layerElement\n      this.maskedElement = this.layerElement\n      this._sizeChanged = false\n      var layerElementParent = null\n      // If this layer acts as a mask for the following layer\n      var filId\n      var fil\n      var gg\n      if (this.data.td) {\n        if (this.data.td == 3 || this.data.td == 1) {\n          // eslint-disable-line eqeqeq\n          var masker = createNS('mask')\n          masker.setAttribute('id', this.layerId)\n          masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha') // eslint-disable-line eqeqeq\n          masker.appendChild(this.layerElement)\n          layerElementParent = masker\n          this.globalData.defs.appendChild(masker)\n          // This is only for IE and Edge when mask if of type alpha\n          if (!featureSupport.maskType && this.data.td == 1) {\n            // eslint-disable-line eqeqeq\n            masker.setAttribute('mask-type', 'luminance')\n            filId = createElementID()\n            fil = filtersFactory.createFilter(filId)\n            this.globalData.defs.appendChild(fil)\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter())\n            gg = createNS('g')\n            gg.appendChild(this.layerElement)\n            layerElementParent = gg\n            masker.appendChild(gg)\n            gg.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')')\n          }\n        } else if (this.data.td == 2) {\n          // eslint-disable-line eqeqeq\n          var maskGroup = createNS('mask')\n          maskGroup.setAttribute('id', this.layerId)\n          maskGroup.setAttribute('mask-type', 'alpha')\n          var maskGrouper = createNS('g')\n          maskGroup.appendChild(maskGrouper)\n          filId = createElementID()\n          fil = filtersFactory.createFilter(filId)\n          /// /\n\n          // This solution doesn't work on Android when meta tag with viewport attribute is set\n          /* var feColorMatrix = createNS('feColorMatrix');\n                feColorMatrix.setAttribute('type', 'matrix');\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\n                fil.appendChild(feColorMatrix); */\n          /// /\n          var feCTr = createNS('feComponentTransfer')\n          feCTr.setAttribute('in', 'SourceGraphic')\n          fil.appendChild(feCTr)\n          var feFunc = createNS('feFuncA')\n          feFunc.setAttribute('type', 'table')\n          feFunc.setAttribute('tableValues', '1.0 0.0')\n          feCTr.appendChild(feFunc)\n          /// /\n          this.globalData.defs.appendChild(fil)\n          var alphaRect = createNS('rect')\n          alphaRect.setAttribute('width', this.comp.data.w)\n          alphaRect.setAttribute('height', this.comp.data.h)\n          alphaRect.setAttribute('x', '0')\n          alphaRect.setAttribute('y', '0')\n          alphaRect.setAttribute('fill', '#ffffff')\n          alphaRect.setAttribute('opacity', '0')\n          maskGrouper.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')')\n          maskGrouper.appendChild(alphaRect)\n          maskGrouper.appendChild(this.layerElement)\n          layerElementParent = maskGrouper\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute('mask-type', 'luminance')\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter())\n            gg = createNS('g')\n            maskGrouper.appendChild(alphaRect)\n            gg.appendChild(this.layerElement)\n            layerElementParent = gg\n            maskGrouper.appendChild(gg)\n          }\n          this.globalData.defs.appendChild(maskGroup)\n        }\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement)\n        layerElementParent = this.matteElement\n        this.baseElement = this.matteElement\n      } else {\n        this.baseElement = this.layerElement\n      }\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln)\n      }\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl)\n      }\n      // Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS('clipPath')\n        var pt = createNS('path')\n        pt.setAttribute(\n          'd',\n          'M0,0 L' + this.data.w + ',0 L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z',\n        )\n        var clipId = createElementID()\n        cp.setAttribute('id', clipId)\n        cp.appendChild(pt)\n        this.globalData.defs.appendChild(cp)\n\n        if (this.checkMasks()) {\n          var cpGroup = createNS('g')\n          cpGroup.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')')\n          cpGroup.appendChild(this.layerElement)\n          this.transformedElement = cpGroup\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement)\n          } else {\n            this.baseElement = this.transformedElement\n          }\n        } else {\n          this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')')\n        }\n      }\n      if (this.data.bm !== 0) {\n        this.setBlendMode()\n      }\n    },\n    renderElement: function () {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS())\n      }\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v)\n      }\n    },\n    destroyBaseElement: function () {\n      this.layerElement = null\n      this.matteElement = null\n      this.maskManager.destroy()\n    },\n    getBaseElement: function () {\n      if (this.data.hd) {\n        return null\n      }\n      return this.baseElement\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new MaskElement(this.data, this, this.globalData)\n      this.renderableEffectsManager = new SVGEffects(this)\n    },\n    setMatte: function (id) {\n      if (!this.matteElement) {\n        return\n      }\n      this.matteElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')')\n    },\n  }\n\n  /**\n   * @file\n   * Handles AE's layer parenting property.\n   *\n   */\n\n  function HierarchyElement() {}\n\n  HierarchyElement.prototype = {\n    /**\n     * @function\n     * Initializes hierarchy properties\n     *\n     */\n    initHierarchy: function () {\n      // element's parent list\n      this.hierarchy = []\n      // if element is parent of another layer _isParent will be true\n      this._isParent = false\n      this.checkParenting()\n    },\n    /**\n     * @function\n     * Sets layer's hierarchy.\n     * @param {array} hierarch\n     * layer's parent list\n     *\n     */\n    setHierarchy: function (hierarchy) {\n      this.hierarchy = hierarchy\n    },\n    /**\n     * @function\n     * Sets layer as parent.\n     *\n     */\n    setAsParent: function () {\n      this._isParent = true\n    },\n    /**\n     * @function\n     * Searches layer's parenting chain\n     *\n     */\n    checkParenting: function () {\n      if (this.data.parent !== undefined) {\n        this.comp.buildElementParenting(this, this.data.parent, [])\n      }\n    },\n  }\n\n  function RenderableDOMElement() {}\n\n  ;(function () {\n    var _prototype = {\n      initElement: function (data, globalData, comp) {\n        this.initFrame()\n        this.initBaseData(data, globalData, comp)\n        this.initTransform(data, globalData, comp)\n        this.initHierarchy()\n        this.initRenderable()\n        this.initRendererElement()\n        this.createContainerElements()\n        this.createRenderableComponents()\n        this.createContent()\n        this.hide()\n      },\n      hide: function () {\n        // console.log('HIDE', this);\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem = this.baseElement || this.layerElement\n          elem.style.display = 'none'\n          this.hidden = true\n        }\n      },\n      show: function () {\n        // console.log('SHOW', this);\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem = this.baseElement || this.layerElement\n            elem.style.display = 'block'\n          }\n          this.hidden = false\n          this._isFirstFrame = true\n        }\n      },\n      renderFrame: function () {\n        // If it is exported as hidden (data.hd === true) no need to render\n        // If it is not visible no need to render\n        if (this.data.hd || this.hidden) {\n          return\n        }\n        this.renderTransform()\n        this.renderRenderable()\n        this.renderElement()\n        this.renderInnerContent()\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false\n        }\n      },\n      renderInnerContent: function () {},\n      prepareFrame: function (num) {\n        this._mdf = false\n        this.prepareRenderableFrame(num)\n        this.prepareProperties(num, this.isInRange)\n        this.checkTransparency()\n      },\n      destroy: function () {\n        this.innerElem = null\n        this.destroyBaseElement()\n      },\n    }\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement)\n  })()\n\n  function IImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId)\n    this.initElement(data, globalData, comp)\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h,\n    }\n  }\n\n  extendPrototype(\n    [BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement],\n    IImageElement,\n  )\n\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData)\n\n    this.innerElem = createNS('image')\n    this.innerElem.setAttribute('width', this.assetData.w + 'px')\n    this.innerElem.setAttribute('height', this.assetData.h + 'px')\n    this.innerElem.setAttribute(\n      'preserveAspectRatio',\n      this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio,\n    )\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath)\n\n    this.layerElement.appendChild(this.innerElem)\n  }\n\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect\n  }\n\n  function ProcessedElement(element, position) {\n    this.elem = element\n    this.pos = position\n  }\n\n  function IShapeElement() {}\n\n  IShapeElement.prototype = {\n    addShapeToModifiers: function (data) {\n      var i\n      var len = this.shapeModifiers.length\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data)\n      }\n    },\n    isShapeInAnimatedModifiers: function (data) {\n      var i = 0\n      var len = this.shapeModifiers.length\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\n          return true\n        }\n      }\n      return false\n    },\n    renderModifiers: function () {\n      if (!this.shapeModifiers.length) {\n        return\n      }\n      var i\n      var len = this.shapes.length\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset()\n      }\n\n      len = this.shapeModifiers.length\n      var shouldBreakProcess\n      for (i = len - 1; i >= 0; i -= 1) {\n        shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame)\n        // workaround to fix cases where a repeater resets the shape so the following processes get called twice\n        // TODO: find a better solution for this\n        if (shouldBreakProcess) {\n          break\n        }\n      }\n    },\n\n    searchProcessedElement: function (elem) {\n      var elements = this.processedElements\n      var i = 0\n      var len = elements.length\n      while (i < len) {\n        if (elements[i].elem === elem) {\n          return elements[i].pos\n        }\n        i += 1\n      }\n      return 0\n    },\n    addProcessedElement: function (elem, pos) {\n      var elements = this.processedElements\n      var i = elements.length\n      while (i) {\n        i -= 1\n        if (elements[i].elem === elem) {\n          elements[i].pos = pos\n          return\n        }\n      }\n      elements.push(new ProcessedElement(elem, pos))\n    },\n    prepareFrame: function (num) {\n      this.prepareRenderableFrame(num)\n      this.prepareProperties(num, this.isInRange)\n    },\n  }\n\n  const lineCapEnum = {\n    1: 'butt',\n    2: 'round',\n    3: 'square',\n  }\n\n  const lineJoinEnum = {\n    1: 'miter',\n    2: 'round',\n    3: 'bevel',\n  }\n\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = []\n    this.styles = []\n    this.transformers = transformers\n    this.lStr = ''\n    this.sh = shape\n    this.lvl = level\n    // TODO find if there are some cases where _isAnimated can be false.\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\n    this._isAnimated = !!shape.k\n    // TODO: commenting this for now since all shapes are animated\n    var i = 0\n    var len = transformers.length\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true\n        break\n      }\n      i += 1\n    }\n  }\n\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true\n  }\n\n  function SVGStyleData(data, level) {\n    this.data = data\n    this.type = data.ty\n    this.d = ''\n    this.lvl = level\n    this._mdf = false\n    this.closed = data.hd === true\n    this.pElem = createNS('path')\n    this.msElem = null\n  }\n\n  SVGStyleData.prototype.reset = function () {\n    this.d = ''\n    this._mdf = false\n  }\n\n  function DashProperty(elem, data, renderer, container) {\n    this.elem = elem\n    this.frameId = -1\n    this.dataProps = createSizedArray(data.length)\n    this.renderer = renderer\n    this.k = false\n    this.dashStr = ''\n    this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0)\n    this.dashoffset = createTypedArray('float32', 1)\n    this.initDynamicPropertyContainer(container)\n    var i\n    var len = data.length || 0\n    var prop\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this)\n      this.k = prop.k || this.k\n      this.dataProps[i] = { n: data[i].n, p: prop }\n    }\n    if (!this.k) {\n      this.getValue(true)\n    }\n    this._isAnimated = this.k\n  }\n\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return\n    }\n    this.frameId = this.elem.globalData.frameId\n    this.iterateDynamicProperties()\n    this._mdf = this._mdf || forceRender\n    if (this._mdf) {\n      var i = 0\n      var len = this.dataProps.length\n      if (this.renderer === 'svg') {\n        this.dashStr = ''\n      }\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n !== 'o') {\n          if (this.renderer === 'svg') {\n            this.dashStr += ' ' + this.dataProps[i].p.v\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v\n        }\n      }\n    }\n  }\n  extendPrototype([DynamicPropertyContainer], DashProperty)\n\n  function SVGStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this)\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this)\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this)\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this)\n    this.style = styleOb\n    this._isAnimated = !!this._isAnimated\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData)\n\n  function SVGFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this)\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this)\n    this.style = styleOb\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData)\n\n  function SVGNoStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.style = styleOb\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGNoStyleData)\n\n  function GradientProperty(elem, data, container) {\n    this.data = data\n    this.c = createTypedArray('uint8c', data.p * 4)\n    var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4\n    this.o = createTypedArray('float32', cLength)\n    this._cmdf = false\n    this._omdf = false\n    this._collapsable = this.checkCollapsable()\n    this._hasOpacity = cLength\n    this.initDynamicPropertyContainer(container)\n    this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this)\n    this.k = this.prop.k\n    this.getValue(true)\n  }\n\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0\n    var len = this.o.length / 2\n    var diff\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2])\n      if (diff > 0.01) {\n        return false\n      }\n      i += 1\n    }\n    return true\n  }\n\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false\n    }\n    if (this.data.k.k[0].s) {\n      var i = 0\n      var len = this.data.k.k.length\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false\n        }\n        i += 1\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false\n    }\n    return true\n  }\n\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue()\n    this._mdf = false\n    this._cmdf = false\n    this._omdf = false\n    if (this.prop._mdf || forceRender) {\n      var i\n      var len = this.data.p * 4\n      var mult\n      var val\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255\n        val = Math.round(this.prop.v[i] * mult)\n        if (this.c[i] !== val) {\n          this.c[i] = val\n          this._cmdf = !forceRender\n        }\n      }\n      if (this.o.length) {\n        len = this.prop.v.length\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1\n          val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i]\n          if (this.o[i - this.data.p * 4] !== val) {\n            this.o[i - this.data.p * 4] = val\n            this._omdf = !forceRender\n          }\n        }\n      }\n      this._mdf = !forceRender\n    }\n  }\n\n  extendPrototype([DynamicPropertyContainer], GradientProperty)\n\n  function SVGGradientFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.initGradientData(elem, data, styleOb)\n  }\n\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this)\n    this.s = PropertyFactory.getProp(elem, data.s, 1, null, this)\n    this.e = PropertyFactory.getProp(elem, data.e, 1, null, this)\n    this.h = PropertyFactory.getProp(elem, data.h || { k: 0 }, 0, 0.01, this)\n    this.a = PropertyFactory.getProp(elem, data.a || { k: 0 }, 0, degToRads, this)\n    this.g = new GradientProperty(elem, data.g, this)\n    this.style = styleOb\n    this.stops = []\n    this.setGradientData(styleOb.pElem, data)\n    this.setGradientOpacity(data, styleOb)\n    this._isAnimated = !!this._isAnimated\n  }\n\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\n    var gradientId = createElementID()\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient')\n    gfill.setAttribute('id', gradientId)\n    gfill.setAttribute('spreadMethod', 'pad')\n    gfill.setAttribute('gradientUnits', 'userSpaceOnUse')\n    var stops = []\n    var stop\n    var j\n    var jLen\n    jLen = data.g.p * 4\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS('stop')\n      gfill.appendChild(stop)\n      stops.push(stop)\n    }\n    pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + gradientId + ')')\n    this.gf = gfill\n    this.cst = stops\n  }\n\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop\n      var j\n      var jLen\n      var mask = createNS('mask')\n      var maskElement = createNS('path')\n      mask.appendChild(maskElement)\n      var opacityId = createElementID()\n      var maskId = createElementID()\n      mask.setAttribute('id', maskId)\n      var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient')\n      opFill.setAttribute('id', opacityId)\n      opFill.setAttribute('spreadMethod', 'pad')\n      opFill.setAttribute('gradientUnits', 'userSpaceOnUse')\n      jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length\n      var stops = this.stops\n      for (j = data.g.p * 4; j < jLen; j += 2) {\n        stop = createNS('stop')\n        stop.setAttribute('stop-color', 'rgb(255,255,255)')\n        opFill.appendChild(stop)\n        stops.push(stop)\n      }\n      maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + opacityId + ')')\n      if (data.ty === 'gs') {\n        maskElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2])\n        maskElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2])\n        if (data.lj === 1) {\n          maskElement.setAttribute('stroke-miterlimit', data.ml)\n        }\n      }\n      this.of = opFill\n      this.ms = mask\n      this.ost = stops\n      this.maskId = maskId\n      styleOb.msElem = maskElement\n    }\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData)\n\n  function SVGGradientStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this)\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this)\n    this.initGradientData(elem, data, styleOb)\n    this._isAnimated = !!this._isAnimated\n  }\n\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData)\n\n  function ShapeGroupData() {\n    this.it = []\n    this.prevViewData = []\n    this.gr = createNS('g')\n  }\n\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps: mProps,\n      op: op,\n      container: container,\n    }\n    this.elements = []\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length\n  }\n\n  const buildShapeString = function (pathNodes, length, closed, mat) {\n    if (length === 0) {\n      return ''\n    }\n    var _o = pathNodes.o\n    var _i = pathNodes.i\n    var _v = pathNodes.v\n    var i\n    var shapeString = ' M' + mat.applyToPointStringified(_v[0][0], _v[0][1])\n    for (i = 1; i < length; i += 1) {\n      shapeString +=\n        ' C' +\n        mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) +\n        ' ' +\n        mat.applyToPointStringified(_i[i][0], _i[i][1]) +\n        ' ' +\n        mat.applyToPointStringified(_v[i][0], _v[i][1])\n    }\n    if (closed && length) {\n      shapeString +=\n        ' C' +\n        mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) +\n        ' ' +\n        mat.applyToPointStringified(_i[0][0], _i[0][1]) +\n        ' ' +\n        mat.applyToPointStringified(_v[0][0], _v[0][1])\n      shapeString += 'z'\n    }\n    return shapeString\n  }\n\n  const SVGElementsRenderer = (function () {\n    var _identityMatrix = new Matrix()\n    var _matrixHelper = new Matrix()\n\n    var ob = {\n      createRenderFunction: createRenderFunction,\n    }\n\n    function createRenderFunction(data) {\n      switch (data.ty) {\n        case 'fl':\n          return renderFill\n        case 'gf':\n          return renderGradient\n        case 'gs':\n          return renderGradientStroke\n        case 'st':\n          return renderStroke\n        case 'sh':\n        case 'el':\n        case 'rc':\n        case 'sr':\n          return renderPath\n        case 'tr':\n          return renderContentTransform\n        case 'no':\n          return renderNoop\n        default:\n          return null\n      }\n    }\n\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute('opacity', itemData.transform.op.v)\n      }\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS())\n      }\n    }\n\n    function renderNoop() {}\n\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j\n      var jLen\n      var pathStringTransformed\n      var redraw\n      var pathNodes\n      var l\n      var lLen = itemData.styles.length\n      var lvl = itemData.lvl\n      var paths\n      var mat\n      var props\n      var iterations\n      var k\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset()\n          iterations = lvl - itemData.styles[l].lvl\n          k = itemData.transformers.length - 1\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw\n            iterations -= 1\n            k -= 1\n          }\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl\n            k = itemData.transformers.length - 1\n            while (iterations > 0) {\n              props = itemData.transformers[k].mProps.v.props\n              mat.transform(\n                props[0],\n                props[1],\n                props[2],\n                props[3],\n                props[4],\n                props[5],\n                props[6],\n                props[7],\n                props[8],\n                props[9],\n                props[10],\n                props[11],\n                props[12],\n                props[13],\n                props[14],\n                props[15],\n              )\n              iterations -= 1\n              k -= 1\n            }\n          }\n        } else {\n          mat = _identityMatrix\n        }\n        paths = itemData.sh.paths\n        jLen = paths._length\n        if (redraw) {\n          pathStringTransformed = ''\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j]\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat)\n            }\n          }\n          itemData.caches[l] = pathStringTransformed\n        } else {\n          pathStringTransformed = itemData.caches[l]\n        }\n        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf\n      }\n    }\n\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style\n\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\n          'fill',\n          'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')',\n        )\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill-opacity', itemData.o.v)\n      }\n    }\n\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame)\n      renderStroke(styleData, itemData, isFirstFrame)\n    }\n\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf\n      var hasOpacity = itemData.g._hasOpacity\n      var pt1 = itemData.s.v\n      var pt2 = itemData.e.v\n\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity'\n        itemData.style.pElem.setAttribute(attr, itemData.o.v)\n      }\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx'\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy'\n        gfill.setAttribute(attr1, pt1[0])\n        gfill.setAttribute(attr2, pt1[1])\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0])\n          itemData.of.setAttribute(attr2, pt1[1])\n        }\n      }\n      var stops\n      var i\n      var len\n      var stop\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst\n        var cValues = itemData.g.c\n        len = stops.length\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i]\n          stop.setAttribute('offset', cValues[i * 4] + '%')\n          stop.setAttribute(\n            'stop-color',\n            'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')',\n          )\n        }\n      }\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o\n        if (itemData.g._collapsable) {\n          stops = itemData.cst\n        } else {\n          stops = itemData.ost\n        }\n        len = stops.length\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i]\n          if (!itemData.g._collapsable) {\n            stop.setAttribute('offset', oValues[i * 2] + '%')\n          }\n          stop.setAttribute('stop-opacity', oValues[i * 2 + 1])\n        }\n      }\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute('x2', pt2[0])\n          gfill.setAttribute('y2', pt2[1])\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('x2', pt2[0])\n            itemData.of.setAttribute('y2', pt2[1])\n          }\n        }\n      } else {\n        var rad\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2))\n          gfill.setAttribute('r', rad)\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('r', rad)\n          }\n        }\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2))\n          }\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0])\n\n          var percent = itemData.h.v\n          if (percent >= 1) {\n            percent = 0.99\n          } else if (percent <= -1) {\n            percent = -0.99\n          }\n          var dist = rad * percent\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0]\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1]\n          gfill.setAttribute('fx', x)\n          gfill.setAttribute('fy', y)\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('fx', x)\n            itemData.of.setAttribute('fy', y)\n          }\n        }\n        // gfill.setAttribute('fy','200');\n      }\n    }\n\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style\n      var d = itemData.d\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr)\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0])\n      }\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute(\n          'stroke',\n          'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')',\n        )\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v)\n      }\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v)\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute('stroke-width', itemData.w.v)\n        }\n      }\n    }\n\n    return ob\n  })()\n\n  function SVGShapeElement(data, globalData, comp) {\n    // List of drawable elements\n    this.shapes = []\n    // Full shape data\n    this.shapesData = data.shapes\n    // List of styles that will be applied to shapes\n    this.stylesList = []\n    // List of modifiers that will be applied to shapes\n    this.shapeModifiers = []\n    // List of items in shape tree\n    this.itemsData = []\n    // List of items in previous shape tree\n    this.processedElements = []\n    // List of animated components\n    this.animatedContents = []\n    this.initElement(data, globalData, comp)\n    // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n    this.prevViewData = []\n    // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n  }\n\n  extendPrototype(\n    [\n      BaseElement,\n      TransformElement,\n      SVGBaseElement,\n      IShapeElement,\n      HierarchyElement,\n      FrameElement,\n      RenderableDOMElement,\n    ],\n    SVGShapeElement,\n  )\n\n  SVGShapeElement.prototype.initSecondaryElement = function () {}\n\n  SVGShapeElement.prototype.identityMatrix = new Matrix()\n\n  SVGShapeElement.prototype.buildExpressionInterface = function () {}\n\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true)\n    this.filterUniqueShapes()\n  }\n\n  /*\nThis method searches for multiple shapes that affect a single element and one of them is animated\n*/\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i\n    var len = this.shapes.length\n    var shape\n    var j\n    var jLen = this.stylesList.length\n    var style\n    var tempShapes = []\n    var areAnimated = false\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j]\n      areAnimated = false\n      tempShapes.length = 0\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i]\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape)\n          areAnimated = shape._isAnimated || areAnimated\n        }\n      }\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes)\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i\n    var len = shapes.length\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated()\n    }\n  }\n\n  SVGShapeElement.prototype.createStyleElement = function (data, level) {\n    // TODO: prevent drawing of hidden styles\n    var elementData\n    var styleOb = new SVGStyleData(data, level)\n\n    var pathElement = styleOb.pElem\n    if (data.ty === 'st') {\n      elementData = new SVGStrokeStyleData(this, data, styleOb)\n    } else if (data.ty === 'fl') {\n      elementData = new SVGFillStyleData(this, data, styleOb)\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      var GradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData\n      elementData = new GradientConstructor(this, data, styleOb)\n      this.globalData.defs.appendChild(elementData.gf)\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms)\n        this.globalData.defs.appendChild(elementData.of)\n        pathElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + elementData.maskId + ')')\n      }\n    } else if (data.ty === 'no') {\n      elementData = new SVGNoStyleData(this, data, styleOb)\n    }\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      pathElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2])\n      pathElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2])\n      pathElement.setAttribute('fill-opacity', '0')\n      if (data.lj === 1) {\n        pathElement.setAttribute('stroke-miterlimit', data.ml)\n      }\n    }\n\n    if (data.r === 2) {\n      pathElement.setAttribute('fill-rule', 'evenodd')\n    }\n\n    if (data.ln) {\n      pathElement.setAttribute('id', data.ln)\n    }\n    if (data.cl) {\n      pathElement.setAttribute('class', data.cl)\n    }\n    if (data.bm) {\n      pathElement.style['mix-blend-mode'] = getBlendMode(data.bm)\n    }\n    this.stylesList.push(styleOb)\n    this.addToAnimatedContents(data, elementData)\n    return elementData\n  }\n\n  SVGShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = new ShapeGroupData()\n    if (data.ln) {\n      elementData.gr.setAttribute('id', data.ln)\n    }\n    if (data.cl) {\n      elementData.gr.setAttribute('class', data.cl)\n    }\n    if (data.bm) {\n      elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm)\n    }\n    return elementData\n  }\n\n  SVGShapeElement.prototype.createTransformElement = function (data, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this)\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container)\n    this.addToAnimatedContents(data, elementData)\n    return elementData\n  }\n\n  SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\n    var ty = 4\n    if (data.ty === 'rc') {\n      ty = 5\n    } else if (data.ty === 'el') {\n      ty = 6\n    } else if (data.ty === 'sr') {\n      ty = 7\n    }\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this)\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty)\n    this.shapes.push(elementData)\n    this.addShapeToModifiers(elementData)\n    this.addToAnimatedContents(data, elementData)\n    return elementData\n  }\n\n  SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\n    var i = 0\n    var len = this.animatedContents.length\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return\n      }\n      i += 1\n    }\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data),\n      element: element,\n      data: data,\n    })\n  }\n\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles\n    var j\n    var jLen = this.stylesList.length\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j])\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true\n    var i\n    var len = this.itemsData.length\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i]\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true)\n    this.filterUniqueShapes()\n    len = this.dynamicProperties.length\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue()\n    }\n    this.renderModifiers()\n  }\n\n  SVGShapeElement.prototype.searchShapes = function (\n    arr,\n    itemsData,\n    prevViewData,\n    container,\n    level,\n    transformers,\n    render,\n  ) {\n    var ownTransformers = [].concat(transformers)\n    var i\n    var len = arr.length - 1\n    var j\n    var jLen\n    var ownStyles = []\n    var ownModifiers = []\n    var currentTransform\n    var modifier\n    var processedPos\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i])\n      if (!processedPos) {\n        arr[i]._render = render\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1]\n      }\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs' || arr[i].ty === 'no') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level)\n        } else {\n          itemsData[i].style.closed = false\n        }\n        if (arr[i]._render) {\n          if (itemsData[i].style.pElem.parentNode !== container) {\n            container.appendChild(itemsData[i].style.pElem)\n          }\n        }\n        ownStyles.push(itemsData[i].style)\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i])\n        } else {\n          jLen = itemsData[i].it.length\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j]\n          }\n        }\n        this.searchShapes(\n          arr[i].it,\n          itemsData[i].it,\n          itemsData[i].prevViewData,\n          itemsData[i].gr,\n          level + 1,\n          ownTransformers,\n          render,\n        )\n        if (arr[i]._render) {\n          if (itemsData[i].gr.parentNode !== container) {\n            container.appendChild(itemsData[i].gr)\n          }\n        }\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container)\n        }\n        currentTransform = itemsData[i].transform\n        ownTransformers.push(currentTransform)\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level)\n        }\n        this.setElementStyles(itemsData[i])\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'ms' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          modifier.init(this, arr[i])\n          itemsData[i] = modifier\n          this.shapeModifiers.push(modifier)\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = false\n        }\n        ownModifiers.push(modifier)\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          itemsData[i] = modifier\n          modifier.init(this, arr, i, itemsData)\n          this.shapeModifiers.push(modifier)\n          render = false\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = true\n        }\n        ownModifiers.push(modifier)\n      }\n      this.addProcessedElement(arr[i], i + 1)\n    }\n    len = ownStyles.length\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true\n    }\n    len = ownModifiers.length\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true\n    }\n  }\n\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers()\n    var i\n    var len = this.stylesList.length\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset()\n    }\n    this.renderShape()\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d)\n          // Adding M0 0 fixes same mask bug on all browsers\n          this.stylesList[i].d = 'M0 0' + this.stylesList[i].d\n        }\n        this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0')\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.renderShape = function () {\n    var i\n    var len = this.animatedContents.length\n    var animatedContent\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i]\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame)\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement()\n    this.shapesData = null\n    this.itemsData = null\n  }\n\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o\n    this.sw = sw\n    this.sc = sc\n    this.fc = fc\n    this.m = m\n    this.p = p\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true,\n    }\n  }\n\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false\n    this._mdf.sw = false\n    this._mdf.sc = false\n    this._mdf.fc = false\n    this._mdf.m = false\n    this._mdf.p = false\n    var updated = false\n\n    if (this.o !== o) {\n      this.o = o\n      this._mdf.o = true\n      updated = true\n    }\n    if (this.sw !== sw) {\n      this.sw = sw\n      this._mdf.sw = true\n      updated = true\n    }\n    if (this.sc !== sc) {\n      this.sc = sc\n      this._mdf.sc = true\n      updated = true\n    }\n    if (this.fc !== fc) {\n      this.fc = fc\n      this._mdf.fc = true\n      updated = true\n    }\n    if (this.m !== m) {\n      this.m = m\n      this._mdf.m = true\n      updated = true\n    }\n    if (\n      p.length &&\n      (this.p[0] !== p[0] ||\n        this.p[1] !== p[1] ||\n        this.p[4] !== p[4] ||\n        this.p[5] !== p[5] ||\n        this.p[12] !== p[12] ||\n        this.p[13] !== p[13])\n    ) {\n      this.p = p\n      this._mdf.p = true\n      updated = true\n    }\n    return updated\n  }\n\n  function TextProperty(elem, data) {\n    this._frameId = initialDefaultFrame\n    this.pv = ''\n    this.v = ''\n    this.kf = false\n    this._isFirstFrame = true\n    this._mdf = false\n    this.data = data\n    this.elem = elem\n    this.comp = this.elem.comp\n    this.keysIndex = 0\n    this.canResize = false\n    this.minimumFontSize = 1\n    this.effectsSequence = []\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: '',\n      fStyle: '',\n      fWeight: '',\n      fc: '',\n      j: '',\n      justifyOffset: '',\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: '',\n      of: '',\n      s: '',\n      sc: '',\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false,\n    }\n    this.copyData(this.currentData, this.data.d.k[0].s)\n\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData)\n    }\n  }\n\n  TextProperty.prototype.defaultBoxWidth = [0, 0]\n\n  TextProperty.prototype.copyData = function (obj, data) {\n    for (var s in data) {\n      if (Object.prototype.hasOwnProperty.call(data, s)) {\n        obj[s] = data[s]\n      }\n    }\n    return obj\n  }\n\n  TextProperty.prototype.setCurrentData = function (data) {\n    if (!data.__complete) {\n      this.completeTextData(data)\n    }\n    this.currentData = data\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth\n    this._mdf = true\n  }\n\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes()\n  }\n\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this))\n    }\n    return this.kf\n  }\n\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction)\n    this.elem.addDynamicProperty(this)\n  }\n\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return\n    }\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t\n    var currentValue = this.currentData\n    var currentIndex = this.keysIndex\n    if (this.lock) {\n      this.setCurrentData(this.currentData)\n      return\n    }\n    this.lock = true\n    this._mdf = false\n    var i\n    var len = this.effectsSequence.length\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s\n    for (i = 0; i < len; i += 1) {\n      // Checking if index changed to prevent creating a new object every time the expression updates.\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t)\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t)\n      }\n    }\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue)\n    }\n    this.v = this.currentData\n    this.pv = this.v\n    this.lock = false\n    this.frameId = this.elem.globalData.frameId\n  }\n\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k\n    var frameNum = this.elem.comp.renderedFrame\n    var i = 0\n    var len = textKeys.length\n    while (i <= len - 1) {\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break\n      }\n      i += 1\n    }\n    if (this.keysIndex !== i) {\n      this.keysIndex = i\n    }\n    return this.data.d.k[this.keysIndex].s\n  }\n\n  TextProperty.prototype.buildFinalText = function (text) {\n    var charactersArray = []\n    var i = 0\n    var len = text.length\n    var charCode\n    var secondCharCode\n    var shouldCombine = false\n    while (i < len) {\n      charCode = text.charCodeAt(i)\n      if (FontManager.isCombinedCharacter(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i)\n      } else if (charCode >= 0xd800 && charCode <= 0xdbff) {\n        secondCharCode = text.charCodeAt(i + 1)\n        if (secondCharCode >= 0xdc00 && secondCharCode <= 0xdfff) {\n          if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {\n            charactersArray[charactersArray.length - 1] += text.substr(i, 2)\n            shouldCombine = false\n          } else {\n            charactersArray.push(text.substr(i, 2))\n          }\n          i += 1\n        } else {\n          charactersArray.push(text.charAt(i))\n        }\n      } else if (charCode > 0xdbff) {\n        secondCharCode = text.charCodeAt(i + 1)\n        if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {\n          shouldCombine = true\n          charactersArray[charactersArray.length - 1] += text.substr(i, 2)\n          i += 1\n        } else {\n          charactersArray.push(text.charAt(i))\n        }\n      } else if (FontManager.isZeroWidthJoiner(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i)\n        shouldCombine = true\n      } else {\n        charactersArray.push(text.charAt(i))\n      }\n      i += 1\n    }\n    return charactersArray\n  }\n\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true\n    var fontManager = this.elem.globalData.fontManager\n    var data = this.data\n    var letters = []\n    var i\n    var len\n    var newLineFlag\n    var index = 0\n    var val\n    var anchorGrouping = data.m.g\n    var currentSize = 0\n    var currentPos = 0\n    var currentLine = 0\n    var lineWidths = []\n    var lineWidth = 0\n    var maxLineWidth = 0\n    var j\n    var jLen\n    var fontData = fontManager.getFontByName(documentData.f)\n    var charData\n    var cLength = 0\n\n    var fontProps = getFontProperties(fontData)\n    documentData.fWeight = fontProps.weight\n    documentData.fStyle = fontProps.style\n    documentData.finalSize = documentData.s\n    documentData.finalText = this.buildFinalText(documentData.t)\n    len = documentData.finalText.length\n    documentData.finalLineHeight = documentData.lh\n    var trackingOffset = (documentData.tr / 1000) * documentData.finalSize\n    var charCode\n    if (documentData.sz) {\n      var flag = true\n      var boxWidth = documentData.sz[0]\n      var boxHeight = documentData.sz[1]\n      var currentHeight\n      var finalText\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t)\n        currentHeight = 0\n        lineWidth = 0\n        len = finalText.length\n        trackingOffset = (documentData.tr / 1000) * documentData.finalSize\n        var lastSpaceIndex = -1\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0)\n          newLineFlag = false\n          if (finalText[i] === ' ') {\n            lastSpaceIndex = i\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0\n            newLineFlag = true\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2\n          }\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily)\n            cLength = newLineFlag ? 0 : (charData.w * documentData.finalSize) / 100\n          } else {\n            // tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize)\n          }\n          if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {\n            if (lastSpaceIndex === -1) {\n              len += 1\n            } else {\n              i = lastSpaceIndex\n            }\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, '\\r')\n            // finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\n            lastSpaceIndex = -1\n            lineWidth = 0\n          } else {\n            lineWidth += cLength\n            lineWidth += trackingOffset\n          }\n        }\n        currentHeight += (fontData.ascent * documentData.finalSize) / 100\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1\n          documentData.finalLineHeight = (documentData.finalSize * documentData.lh) / documentData.s\n        } else {\n          documentData.finalText = finalText\n          len = documentData.finalText.length\n          flag = false\n        }\n      }\n    }\n    lineWidth = -trackingOffset\n    cLength = 0\n    var uncollapsedSpaces = 0\n    var currentChar\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false\n      currentChar = documentData.finalText[i]\n      charCode = currentChar.charCodeAt(0)\n      if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0\n        lineWidths.push(lineWidth)\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth\n        lineWidth = -2 * trackingOffset\n        val = ''\n        newLineFlag = true\n        currentLine += 1\n      } else {\n        val = currentChar\n      }\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(\n          currentChar,\n          fontData.fStyle,\n          fontManager.getFontByName(documentData.f).fFamily,\n        )\n        cLength = newLineFlag ? 0 : (charData.w * documentData.finalSize) / 100\n      } else {\n        // var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\n        // tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\n        cLength = fontManager.measureText(val, documentData.f, documentData.finalSize)\n      }\n\n      //\n      if (currentChar === ' ') {\n        uncollapsedSpaces += cLength + trackingOffset\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces\n        uncollapsedSpaces = 0\n      }\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val,\n        line: currentLine,\n        animatorJustifyOffset: 0,\n      })\n      if (anchorGrouping == 2) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength\n        if (val === '' || val === ' ' || i === len - 1) {\n          if (val === '' || val === ' ') {\n            currentSize -= cLength\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize\n            letters[currentPos].ind = index\n            letters[currentPos].extra = cLength\n            currentPos += 1\n          }\n          index += 1\n          currentSize = 0\n        }\n      } else if (anchorGrouping == 3) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength\n        if (val === '' || i === len - 1) {\n          if (val === '') {\n            currentSize -= cLength\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize\n            letters[currentPos].ind = index\n            letters[currentPos].extra = cLength\n            currentPos += 1\n          }\n          currentSize = 0\n          index += 1\n        }\n      } else {\n        letters[index].ind = index\n        letters[index].extra = 0\n        index += 1\n      }\n    }\n    documentData.l = letters\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth\n    lineWidths.push(lineWidth)\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0]\n      documentData.justifyOffset = 0\n    } else {\n      documentData.boxWidth = maxLineWidth\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth\n          break\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2\n          break\n        default:\n          documentData.justifyOffset = 0\n      }\n    }\n    documentData.lineWidths = lineWidths\n\n    var animators = data.a\n    var animatorData\n    var letterData\n    jLen = animators.length\n    var based\n    var ind\n    var indexes = []\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j]\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true\n      }\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true\n      }\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true\n      }\n      ind = 0\n      based = animatorData.s.b\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i]\n        letterData.anIndexes[j] = ind\n        if (\n          (based == 1 && letterData.val !== '') ||\n          (based == 2 && letterData.val !== '' && letterData.val !== ' ') ||\n          (based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1)) ||\n          (based == 4 && (letterData.n || i == len - 1))\n        ) {\n          // eslint-disable-line eqeqeq\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind)\n          }\n          ind += 1\n        }\n      }\n      data.a[j].s.totalChars = ind\n      var currentInd = -1\n      var newInd\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i]\n          if (currentInd != letterData.anIndexes[j]) {\n            // eslint-disable-line eqeqeq\n            currentInd = letterData.anIndexes[j]\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0]\n          }\n          letterData.anIndexes[j] = newInd\n        }\n      }\n    }\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2\n    documentData.ls = documentData.ls || 0\n    documentData.ascent = (fontData.ascent * documentData.finalSize) / 100\n  }\n\n  TextProperty.prototype.updateDocumentData = function (newData, index) {\n    index = index === undefined ? this.keysIndex : index\n    var dData = this.copyData({}, this.data.d.k[index].s)\n    dData = this.copyData(dData, newData)\n    this.data.d.k[index].s = dData\n    this.recalculate(index)\n    this.elem.addDynamicProperty(this)\n  }\n\n  TextProperty.prototype.recalculate = function (index) {\n    var dData = this.data.d.k[index].s\n    dData.__complete = false\n    this.keysIndex = 0\n    this._isFirstFrame = true\n    this.getValue(dData)\n  }\n\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize\n    this.recalculate(this.keysIndex)\n    this.elem.addDynamicProperty(this)\n  }\n\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1\n    this.recalculate(this.keysIndex)\n    this.elem.addDynamicProperty(this)\n  }\n\n  const TextSelectorProp = (function () {\n    var max = Math.max\n    var min = Math.min\n    var floor = Math.floor\n\n    function TextSelectorPropFactory(elem, data) {\n      this._currentTextLength = -1\n      this.k = false\n      this.data = data\n      this.elem = elem\n      this.comp = elem.comp\n      this.finalS = 0\n      this.finalE = 0\n      this.initDynamicPropertyContainer(elem)\n      this.s = PropertyFactory.getProp(elem, data.s || { k: 0 }, 0, 0, this)\n      if ('e' in data) {\n        this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this)\n      } else {\n        this.e = { v: 100 }\n      }\n      this.o = PropertyFactory.getProp(elem, data.o || { k: 0 }, 0, 0, this)\n      this.xe = PropertyFactory.getProp(elem, data.xe || { k: 0 }, 0, 0, this)\n      this.ne = PropertyFactory.getProp(elem, data.ne || { k: 0 }, 0, 0, this)\n      this.sm = PropertyFactory.getProp(elem, data.sm || { k: 100 }, 0, 0, this)\n      this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this)\n      if (!this.dynamicProperties.length) {\n        this.getValue()\n      }\n    }\n\n    TextSelectorPropFactory.prototype = {\n      getMult: function (ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue()\n        }\n        var x1 = 0\n        var y1 = 0\n        var x2 = 1\n        var y2 = 1\n        if (this.ne.v > 0) {\n          x1 = this.ne.v / 100.0\n        } else {\n          y1 = -this.ne.v / 100.0\n        }\n        if (this.xe.v > 0) {\n          x2 = 1.0 - this.xe.v / 100.0\n        } else {\n          y2 = 1.0 + this.xe.v / 100.0\n        }\n        var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get\n\n        var mult = 0\n        var s = this.finalS\n        var e = this.finalE\n        var type = this.data.sh\n        if (type === 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1))\n          }\n          mult = easer(mult)\n        } else if (type === 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1))\n          }\n\n          mult = easer(mult)\n        } else if (type === 4) {\n          if (e === s) {\n            mult = 0\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1))\n            if (mult < 0.5) {\n              mult *= 2\n            } else {\n              mult = 1 - 2 * (mult - 0.5)\n            }\n          }\n          mult = easer(mult)\n        } else if (type === 5) {\n          if (e === s) {\n            mult = 0\n          } else {\n            var tot = e - s\n            /* ind += 0.5;\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */\n            ind = min(max(0, ind + 0.5 - s), e - s)\n            var x = -tot / 2 + ind\n            var a = tot / 2\n            mult = Math.sqrt(1 - (x * x) / (a * a))\n          }\n          mult = easer(mult)\n        } else if (type === 6) {\n          if (e === s) {\n            mult = 0\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s)\n            mult = (1 + Math.cos(Math.PI + (Math.PI * 2 * ind) / (e - s))) / 2 // eslint-disable-line\n          }\n          mult = easer(mult)\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = max(0, min(min(e, 1) - (s - ind), 1))\n            } else {\n              mult = max(0, min(e - ind, 1))\n            }\n          }\n          mult = easer(mult)\n        }\n        // Smoothness implementation.\n        // The smoothness represents a reduced range of the original [0; 1] range.\n        // if smoothness is 25%, the new range will be [0.375; 0.625]\n        // Steps are:\n        // - find the lower value of the new range (threshold)\n        // - if multiplier is smaller than that value, floor it to 0\n        // - if it is larger,\n        //     - subtract the threshold\n        //     - divide it by the smoothness (this will return the range to [0; 1])\n        // Note: If it doesn't work on some scenarios, consider applying it before the easer.\n        if (this.sm.v !== 100) {\n          var smoothness = this.sm.v * 0.01\n          if (smoothness === 0) {\n            smoothness = 0.00000001\n          }\n          var threshold = 0.5 - smoothness * 0.5\n          if (mult < threshold) {\n            mult = 0\n          } else {\n            mult = (mult - threshold) / smoothness\n            if (mult > 1) {\n              mult = 1\n            }\n          }\n        }\n        return mult * this.a.v\n      },\n      getValue: function (newCharsFlag) {\n        this.iterateDynamicProperties()\n        this._mdf = newCharsFlag || this._mdf\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength\n        }\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars\n        var o = this.o.v / divisor\n        var s = this.s.v / divisor + o\n        var e = this.e.v / divisor + o\n        if (s > e) {\n          var _s = s\n          s = e\n          e = _s\n        }\n        this.finalS = s\n        this.finalE = e\n      },\n    }\n    extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory)\n\n    function getTextSelectorProp(elem, data, arr) {\n      return new TextSelectorPropFactory(elem, data, arr)\n    }\n\n    return {\n      getTextSelectorProp: getTextSelectorProp,\n    }\n  })()\n\n  function TextAnimatorDataProperty(elem, animatorProps, container) {\n    var defaultData = { propType: false }\n    var getProp = PropertyFactory.getProp\n    var textAnimatorAnimatables = animatorProps.a\n    this.a = {\n      r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\n      o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\n      sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData,\n    }\n\n    this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container)\n    this.s.t = animatorProps.s.t\n  }\n\n  function TextAnimatorProperty(textData, renderType, elem) {\n    this._isFirstFrame = true\n    this._hasMaskedPath = false\n    this._frameId = -1\n    this._textData = textData\n    this._renderType = renderType\n    this._elem = elem\n    this._animatorsData = createSizedArray(this._textData.a.length)\n    this._pathData = {}\n    this._moreOptions = {\n      alignment: {},\n    }\n    this.renderedLetters = []\n    this.lettersChangedFlag = false\n    this.initDynamicPropertyContainer(elem)\n  }\n\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i\n    var len = this._textData.a.length\n    var animatorProps\n    var getProp = PropertyFactory.getProp\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i]\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this)\n    }\n    if (this._textData.p && 'm' in this._textData.p) {\n      this._pathData = {\n        a: getProp(this._elem, this._textData.p.a, 0, 0, this),\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: getProp(this._elem, this._textData.p.r, 0, 0, this),\n        p: getProp(this._elem, this._textData.p.p, 0, 0, this),\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m),\n      }\n      this._hasMaskedPath = true\n    } else {\n      this._hasMaskedPath = false\n    }\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this)\n  }\n\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return\n    }\n    this._isFirstFrame = false\n    var alignment = this._moreOptions.alignment.v\n    var animators = this._animatorsData\n    var textData = this._textData\n    var matrixHelper = this.mHelper\n    var renderType = this._renderType\n    var renderedLettersCount = this.renderedLetters.length\n    var xPos\n    var yPos\n    var i\n    var len\n    var letters = documentData.l\n    var pathInfo\n    var currentLength\n    var currentPoint\n    var segmentLength\n    var flag\n    var pointInd\n    var segmentInd\n    var prevPoint\n    var points\n    var segments\n    var partialLength\n    var totalLength\n    var perc\n    var tanAngle\n    var mask\n    if (this._hasMaskedPath) {\n      mask = this._pathData.m\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask.v\n        if (this._pathData.r.v) {\n          paths = paths.reverse()\n        }\n        // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\n        pathInfo = {\n          tLength: 0,\n          segments: [],\n        }\n        len = paths._length - 1\n        var bezierData\n        totalLength = 0\n        for (i = 0; i < len; i += 1) {\n          bezierData = bez.buildBezierData(\n            paths.v[i],\n            paths.v[i + 1],\n            [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\n            [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]],\n          )\n          pathInfo.tLength += bezierData.segmentLength\n          pathInfo.segments.push(bezierData)\n          totalLength += bezierData.segmentLength\n        }\n        i = len\n        if (mask.v.c) {\n          bezierData = bez.buildBezierData(\n            paths.v[i],\n            paths.v[0],\n            [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\n            [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]],\n          )\n          pathInfo.tLength += bezierData.segmentLength\n          pathInfo.segments.push(bezierData)\n          totalLength += bezierData.segmentLength\n        }\n        this._pathData.pi = pathInfo\n      }\n      pathInfo = this._pathData.pi\n\n      currentLength = this._pathData.f.v\n      segmentInd = 0\n      pointInd = 1\n      segmentLength = 0\n      flag = true\n      segments = pathInfo.segments\n      if (currentLength < 0 && mask.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength\n        }\n        segmentInd = segments.length - 1\n        points = segments[segmentInd].points\n        pointInd = points.length - 1\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength\n          pointInd -= 1\n          if (pointInd < 0) {\n            segmentInd -= 1\n            points = segments[segmentInd].points\n            pointInd = points.length - 1\n          }\n        }\n      }\n      points = segments[segmentInd].points\n      prevPoint = points[pointInd - 1]\n      currentPoint = points[pointInd]\n      partialLength = currentPoint.partialLength\n    }\n\n    len = letters.length\n    xPos = 0\n    yPos = 0\n    var yOff = documentData.finalSize * 1.2 * 0.714\n    var firstLine = true\n    var animatorProps\n    var animatorSelector\n    var j\n    var jLen\n    var letterValue\n\n    jLen = animators.length\n\n    var mult\n    var ind = -1\n    var offf\n    var xPathPos\n    var yPathPos\n    var initPathPos = currentLength\n    var initSegmentInd = segmentInd\n    var initPointInd = pointInd\n    var currentLine = -1\n    var elemOpacity\n    var sc\n    var sw\n    var fc\n    var k\n    var letterSw\n    var letterSc\n    var letterFc\n    var letterM = ''\n    var letterP = this.defaultPropsArray\n    var letterO\n\n    //\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0\n      var animatorFirstCharOffset = 0\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1\n      var lastIndex = 0\n      var isNewLine = true\n\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset\n          }\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset\n            lastIndex += 1\n          }\n          animatorJustifyOffset = 0\n          isNewLine = true\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult\n              }\n              animatorSelector = animators[j].s\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult\n              }\n            }\n          }\n          isNewLine = false\n        }\n      }\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset\n      }\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset\n        lastIndex += 1\n      }\n    }\n    //\n\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset()\n      elemOpacity = 1\n      if (letters[i].n) {\n        xPos = 0\n        yPos += documentData.yOffset\n        yPos += firstLine ? 1 : 0\n        currentLength = initPathPos\n        firstLine = false\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd\n          pointInd = initPointInd\n          points = segments[segmentInd].points\n          prevPoint = points[pointInd - 1]\n          currentPoint = points[pointInd]\n          partialLength = currentPoint.partialLength\n          segmentLength = 0\n        }\n        letterM = ''\n        letterFc = ''\n        letterSw = ''\n        letterO = ''\n        letterP = this.defaultPropsArray\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line]\n                break\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2\n                break\n              default:\n                break\n            }\n            currentLine = letters[i].line\n          }\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra\n            }\n            currentLength += letters[i].an / 2\n            ind = letters[i].ind\n          }\n          currentLength += alignment[0] * letters[i].an * 0.005\n          var animatorOffset = 0\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0]\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult\n              }\n            }\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0]\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult\n              }\n            }\n          }\n          flag = true\n          // Force alignment only works with a single line for now\n          if (this._pathData.a.v) {\n            currentLength =\n              letters[0].an * 0.5 +\n              ((totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind) /\n                (len - 1)\n            currentLength += this._pathData.f.v\n          }\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc\n              matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -(alignment[1] * yOff) * 0.01)\n              flag = false\n            } else if (points) {\n              segmentLength += currentPoint.partialLength\n              pointInd += 1\n              if (pointInd >= points.length) {\n                pointInd = 0\n                segmentInd += 1\n                if (!segments[segmentInd]) {\n                  if (mask.v.c) {\n                    pointInd = 0\n                    segmentInd = 0\n                    points = segments[segmentInd].points\n                  } else {\n                    segmentLength -= currentPoint.partialLength\n                    points = null\n                  }\n                } else {\n                  points = segments[segmentInd].points\n                }\n              }\n              if (points) {\n                prevPoint = currentPoint\n                currentPoint = points[pointInd]\n                partialLength = currentPoint.partialLength\n              }\n            }\n          }\n          offf = letters[i].an / 2 - letters[i].add\n          matrixHelper.translate(-offf, 0, 0)\n        } else {\n          offf = letters[i].an / 2 - letters[i].add\n          matrixHelper.translate(-offf, 0, 0)\n\n          // Grouping alignment\n          matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -alignment[1] * yOff * 0.01, 0)\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n            // This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0]\n                } else {\n                  currentLength += animatorProps.t.v * mult\n                }\n              } else if (mult.length) {\n                xPos += animatorProps.t.v * mult[0]\n              } else {\n                xPos += animatorProps.t.v * mult\n              }\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0\n        }\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]]\n          } else {\n            sc = [0, 0, 0]\n          }\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]]\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n\n            if (mult.length) {\n              matrixHelper.translate(\n                -animatorProps.a.v[0] * mult[0],\n                -animatorProps.a.v[1] * mult[1],\n                animatorProps.a.v[2] * mult[2],\n              )\n            } else {\n              matrixHelper.translate(\n                -animatorProps.a.v[0] * mult,\n                -animatorProps.a.v[1] * mult,\n                animatorProps.a.v[2] * mult,\n              )\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1)\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1)\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          animatorSelector = animators[j].s\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1])\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult)\n            }\n          }\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2])\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult)\n            }\n          }\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1])\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult)\n            }\n          }\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0])\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult)\n            }\n          }\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0]\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult\n            }\n          }\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0]\n            } else {\n              sw += animatorProps.sw.v * mult\n            }\n          }\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0]\n              } else {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult\n              }\n            }\n          }\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0]\n                } else {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult\n                }\n              }\n            }\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0])\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult)\n              }\n            }\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0])\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult)\n              }\n            }\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0])\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult)\n              }\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1])\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult)\n              }\n            } else if (mult.length) {\n              matrixHelper.translate(\n                animatorProps.p.v[0] * mult[0],\n                animatorProps.p.v[1] * mult[1],\n                -animatorProps.p.v[2] * mult[2],\n              )\n            } else {\n              matrixHelper.translate(\n                animatorProps.p.v[0] * mult,\n                animatorProps.p.v[1] * mult,\n                -animatorProps.p.v[2] * mult,\n              )\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw\n        }\n        if (documentData.strokeColorAnim) {\n          letterSc =\n            'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')'\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc =\n            'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')'\n        }\n\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls)\n\n          matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0)\n          if (this._pathData.p.v) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0])\n            var rot = (Math.atan(tanAngle) * 180) / Math.PI\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180\n            }\n            matrixHelper.rotate((-rot * Math.PI) / 180)\n          }\n          matrixHelper.translate(xPathPos, yPathPos, 0)\n          currentLength -= alignment[0] * letters[i].an * 0.005\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2\n            currentLength += documentData.tr * 0.001 * documentData.finalSize\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0)\n\n          if (documentData.ps) {\n            // matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0)\n          }\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(\n                letters[i].animatorJustifyOffset +\n                  documentData.justifyOffset +\n                  (documentData.boxWidth - documentData.lineWidths[letters[i].line]),\n                0,\n                0,\n              )\n              break\n            case 2:\n              matrixHelper.translate(\n                letters[i].animatorJustifyOffset +\n                  documentData.justifyOffset +\n                  (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2,\n                0,\n                0,\n              )\n              break\n            default:\n              break\n          }\n          matrixHelper.translate(0, -documentData.ls)\n          matrixHelper.translate(offf, 0, 0)\n          matrixHelper.translate(alignment[0] * letters[i].an * 0.005, alignment[1] * yOff * 0.01, 0)\n          xPos += letters[i].l + documentData.tr * 0.001 * documentData.finalSize\n        }\n        if (renderType === 'html') {\n          letterM = matrixHelper.toCSS()\n        } else if (renderType === 'svg') {\n          letterM = matrixHelper.to2dCSS()\n        } else {\n          letterP = [\n            matrixHelper.props[0],\n            matrixHelper.props[1],\n            matrixHelper.props[2],\n            matrixHelper.props[3],\n            matrixHelper.props[4],\n            matrixHelper.props[5],\n            matrixHelper.props[6],\n            matrixHelper.props[7],\n            matrixHelper.props[8],\n            matrixHelper.props[9],\n            matrixHelper.props[10],\n            matrixHelper.props[11],\n            matrixHelper.props[12],\n            matrixHelper.props[13],\n            matrixHelper.props[14],\n            matrixHelper.props[15],\n          ]\n        }\n        letterO = elemOpacity\n      }\n\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP)\n        this.renderedLetters.push(letterValue)\n        renderedLettersCount += 1\n        this.lettersChangedFlag = true\n      } else {\n        letterValue = this.renderedLetters[i]\n        this.lettersChangedFlag =\n          letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag\n      }\n    }\n  }\n\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return\n    }\n    this._frameId = this._elem.globalData.frameId\n    this.iterateDynamicProperties()\n  }\n\n  TextAnimatorProperty.prototype.mHelper = new Matrix()\n  TextAnimatorProperty.prototype.defaultPropsArray = []\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty)\n\n  function ITextElement() {}\n\n  ITextElement.prototype.initElement = function (data, globalData, comp) {\n    this.lettersChangedFlag = true\n    this.initFrame()\n    this.initBaseData(data, globalData, comp)\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties)\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this)\n    this.initTransform(data, globalData, comp)\n    this.initHierarchy()\n    this.initRenderable()\n    this.initRendererElement()\n    this.createContainerElements()\n    this.createRenderableComponents()\n    this.createContent()\n    this.hide()\n    this.textAnimator.searchProperties(this.dynamicProperties)\n  }\n\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false\n    this.prepareRenderableFrame(num)\n    this.prepareProperties(num, this.isInRange)\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText()\n      this.textProperty._isFirstFrame = false\n      this.textProperty._mdf = false\n    }\n  }\n\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j\n    var jLen = shapes.length\n    var pathNodes\n    var shapeStr = ''\n    for (j = 0; j < jLen; j += 1) {\n      if (shapes[j].ty === 'sh') {\n        pathNodes = shapes[j].ks.k\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper)\n      }\n    }\n    return shapeStr\n  }\n\n  ITextElement.prototype.updateDocumentData = function (newData, index) {\n    this.textProperty.updateDocumentData(newData, index)\n  }\n\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize)\n  }\n\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize)\n  }\n\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0)\n    }\n    matrixHelper.translate(0, -documentData.ls, 0)\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(\n          documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),\n          0,\n          0,\n        )\n        break\n      case 2:\n        matrixHelper.translate(\n          documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2,\n          0,\n          0,\n        )\n        break\n      default:\n        break\n    }\n    matrixHelper.translate(xPos, yPos, 0)\n  }\n\n  ITextElement.prototype.buildColor = function (colorData) {\n    return (\n      'rgb(' +\n      Math.round(colorData[0] * 255) +\n      ',' +\n      Math.round(colorData[1] * 255) +\n      ',' +\n      Math.round(colorData[2] * 255) +\n      ')'\n    )\n  }\n\n  ITextElement.prototype.emptyProp = new LetterProps()\n\n  ITextElement.prototype.destroy = function () {}\n\n  var emptyShapeData = {\n    shapes: [],\n  }\n\n  function SVGTextLottieElement(data, globalData, comp) {\n    this.textSpans = []\n    this.renderType = 'svg'\n    this.initElement(data, globalData, comp)\n  }\n\n  extendPrototype(\n    [BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement],\n    SVGTextLottieElement,\n  )\n\n  SVGTextLottieElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS('text')\n    }\n  }\n\n  SVGTextLottieElement.prototype.buildTextContents = function (textArray) {\n    var i = 0\n    var len = textArray.length\n    var textContents = []\n    var currentTextContent = ''\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent)\n        currentTextContent = ''\n      } else {\n        currentTextContent += textArray[i]\n      }\n      i += 1\n    }\n    textContents.push(currentTextContent)\n    return textContents\n  }\n\n  SVGTextLottieElement.prototype.buildShapeData = function (data, scale) {\n    // data should probably be cloned to apply scale separately to each instance of a text on different layers\n    // but since text internal content gets only rendered once and then it's never rerendered,\n    // it's probably safe not to clone data and reuse always the same instance even if the object is mutated.\n    // Avoiding cloning is preferred since cloning each character shape data is expensive\n    if (data.shapes && data.shapes.length) {\n      var shape = data.shapes[0]\n      if (shape.it) {\n        var shapeItem = shape.it[shape.it.length - 1]\n        if (shapeItem.s) {\n          shapeItem.s.k[0] = scale\n          shapeItem.s.k[1] = scale\n        }\n      }\n    }\n    return data\n  }\n\n  SVGTextLottieElement.prototype.buildNewText = function () {\n    this.addDynamicProperty(this)\n    var i\n    var len\n\n    var documentData = this.textProperty.currentData\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0)\n    if (documentData.fc) {\n      this.layerElement.setAttribute('fill', this.buildColor(documentData.fc))\n    } else {\n      this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)')\n    }\n    if (documentData.sc) {\n      this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc))\n      this.layerElement.setAttribute('stroke-width', documentData.sw)\n    }\n    this.layerElement.setAttribute('font-size', documentData.finalSize)\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f)\n    if (fontData.fClass) {\n      this.layerElement.setAttribute('class', fontData.fClass)\n    } else {\n      this.layerElement.setAttribute('font-family', fontData.fFamily)\n      var fWeight = documentData.fWeight\n      var fStyle = documentData.fStyle\n      this.layerElement.setAttribute('font-style', fStyle)\n      this.layerElement.setAttribute('font-weight', fWeight)\n    }\n    this.layerElement.setAttribute('aria-label', documentData.t)\n\n    var letters = documentData.l || []\n    var usesGlyphs = !!this.globalData.fontManager.chars\n    len = letters.length\n\n    var tSpan\n    var matrixHelper = this.mHelper\n    var shapeStr = ''\n    var singleShape = this.data.singleShape\n    var xPos = 0\n    var yPos = 0\n    var firstLine = true\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer\n      var justify = 'start'\n      switch (documentData.j) {\n        case 1:\n          justify = 'end'\n          break\n        case 2:\n          justify = 'middle'\n          break\n        default:\n          justify = 'start'\n          break\n      }\n      tElement.setAttribute('text-anchor', justify)\n      tElement.setAttribute('letter-spacing', trackingOffset)\n      var textContent = this.buildTextContents(documentData.finalText)\n      len = textContent.length\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i].span || createNS('tspan')\n        tSpan.textContent = textContent[i]\n        tSpan.setAttribute('x', 0)\n        tSpan.setAttribute('y', yPos)\n        tSpan.style.display = 'inherit'\n        tElement.appendChild(tSpan)\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            glyph: null,\n          }\n        }\n        this.textSpans[i].span = tSpan\n        yPos += documentData.finalLineHeight\n      }\n\n      this.layerElement.appendChild(tElement)\n    } else {\n      var cachedSpansLength = this.textSpans.length\n      var charData\n      for (i = 0; i < len; i += 1) {\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            childSpan: null,\n            glyph: null,\n          }\n        }\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? 'g' : 'text')\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute('stroke-linecap', 'butt')\n            tSpan.setAttribute('stroke-linejoin', 'round')\n            tSpan.setAttribute('stroke-miterlimit', '4')\n            this.textSpans[i].span = tSpan\n            if (usesGlyphs) {\n              var childSpan = createNS('g')\n              tSpan.appendChild(childSpan)\n              this.textSpans[i].childSpan = childSpan\n            }\n            this.textSpans[i].span = tSpan\n            this.layerElement.appendChild(tSpan)\n          }\n          tSpan.style.display = 'inherit'\n        }\n\n        matrixHelper.reset()\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset\n            yPos += documentData.yOffset\n            yPos += firstLine ? 1 : 0\n            firstLine = false\n          }\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos)\n          xPos += letters[i].l || 0\n          // xPos += letters[i].val === ' ' ? 0 : trackingOffset;\n          xPos += trackingOffset\n        }\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(\n            documentData.finalText[i],\n            fontData.fStyle,\n            this.globalData.fontManager.getFontByName(documentData.f).fFamily,\n          )\n          var glyphElement\n          // t === 1 means the character has been replaced with an animated shaped\n          if (charData.t === 1) {\n            glyphElement = new SVGCompElement(charData.data, this.globalData, this)\n          } else {\n            var data = emptyShapeData\n            if (charData.data && charData.data.shapes) {\n              data = this.buildShapeData(charData.data, documentData.finalSize)\n            }\n            glyphElement = new SVGShapeElement(data, this.globalData, this)\n          }\n          if (this.textSpans[i].glyph) {\n            var glyph = this.textSpans[i].glyph\n            this.textSpans[i].childSpan.removeChild(glyph.layerElement)\n            glyph.destroy()\n          }\n          this.textSpans[i].glyph = glyphElement\n          glyphElement._debug = true\n          glyphElement.prepareFrame(0)\n          glyphElement.renderFrame()\n          this.textSpans[i].childSpan.appendChild(glyphElement.layerElement)\n          // when using animated shapes, the layer will be scaled instead of replacing the internal scale\n          // this might have issues with strokes and might need a different solution\n          if (charData.t === 1) {\n            this.textSpans[i].childSpan.setAttribute(\n              'transform',\n              'scale(' + documentData.finalSize / 100 + ',' + documentData.finalSize / 100 + ')',\n            )\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute('transform', 'translate(' + matrixHelper.props[12] + ',' + matrixHelper.props[13] + ')')\n          }\n          tSpan.textContent = letters[i].val\n          tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve')\n        }\n        //\n      }\n      if (singleShape && tSpan) {\n        tSpan.setAttribute('d', shapeStr)\n      }\n    }\n    while (i < this.textSpans.length) {\n      this.textSpans[i].span.style.display = 'none'\n      i += 1\n    }\n\n    this._sizeChanged = true\n  }\n\n  SVGTextLottieElement.prototype.sourceRectAtTime = function () {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st)\n    this.renderInnerContent()\n    if (this._sizeChanged) {\n      this._sizeChanged = false\n      var textBox = this.layerElement.getBBox()\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height,\n      }\n    }\n    return this.bbox\n  }\n\n  SVGTextLottieElement.prototype.getValue = function () {\n    var i\n    var len = this.textSpans.length\n    var glyphElement\n    this.renderedFrame = this.comp.renderedFrame\n    for (i = 0; i < len; i += 1) {\n      glyphElement = this.textSpans[i].glyph\n      if (glyphElement) {\n        glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st)\n        if (glyphElement._mdf) {\n          this._mdf = true\n        }\n      }\n    }\n  }\n\n  SVGTextLottieElement.prototype.renderInnerContent = function () {\n    if (!this.data.singleShape || this._mdf) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag)\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true\n        var i\n        var len\n        var renderedLetters = this.textAnimator.renderedLetters\n\n        var letters = this.textProperty.currentData.l\n\n        len = letters.length\n        var renderedLetter\n        var textSpan\n        var glyphElement\n        for (i = 0; i < len; i += 1) {\n          if (!letters[i].n) {\n            renderedLetter = renderedLetters[i]\n            textSpan = this.textSpans[i].span\n            glyphElement = this.textSpans[i].glyph\n            if (glyphElement) {\n              glyphElement.renderFrame()\n            }\n            if (renderedLetter._mdf.m) {\n              textSpan.setAttribute('transform', renderedLetter.m)\n            }\n            if (renderedLetter._mdf.o) {\n              textSpan.setAttribute('opacity', renderedLetter.o)\n            }\n            if (renderedLetter._mdf.sw) {\n              textSpan.setAttribute('stroke-width', renderedLetter.sw)\n            }\n            if (renderedLetter._mdf.sc) {\n              textSpan.setAttribute('stroke', renderedLetter.sc)\n            }\n            if (renderedLetter._mdf.fc) {\n              textSpan.setAttribute('fill', renderedLetter.fc)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function ISolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype([IImageElement], ISolidElement)\n\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS('rect')\n    /// /rect.style.width = this.data.sw;\n    /// /rect.style.height = this.data.sh;\n    /// /rect.style.fill = this.data.sc;\n    rect.setAttribute('width', this.data.sw)\n    rect.setAttribute('height', this.data.sh)\n    rect.setAttribute('fill', this.data.sc)\n    this.layerElement.appendChild(rect)\n  }\n\n  function NullElement(data, globalData, comp) {\n    this.initFrame()\n    this.initBaseData(data, globalData, comp)\n    this.initFrame()\n    this.initTransform(data, globalData, comp)\n    this.initHierarchy()\n  }\n\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true)\n  }\n\n  NullElement.prototype.renderFrame = function () {}\n\n  NullElement.prototype.getBaseElement = function () {\n    return null\n  }\n\n  NullElement.prototype.destroy = function () {}\n\n  NullElement.prototype.sourceRectAtTime = function () {}\n\n  NullElement.prototype.hide = function () {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement)\n\n  function SVGRendererBase() {}\n\n  extendPrototype([BaseRenderer], SVGRendererBase)\n\n  SVGRendererBase.prototype.createNull = function (data) {\n    return new NullElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createShape = function (data) {\n    return new SVGShapeElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createText = function (data) {\n    return new SVGTextLottieElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createImage = function (data) {\n    return new IImageElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createSolid = function (data) {\n    return new ISolidElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize)\n    } else {\n      this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h)\n    }\n\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute('width', animData.w)\n      this.svgElement.setAttribute('height', animData.h)\n      this.svgElement.style.width = '100%'\n      this.svgElement.style.height = '100%'\n      this.svgElement.style.transform = 'translate3d(0,0,0)'\n      this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility\n    }\n    if (this.renderConfig.width) {\n      this.svgElement.setAttribute('width', this.renderConfig.width)\n    }\n    if (this.renderConfig.height) {\n      this.svgElement.setAttribute('height', this.renderConfig.height)\n    }\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute('class', this.renderConfig.className)\n    }\n    if (this.renderConfig.id) {\n      this.svgElement.setAttribute('id', this.renderConfig.id)\n    }\n    if (this.renderConfig.focusable !== undefined) {\n      this.svgElement.setAttribute('focusable', this.renderConfig.focusable)\n    }\n    this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio)\n    // this.layerElement.style.transform = 'translate3d(0,0,0)';\n    // this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\n    this.animationItem.wrapper.appendChild(this.svgElement)\n    // Mask animation\n    var defs = this.globalData.defs\n\n    this.setupGlobalData(animData, defs)\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad\n    this.data = animData\n\n    var maskElement = createNS('clipPath')\n    var rect = createNS('rect')\n    rect.setAttribute('width', animData.w)\n    rect.setAttribute('height', animData.h)\n    rect.setAttribute('x', 0)\n    rect.setAttribute('y', 0)\n    var maskId = createElementID()\n    maskElement.setAttribute('id', maskId)\n    maskElement.appendChild(rect)\n    this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + maskId + ')')\n\n    defs.appendChild(maskElement)\n    this.layers = animData.layers\n    this.elements = createSizedArray(animData.layers.length)\n  }\n\n  SVGRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = ''\n    }\n    this.layerElement = null\n    this.globalData.defs = null\n    var i\n    var len = this.layers ? this.layers.length : 0\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n    this.elements.length = 0\n    this.destroyed = true\n    this.animationItem = null\n  }\n\n  SVGRendererBase.prototype.updateContainerSize = function () {}\n\n  SVGRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return\n    }\n    elements[pos] = true\n    var element = this.createItem(this.layers[pos])\n\n    elements[pos] = element\n    if (getExpressionsPlugin()) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element)\n      }\n      element.initExpressions()\n    }\n    this.appendElementInPos(element, pos)\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1)\n        this.addPendingElement(element)\n      } else {\n        element.setMatte(elements[pos - 1].layerId)\n      }\n    }\n  }\n\n  SVGRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop()\n      element.checkParenting()\n      if (element.data.tt) {\n        var i = 0\n        var len = this.elements.length\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId)\n            break\n          }\n          i += 1\n        }\n      }\n    }\n  }\n\n  SVGRendererBase.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return\n    }\n    if (num === null) {\n      num = this.renderedFrame\n    } else {\n      this.renderedFrame = num\n    }\n    // console.log('-------');\n    // console.log('FRAME ',num);\n    this.globalData.frameNum = num\n    this.globalData.frameId += 1\n    this.globalData.projectInterface.currentFrame = num\n    this.globalData._mdf = false\n    var i\n    var len = this.layers.length\n    if (!this.completeLayers) {\n      this.checkLayers(num)\n    }\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st)\n      }\n    }\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame()\n        }\n      }\n    }\n  }\n\n  SVGRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement()\n    if (!newElement) {\n      return\n    }\n    var i = 0\n    var nextElement\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement()\n      }\n      i += 1\n    }\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement)\n    } else {\n      this.layerElement.appendChild(newElement)\n    }\n  }\n\n  SVGRendererBase.prototype.hide = function () {\n    this.layerElement.style.display = 'none'\n  }\n\n  SVGRendererBase.prototype.show = function () {\n    this.layerElement.style.display = 'block'\n  }\n\n  function ICompElement() {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement)\n\n  ICompElement.prototype.initElement = function (data, globalData, comp) {\n    this.initFrame()\n    this.initBaseData(data, globalData, comp)\n    this.initTransform(data, globalData, comp)\n    this.initRenderable()\n    this.initHierarchy()\n    this.initRendererElement()\n    this.createContainerElements()\n    this.createRenderableComponents()\n    if (this.data.xt || !globalData.progressiveLoad) {\n      this.buildAllItems()\n    }\n    this.hide()\n  }\n\n  /* ICompElement.prototype.hide = function(){\n    if(!this.hidden){\n        this.hideElement();\n        var i,len = this.elements.length;\n        for( i = 0; i < len; i+=1 ){\n            if(this.elements[i]){\n                this.elements[i].hide();\n            }\n        }\n    }\n}; */\n\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false\n    this.prepareRenderableFrame(num)\n    this.prepareProperties(num, this.isInRange)\n    if (!this.isInRange && !this.data.xt) {\n      return\n    }\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1\n      }\n      this.renderedFrame = timeRemapped\n    } else {\n      this.renderedFrame = num / this.data.sr\n    }\n    var i\n    var len = this.elements.length\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame)\n    }\n    // This iteration needs to be backwards because of how expressions connect between each other\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st)\n        if (this.elements[i]._mdf) {\n          this._mdf = true\n        }\n      }\n    }\n  }\n\n  ICompElement.prototype.renderInnerContent = function () {\n    var i\n    var len = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame()\n      }\n    }\n  }\n\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems\n  }\n\n  ICompElement.prototype.getElements = function () {\n    return this.elements\n  }\n\n  ICompElement.prototype.destroyElements = function () {\n    var i\n    var len = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n  }\n\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements()\n    this.destroyBaseElement()\n  }\n\n  function SVGCompElement(data, globalData, comp) {\n    this.layers = data.layers\n    this.supports3d = true\n    this.completeLayers = false\n    this.pendingElements = []\n    this.elements = this.layers ? createSizedArray(this.layers.length) : []\n    this.initElement(data, globalData, comp)\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true }\n  }\n\n  extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement)\n\n  SVGCompElement.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this)\n  }\n\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem\n    this.layers = null\n    this.renderedFrame = -1\n    this.svgElement = createNS('svg')\n    var ariaLabel = ''\n    if (config && config.title) {\n      var titleElement = createNS('title')\n      var titleId = createElementID()\n      titleElement.setAttribute('id', titleId)\n      titleElement.textContent = config.title\n      this.svgElement.appendChild(titleElement)\n      ariaLabel += titleId\n    }\n    if (config && config.description) {\n      var descElement = createNS('desc')\n      var descId = createElementID()\n      descElement.setAttribute('id', descId)\n      descElement.textContent = config.description\n      this.svgElement.appendChild(descElement)\n      ariaLabel += ' ' + descId\n    }\n    if (ariaLabel) {\n      this.svgElement.setAttribute('aria-labelledby', ariaLabel)\n    }\n    var defs = createNS('defs')\n    this.svgElement.appendChild(defs)\n    var maskElement = createNS('g')\n    this.svgElement.appendChild(maskElement)\n    this.layerElement = maskElement\n    this.renderConfig = {\n      preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\n      imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\n      contentVisibility: (config && config.contentVisibility) || 'visible',\n      progressiveLoad: (config && config.progressiveLoad) || false,\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      viewBoxOnly: (config && config.viewBoxOnly) || false,\n      viewBoxSize: (config && config.viewBoxSize) || false,\n      className: (config && config.className) || '',\n      id: (config && config.id) || '',\n      focusable: config && config.focusable,\n      filterSize: {\n        width: (config && config.filterSize && config.filterSize.width) || '100%',\n        height: (config && config.filterSize && config.filterSize.height) || '100%',\n        x: (config && config.filterSize && config.filterSize.x) || '0%',\n        y: (config && config.filterSize && config.filterSize.y) || '0%',\n      },\n      width: config && config.width,\n      height: config && config.height,\n    }\n\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs: defs,\n      renderConfig: this.renderConfig,\n    }\n    this.elements = []\n    this.pendingElements = []\n    this.destroyed = false\n    this.rendererType = 'svg'\n  }\n\n  extendPrototype([SVGRendererBase], SVGRenderer)\n\n  SVGRenderer.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this)\n  }\n\n  function CVContextData() {\n    this.saved = []\n    this.cArrPos = 0\n    this.cTr = new Matrix()\n    this.cO = 1\n    var i\n    var len = 15\n    this.savedOp = createTypedArray('float32', len)\n    for (i = 0; i < len; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16)\n    }\n    this._length = len\n  }\n\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2\n    var currentSavedOp = this.savedOp\n    this.savedOp = createTypedArray('float32', newLength)\n    this.savedOp.set(currentSavedOp)\n    var i = 0\n    for (i = this._length; i < newLength; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16)\n    }\n    this._length = newLength\n  }\n\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0\n    this.cTr.reset()\n    this.cO = 1\n  }\n\n  function ShapeTransformManager() {\n    this.sequences = {}\n    this.sequenceList = []\n    this.transform_key_count = 0\n  }\n\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function (transforms) {\n      var i\n      var len = transforms.length\n      var key = '_'\n      for (i = 0; i < len; i += 1) {\n        key += transforms[i].transform.key + '_'\n      }\n      var sequence = this.sequences[key]\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false,\n        }\n        this.sequences[key] = sequence\n        this.sequenceList.push(sequence)\n      }\n      return sequence\n    },\n    processSequence: function (sequence, isFirstFrame) {\n      var i = 0\n      var len = sequence.transforms.length\n      var _mdf = isFirstFrame\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true\n          break\n        }\n        i += 1\n      }\n      if (_mdf) {\n        var props\n        sequence.finalTransform.reset()\n        for (i = len - 1; i >= 0; i -= 1) {\n          props = sequence.transforms[i].transform.mProps.v.props\n          sequence.finalTransform.transform(\n            props[0],\n            props[1],\n            props[2],\n            props[3],\n            props[4],\n            props[5],\n            props[6],\n            props[7],\n            props[8],\n            props[9],\n            props[10],\n            props[11],\n            props[12],\n            props[13],\n            props[14],\n            props[15],\n          )\n        }\n      }\n      sequence._mdf = _mdf\n    },\n    processSequences: function (isFirstFrame) {\n      var i\n      var len = this.sequenceList.length\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame)\n      }\n    },\n    getNewKey: function () {\n      this.transform_key_count += 1\n      return '_' + this.transform_key_count\n    },\n  }\n\n  function CVEffects() {}\n  CVEffects.prototype.renderFrame = function () {}\n\n  function CVMaskElement(data, element) {\n    this.data = data\n    this.element = element\n    this.masksProperties = this.data.masksProperties || []\n    this.viewData = createSizedArray(this.masksProperties.length)\n    var i\n    var len = this.masksProperties.length\n    var hasMasks = false\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        hasMasks = true\n      }\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3)\n    }\n    this.hasMasks = hasMasks\n    if (hasMasks) {\n      this.element.addRenderableComponent(this)\n    }\n  }\n\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return\n    }\n    var transform = this.element.finalTransform.mat\n    var ctx = this.element.canvasContext\n    var i\n    var len = this.masksProperties.length\n    var pt\n    var pts\n    var data\n    ctx.beginPath()\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0)\n          ctx.lineTo(this.element.globalData.compSize.w, 0)\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h)\n          ctx.lineTo(0, this.element.globalData.compSize.h)\n          ctx.lineTo(0, 0)\n        }\n        data = this.viewData[i].v\n        pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0)\n        ctx.moveTo(pt[0], pt[1])\n        var j\n        var jLen = data._length\n        for (j = 1; j < jLen; j += 1) {\n          pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j])\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5])\n        }\n        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0])\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5])\n      }\n    }\n    this.element.globalData.renderer.save(true)\n    ctx.clip()\n  }\n\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty\n\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null\n  }\n\n  function CVBaseElement() {}\n\n  CVBaseElement.prototype = {\n    createElements: function () {},\n    initRendererElement: function () {},\n    createContainerElements: function () {\n      this.canvasContext = this.globalData.canvasContext\n      this.renderableEffectsManager = new CVEffects(this)\n    },\n    createContent: function () {},\n    setBlendMode: function () {\n      var globalData = this.globalData\n      if (globalData.blendMode !== this.data.bm) {\n        globalData.blendMode = this.data.bm\n        var blendModeValue = getBlendMode(this.data.bm)\n        globalData.canvasContext.globalCompositeOperation = blendModeValue\n      }\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new CVMaskElement(this.data, this)\n    },\n    hideElement: function () {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true\n      }\n    },\n    showElement: function () {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false\n        this._isFirstFrame = true\n        this.maskManager._isFirstFrame = true\n      }\n    },\n    renderFrame: function () {\n      if (this.hidden || this.data.hd) {\n        return\n      }\n      this.renderTransform()\n      this.renderRenderable()\n      this.setBlendMode()\n      var forceRealStack = this.data.ty === 0\n      this.globalData.renderer.save(forceRealStack)\n      this.globalData.renderer.ctxTransform(this.finalTransform.mat.props)\n      this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v)\n      this.renderInnerContent()\n      this.globalData.renderer.restore(forceRealStack)\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true)\n      }\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false\n      }\n    },\n    destroy: function () {\n      this.canvasContext = null\n      this.data = null\n      this.globalData = null\n      this.maskManager.destroy()\n    },\n    mHelper: new Matrix(),\n  }\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement\n\n  function CVShapeData(element, data, styles, transformsManager) {\n    this.styledShapes = []\n    this.tr = [0, 0, 0, 0, 0, 0]\n    var ty = 4\n    if (data.ty === 'rc') {\n      ty = 5\n    } else if (data.ty === 'el') {\n      ty = 6\n    } else if (data.ty === 'sr') {\n      ty = 7\n    }\n    this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element)\n    var i\n    var len = styles.length\n    var styledShape\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: [],\n        }\n        this.styledShapes.push(styledShape)\n        styles[i].elements.push(styledShape)\n      }\n    }\n  }\n\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated\n\n  function CVShapeElement(data, globalData, comp) {\n    this.shapes = []\n    this.shapesData = data.shapes\n    this.stylesList = []\n    this.itemsData = []\n    this.prevViewData = []\n    this.shapeModifiers = []\n    this.processedElements = []\n    this.transformsManager = new ShapeTransformManager()\n    this.initElement(data, globalData, comp)\n  }\n\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement],\n    CVShapeElement,\n  )\n\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement\n\n  CVShapeElement.prototype.transformHelper = { opacity: 1, _opMdf: false }\n\n  CVShapeElement.prototype.dashResetter = []\n\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, [])\n  }\n\n  CVShapeElement.prototype.createStyleElement = function (data, transforms) {\n    var styleElem = {\n      data: data,\n      type: data.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data.hd === true,\n    }\n    var elementData = {}\n    if (data.ty === 'fl' || data.ty === 'st') {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this)\n      if (!elementData.c.k) {\n        styleElem.co =\n          'rgb(' +\n          bmFloor(elementData.c.v[0]) +\n          ',' +\n          bmFloor(elementData.c.v[1]) +\n          ',' +\n          bmFloor(elementData.c.v[2]) +\n          ')'\n      }\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this)\n      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this)\n      elementData.h = PropertyFactory.getProp(this, data.h || { k: 0 }, 0, 0.01, this)\n      elementData.a = PropertyFactory.getProp(this, data.a || { k: 0 }, 0, degToRads, this)\n      elementData.g = new GradientProperty(this, data.g, this)\n    }\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this)\n    if (data.ty === 'st' || data.ty === 'gs') {\n      styleElem.lc = lineCapEnum[data.lc || 2]\n      styleElem.lj = lineJoinEnum[data.lj || 2]\n      if (data.lj == 1) {\n        // eslint-disable-line eqeqeq\n        styleElem.ml = data.ml\n      }\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this)\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v\n      }\n      if (data.d) {\n        var d = new DashProperty(this, data.d, 'canvas', this)\n        elementData.d = d\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray\n          styleElem.do = elementData.d.dashoffset[0]\n        }\n      }\n    } else {\n      styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero'\n    }\n    this.stylesList.push(styleElem)\n    elementData.style = styleElem\n    return elementData\n  }\n\n  CVShapeElement.prototype.createGroupElement = function () {\n    var elementData = {\n      it: [],\n      prevViewData: [],\n    }\n    return elementData\n  }\n\n  CVShapeElement.prototype.createTransformElement = function (data) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data, this),\n      },\n    }\n    return elementData\n  }\n\n  CVShapeElement.prototype.createShapeElement = function (data) {\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager)\n\n    this.shapes.push(elementData)\n    this.addShapeToModifiers(elementData)\n    return elementData\n  }\n\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true\n    var i\n    var len = this.itemsData.length\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i]\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, [])\n    len = this.dynamicProperties.length\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue()\n    }\n    this.renderModifiers()\n    this.transformsManager.processSequences(this._isFirstFrame)\n  }\n\n  CVShapeElement.prototype.addTransformToStyleList = function (transform) {\n    var i\n    var len = this.stylesList.length\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform)\n      }\n    }\n  }\n\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i\n    var len = this.stylesList.length\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop()\n      }\n    }\n  }\n\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i\n    var len = styles.length\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true\n    }\n  }\n\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i\n    var len = arr.length - 1\n    var j\n    var jLen\n    var ownStyles = []\n    var ownModifiers = []\n    var processedPos\n    var modifier\n    var currentTransform\n    var ownTransforms = [].concat(transforms)\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i])\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1]\n      }\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms)\n        } else {\n          itemsData[i].style.closed = false\n        }\n\n        ownStyles.push(itemsData[i].style)\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i])\n        } else {\n          jLen = itemsData[i].it.length\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j]\n          }\n        }\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms)\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i])\n          itemsData[i] = currentTransform\n        }\n        ownTransforms.push(itemsData[i])\n        this.addTransformToStyleList(itemsData[i])\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i])\n        }\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          modifier.init(this, arr[i])\n          itemsData[i] = modifier\n          this.shapeModifiers.push(modifier)\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = false\n        }\n        ownModifiers.push(modifier)\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          itemsData[i] = modifier\n          modifier.init(this, arr, i, itemsData)\n          this.shapeModifiers.push(modifier)\n          shouldRender = false\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = true\n        }\n        ownModifiers.push(modifier)\n      }\n      this.addProcessedElement(arr[i], i + 1)\n    }\n    this.removeTransformFromStyleList()\n    this.closeStyles(ownStyles)\n    len = ownModifiers.length\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true\n    }\n  }\n\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1\n    this.transformHelper._opMdf = false\n    this.renderModifiers()\n    this.transformsManager.processSequences(this._isFirstFrame)\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true)\n  }\n\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity\n      groupTransform.opacity *= groupTransform.op.v\n      groupTransform._opMdf = true\n    }\n  }\n\n  CVShapeElement.prototype.drawLayer = function () {\n    var i\n    var len = this.stylesList.length\n    var j\n    var jLen\n    var k\n    var kLen\n    var elems\n    var nodes\n    var renderer = this.globalData.renderer\n    var ctx = this.globalData.canvasContext\n    var type\n    var currentStyle\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i]\n      type = currentStyle.type\n\n      // Skipping style when\n      // Stroke width equals 0\n      // style should not be rendered (extra unused repeaters)\n      // current opacity equals 0\n      // global opacity equals 0\n      if (\n        !(\n          ((type === 'st' || type === 'gs') && currentStyle.wi === 0) ||\n          !currentStyle.data._shouldRender ||\n          currentStyle.coOp === 0 ||\n          this.globalData.currentGlobalAlpha === 0\n        )\n      ) {\n        renderer.save()\n        elems = currentStyle.elements\n        if (type === 'st' || type === 'gs') {\n          ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd\n          ctx.lineWidth = currentStyle.wi\n          ctx.lineCap = currentStyle.lc\n          ctx.lineJoin = currentStyle.lj\n          ctx.miterLimit = currentStyle.ml || 0\n        } else {\n          ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd\n        }\n        renderer.ctxOpacity(currentStyle.coOp)\n        if (type !== 'st' && type !== 'gs') {\n          ctx.beginPath()\n        }\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props)\n        jLen = elems.length\n        for (j = 0; j < jLen; j += 1) {\n          if (type === 'st' || type === 'gs') {\n            ctx.beginPath()\n            if (currentStyle.da) {\n              ctx.setLineDash(currentStyle.da)\n              ctx.lineDashOffset = currentStyle.do\n            }\n          }\n          nodes = elems[j].trNodes\n          kLen = nodes.length\n\n          for (k = 0; k < kLen; k += 1) {\n            if (nodes[k].t === 'm') {\n              ctx.moveTo(nodes[k].p[0], nodes[k].p[1])\n            } else if (nodes[k].t === 'c') {\n              ctx.bezierCurveTo(\n                nodes[k].pts[0],\n                nodes[k].pts[1],\n                nodes[k].pts[2],\n                nodes[k].pts[3],\n                nodes[k].pts[4],\n                nodes[k].pts[5],\n              )\n            } else {\n              ctx.closePath()\n            }\n          }\n          if (type === 'st' || type === 'gs') {\n            ctx.stroke()\n            if (currentStyle.da) {\n              ctx.setLineDash(this.dashResetter)\n            }\n          }\n        }\n        if (type !== 'st' && type !== 'gs') {\n          ctx.fill(currentStyle.r)\n        }\n        renderer.restore()\n      }\n    }\n  }\n\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\n    var i\n    var len = items.length - 1\n    var groupTransform\n    groupTransform = parentTransform\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty === 'tr') {\n        groupTransform = data[i].transform\n        this.renderShapeTransform(parentTransform, groupTransform)\n      } else if (items[i].ty === 'sh' || items[i].ty === 'el' || items[i].ty === 'rc' || items[i].ty === 'sr') {\n        this.renderPath(items[i], data[i])\n      } else if (items[i].ty === 'fl') {\n        this.renderFill(items[i], data[i], groupTransform)\n      } else if (items[i].ty === 'st') {\n        this.renderStroke(items[i], data[i], groupTransform)\n      } else if (items[i].ty === 'gf' || items[i].ty === 'gs') {\n        this.renderGradientFill(items[i], data[i], groupTransform)\n      } else if (items[i].ty === 'gr') {\n        this.renderShape(groupTransform, items[i].it, data[i].it)\n      } else if (items[i].ty === 'tm') {\n        //\n      }\n    }\n    if (isMain) {\n      this.drawLayer()\n    }\n  }\n\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes\n      var paths = shape.paths\n      var i\n      var len\n      var j\n      var jLen = paths._length\n      shapeNodes.length = 0\n      var groupTransformMat = styledShape.transforms.finalTransform\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j]\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: 'm',\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n              })\n            }\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i]),\n            })\n          }\n          if (len === 1) {\n            shapeNodes.push({\n              t: 'm',\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n            })\n          }\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0]),\n            })\n            shapeNodes.push({\n              t: 'z',\n            })\n          }\n        }\n      }\n      styledShape.trNodes = shapeNodes\n    }\n  }\n\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i\n      var len = itemData.styledShapes.length\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh)\n      }\n    }\n  }\n\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co =\n        'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')'\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity\n    }\n  }\n\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style\n    var grd\n    if (\n      !styleElem.grd ||\n      itemData.g._mdf ||\n      itemData.s._mdf ||\n      itemData.e._mdf ||\n      (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))\n    ) {\n      var ctx = this.globalData.canvasContext\n      var pt1 = itemData.s.v\n      var pt2 = itemData.e.v\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1])\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2))\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0])\n\n        var percent = itemData.h.v\n        if (percent >= 1) {\n          percent = 0.99\n        } else if (percent <= -1) {\n          percent = -0.99\n        }\n        var dist = rad * percent\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0]\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1]\n        grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad)\n      }\n\n      var i\n      var len = styleData.g.p\n      var cValues = itemData.g.c\n      var opacity = 1\n\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1]\n        }\n        grd.addColorStop(\n          cValues[i * 4] / 100,\n          'rgba(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ',' + opacity + ')',\n        )\n      }\n      styleElem.grd = grd\n    }\n    styleElem.coOp = itemData.o.v * groupTransform.opacity\n  }\n\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style\n    var d = itemData.d\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray\n      styleElem.do = d.dashoffset[0]\n    }\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co =\n        'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')'\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity\n    }\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v\n    }\n  }\n\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null\n    this.globalData = null\n    this.canvasContext = null\n    this.stylesList.length = 0\n    this.itemsData.length = 0\n  }\n\n  function CVTextElement(data, globalData, comp) {\n    this.textSpans = []\n    this.yOffset = 0\n    this.fillColorAnim = false\n    this.strokeColorAnim = false\n    this.strokeWidthAnim = false\n    this.stroke = false\n    this.fill = false\n    this.justifyOffset = 0\n    this.currentRender = null\n    this.renderType = 'canvas'\n    this.values = {\n      fill: 'rgba(0,0,0,0)',\n      stroke: 'rgba(0,0,0,0)',\n      sWidth: 0,\n      fValue: '',\n    }\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement],\n    CVTextElement,\n  )\n\n  CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d')\n\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0)\n\n    var hasFill = false\n    if (documentData.fc) {\n      hasFill = true\n      this.values.fill = this.buildColor(documentData.fc)\n    } else {\n      this.values.fill = 'rgba(0,0,0,0)'\n    }\n    this.fill = hasFill\n    var hasStroke = false\n    if (documentData.sc) {\n      hasStroke = true\n      this.values.stroke = this.buildColor(documentData.sc)\n      this.values.sWidth = documentData.sw\n    }\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f)\n    var i\n    var len\n    var letters = documentData.l\n    var matrixHelper = this.mHelper\n    this.stroke = hasStroke\n    this.values.fValue =\n      documentData.finalSize + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily\n    len = documentData.finalText.length\n    // this.tHelper.font = this.values.fValue;\n    var charData\n    var shapeData\n    var k\n    var kLen\n    var shapes\n    var j\n    var jLen\n    var pathNodes\n    var commands\n    var pathArr\n    var singleShape = this.data.singleShape\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize\n    var xPos = 0\n    var yPos = 0\n    var firstLine = true\n    var cnt = 0\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(\n        documentData.finalText[i],\n        fontData.fStyle,\n        this.globalData.fontManager.getFontByName(documentData.f).fFamily,\n      )\n      shapeData = (charData && charData.data) || {}\n      matrixHelper.reset()\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset\n        yPos += documentData.yOffset\n        yPos += firstLine ? 1 : 0\n        firstLine = false\n      }\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : []\n      jLen = shapes.length\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100)\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos)\n      }\n      commands = createSizedArray(jLen - 1)\n      var commandsCounter = 0\n      for (j = 0; j < jLen; j += 1) {\n        if (shapes[j].ty === 'sh') {\n          kLen = shapes[j].ks.k.i.length\n          pathNodes = shapes[j].ks.k\n          pathArr = []\n          for (k = 1; k < kLen; k += 1) {\n            if (k === 1) {\n              pathArr.push(\n                matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n                matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n              )\n            }\n            pathArr.push(\n              matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n              matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n              matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0),\n              matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0),\n              matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0),\n              matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0),\n            )\n          }\n          pathArr.push(\n            matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n            matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n            matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0),\n            matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0),\n            matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n            matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n          )\n          commands[commandsCounter] = pathArr\n          commandsCounter += 1\n        }\n      }\n      if (singleShape) {\n        xPos += letters[i].l\n        xPos += trackingOffset\n      }\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands\n      } else {\n        this.textSpans[cnt] = { elem: commands }\n      }\n      cnt += 1\n    }\n  }\n\n  CVTextElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext\n    ctx.font = this.values.fValue\n    ctx.lineCap = 'butt'\n    ctx.lineJoin = 'miter'\n    ctx.miterLimit = 4\n\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag)\n    }\n\n    var i\n    var len\n    var j\n    var jLen\n    var k\n    var kLen\n    var renderedLetters = this.textAnimator.renderedLetters\n\n    var letters = this.textProperty.currentData.l\n\n    len = letters.length\n    var renderedLetter\n    var lastFill = null\n    var lastStroke = null\n    var lastStrokeW = null\n    var commands\n    var pathArr\n    for (i = 0; i < len; i += 1) {\n      if (!letters[i].n) {\n        renderedLetter = renderedLetters[i]\n        if (renderedLetter) {\n          this.globalData.renderer.save()\n          this.globalData.renderer.ctxTransform(renderedLetter.p)\n          this.globalData.renderer.ctxOpacity(renderedLetter.o)\n        }\n        if (this.fill) {\n          if (renderedLetter && renderedLetter.fc) {\n            if (lastFill !== renderedLetter.fc) {\n              lastFill = renderedLetter.fc\n              ctx.fillStyle = renderedLetter.fc\n            }\n          } else if (lastFill !== this.values.fill) {\n            lastFill = this.values.fill\n            ctx.fillStyle = this.values.fill\n          }\n          commands = this.textSpans[i].elem\n          jLen = commands.length\n          this.globalData.canvasContext.beginPath()\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j]\n            kLen = pathArr.length\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1])\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(\n                pathArr[k],\n                pathArr[k + 1],\n                pathArr[k + 2],\n                pathArr[k + 3],\n                pathArr[k + 4],\n                pathArr[k + 5],\n              )\n            }\n          }\n          this.globalData.canvasContext.closePath()\n          this.globalData.canvasContext.fill()\n          /// ctx.fillText(this.textSpans[i].val,0,0);\n        }\n        if (this.stroke) {\n          if (renderedLetter && renderedLetter.sw) {\n            if (lastStrokeW !== renderedLetter.sw) {\n              lastStrokeW = renderedLetter.sw\n              ctx.lineWidth = renderedLetter.sw\n            }\n          } else if (lastStrokeW !== this.values.sWidth) {\n            lastStrokeW = this.values.sWidth\n            ctx.lineWidth = this.values.sWidth\n          }\n          if (renderedLetter && renderedLetter.sc) {\n            if (lastStroke !== renderedLetter.sc) {\n              lastStroke = renderedLetter.sc\n              ctx.strokeStyle = renderedLetter.sc\n            }\n          } else if (lastStroke !== this.values.stroke) {\n            lastStroke = this.values.stroke\n            ctx.strokeStyle = this.values.stroke\n          }\n          commands = this.textSpans[i].elem\n          jLen = commands.length\n          this.globalData.canvasContext.beginPath()\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j]\n            kLen = pathArr.length\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1])\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(\n                pathArr[k],\n                pathArr[k + 1],\n                pathArr[k + 2],\n                pathArr[k + 3],\n                pathArr[k + 4],\n                pathArr[k + 5],\n              )\n            }\n          }\n          this.globalData.canvasContext.closePath()\n          this.globalData.canvasContext.stroke()\n          /// ctx.strokeText(letters[i].val,0,0);\n        }\n        if (renderedLetter) {\n          this.globalData.renderer.restore()\n        }\n      }\n    }\n  }\n\n  function CVImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId)\n    this.img = globalData.imageLoader.getAsset(this.assetData)\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement],\n    CVImageElement,\n  )\n\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame\n\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag('canvas')\n      canvas.width = this.assetData.w\n      canvas.height = this.assetData.h\n      var ctx = canvas.getContext('2d')\n\n      var imgW = this.img.width\n      var imgH = this.img.height\n      var imgRel = imgW / imgH\n      var canvasRel = this.assetData.w / this.assetData.h\n      var widthCrop\n      var heightCrop\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio\n      if ((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\n        heightCrop = imgH\n        widthCrop = heightCrop * canvasRel\n      } else {\n        widthCrop = imgW\n        heightCrop = widthCrop / canvasRel\n      }\n      ctx.drawImage(\n        this.img,\n        (imgW - widthCrop) / 2,\n        (imgH - heightCrop) / 2,\n        widthCrop,\n        heightCrop,\n        0,\n        0,\n        this.assetData.w,\n        this.assetData.h,\n      )\n      this.img = canvas\n    }\n  }\n\n  CVImageElement.prototype.renderInnerContent = function () {\n    this.canvasContext.drawImage(this.img, 0, 0)\n  }\n\n  CVImageElement.prototype.destroy = function () {\n    this.img = null\n  }\n\n  function CVSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement],\n    CVSolidElement,\n  )\n\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame\n\n  CVSolidElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext\n    ctx.fillStyle = this.data.sc\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh)\n    //\n  }\n\n  function CanvasRendererBase(animationItem, config) {\n    this.animationItem = animationItem\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: (config && config.context) || null,\n      progressiveLoad: (config && config.progressiveLoad) || false,\n      preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\n      imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\n      contentVisibility: (config && config.contentVisibility) || 'visible',\n      className: (config && config.className) || '',\n      id: (config && config.id) || '',\n    }\n    this.renderConfig.dpr = (config && config.dpr) || 1\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1\n    }\n    this.renderedFrame = -1\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1,\n    }\n    this.contextData = new CVContextData()\n    this.elements = []\n    this.pendingElements = []\n    this.transformMat = new Matrix()\n    this.completeLayers = false\n    this.rendererType = 'canvas'\n  }\n  extendPrototype([BaseRenderer], CanvasRendererBase)\n\n  CanvasRendererBase.prototype.createShape = function (data) {\n    return new CVShapeElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createText = function (data) {\n    return new CVTextElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createImage = function (data) {\n    return new CVImageElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createSolid = function (data) {\n    return new CVSolidElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull\n\n  CanvasRendererBase.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return\n    }\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13])\n      return\n    }\n    this.transformMat.cloneFromProps(props)\n    var cProps = this.contextData.cTr.props\n    this.transformMat.transform(\n      cProps[0],\n      cProps[1],\n      cProps[2],\n      cProps[3],\n      cProps[4],\n      cProps[5],\n      cProps[6],\n      cProps[7],\n      cProps[8],\n      cProps[9],\n      cProps[10],\n      cProps[11],\n      cProps[12],\n      cProps[13],\n      cProps[14],\n      cProps[15],\n    )\n    // this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\n    this.contextData.cTr.cloneFromProps(this.transformMat.props)\n    var trProps = this.contextData.cTr.props\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13])\n  }\n\n  CanvasRendererBase.prototype.ctxOpacity = function (op) {\n    /* if(op === 1){\n        return;\n    } */\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op\n      this.globalData.currentGlobalAlpha = this.contextData.cO\n      return\n    }\n    this.contextData.cO *= op < 0 ? 0 : op\n    if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\n      this.canvasContext.globalAlpha = this.contextData.cO\n      this.globalData.currentGlobalAlpha = this.contextData.cO\n    }\n  }\n\n  CanvasRendererBase.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore()\n      return\n    }\n    this.contextData.reset()\n  }\n\n  CanvasRendererBase.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save()\n      return\n    }\n    if (actionFlag) {\n      this.canvasContext.save()\n    }\n    var props = this.contextData.cTr.props\n    if (this.contextData._length <= this.contextData.cArrPos) {\n      this.contextData.duplicate()\n    }\n    var i\n    var arr = this.contextData.saved[this.contextData.cArrPos]\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i]\n    }\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO\n    this.contextData.cArrPos += 1\n  }\n\n  CanvasRendererBase.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore()\n      return\n    }\n    if (actionFlag) {\n      this.canvasContext.restore()\n      this.globalData.blendMode = 'source-over'\n    }\n    this.contextData.cArrPos -= 1\n    var popped = this.contextData.saved[this.contextData.cArrPos]\n    var i\n    var arr = this.contextData.cTr.props\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i]\n    }\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13])\n    popped = this.contextData.savedOp[this.contextData.cArrPos]\n    this.contextData.cO = popped\n    if (this.globalData.currentGlobalAlpha !== popped) {\n      this.canvasContext.globalAlpha = popped\n      this.globalData.currentGlobalAlpha = popped\n    }\n  }\n\n  CanvasRendererBase.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag('canvas')\n      var containerStyle = this.animationItem.container.style\n      containerStyle.width = '100%'\n      containerStyle.height = '100%'\n      var origin = '0px 0px 0px'\n      containerStyle.transformOrigin = origin\n      containerStyle.mozTransformOrigin = origin\n      containerStyle.webkitTransformOrigin = origin\n      containerStyle['-webkit-transform'] = origin\n      containerStyle.contentVisibility = this.renderConfig.contentVisibility\n      this.animationItem.wrapper.appendChild(this.animationItem.container)\n      this.canvasContext = this.animationItem.container.getContext('2d')\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute('class', this.renderConfig.className)\n      }\n      if (this.renderConfig.id) {\n        this.animationItem.container.setAttribute('id', this.renderConfig.id)\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context\n    }\n    this.data = animData\n    this.layers = animData.layers\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0,\n    }\n    this.setupGlobalData(animData, document.body)\n    this.globalData.canvasContext = this.canvasContext\n    this.globalData.renderer = this\n    this.globalData.isDashed = false\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad\n    this.globalData.transformCanvas = this.transformCanvas\n    this.elements = createSizedArray(animData.layers.length)\n\n    this.updateContainerSize()\n  }\n\n  CanvasRendererBase.prototype.updateContainerSize = function () {\n    this.reset()\n    var elementWidth\n    var elementHeight\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth\n      elementHeight = this.animationItem.wrapper.offsetHeight\n      this.animationItem.container.setAttribute('width', elementWidth * this.renderConfig.dpr)\n      this.animationItem.container.setAttribute('height', elementHeight * this.renderConfig.dpr)\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr\n    }\n    var elementRel\n    var animationRel\n    if (\n      this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 ||\n      this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1\n    ) {\n      var par = this.renderConfig.preserveAspectRatio.split(' ')\n      var fillType = par[1] || 'meet'\n      var pos = par[0] || 'xMidYMid'\n      var xPos = pos.substr(0, 4)\n      var yPos = pos.substr(4)\n      elementRel = elementWidth / elementHeight\n      animationRel = this.transformCanvas.w / this.transformCanvas.h\n      if ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr)\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr)\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr)\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr)\n      }\n\n      if (\n        xPos === 'xMid' &&\n        ((animationRel < elementRel && fillType === 'meet') || (animationRel > elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.tx =\n          ((elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2) *\n          this.renderConfig.dpr\n      } else if (\n        xPos === 'xMax' &&\n        ((animationRel < elementRel && fillType === 'meet') || (animationRel > elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.tx =\n          (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr\n      } else {\n        this.transformCanvas.tx = 0\n      }\n      if (\n        yPos === 'YMid' &&\n        ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.ty =\n          ((elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2) *\n          this.renderConfig.dpr\n      } else if (\n        yPos === 'YMax' &&\n        ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.ty =\n          (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr\n      } else {\n        this.transformCanvas.ty = 0\n      }\n    } else if (this.renderConfig.preserveAspectRatio === 'none') {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr)\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr)\n      this.transformCanvas.tx = 0\n      this.transformCanvas.ty = 0\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr\n      this.transformCanvas.sy = this.renderConfig.dpr\n      this.transformCanvas.tx = 0\n      this.transformCanvas.ty = 0\n    }\n    this.transformCanvas.props = [\n      this.transformCanvas.sx,\n      0,\n      0,\n      0,\n      0,\n      this.transformCanvas.sy,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      this.transformCanvas.tx,\n      this.transformCanvas.ty,\n      0,\n      1,\n    ]\n    /* var i, len = this.elements.length;\n    for(i=0;i<len;i+=1){\n        if(this.elements[i] && this.elements[i].data.ty === 0){\n            this.elements[i].resize(this.globalData.transformCanvas);\n        }\n    } */\n    this.ctxTransform(this.transformCanvas.props)\n    this.canvasContext.beginPath()\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h)\n    this.canvasContext.closePath()\n    this.canvasContext.clip()\n\n    this.renderFrame(this.renderedFrame, true)\n  }\n\n  CanvasRendererBase.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = ''\n    }\n    var i\n    var len = this.layers ? this.layers.length : 0\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n    this.elements.length = 0\n    this.globalData.canvasContext = null\n    this.animationItem.container = null\n    this.destroyed = true\n  }\n\n  CanvasRendererBase.prototype.renderFrame = function (num, forceRender) {\n    if (\n      (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) ||\n      this.destroyed ||\n      num === -1\n    ) {\n      return\n    }\n    this.renderedFrame = num\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame\n    this.globalData.frameId += 1\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender\n    this.globalData.projectInterface.currentFrame = num\n\n    // console.log('--------');\n    // console.log('NEW: ',num);\n    var i\n    var len = this.layers.length\n    if (!this.completeLayers) {\n      this.checkLayers(num)\n    }\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st)\n      }\n    }\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h)\n      } else {\n        this.save()\n      }\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame()\n        }\n      }\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore()\n      }\n    }\n  }\n\n  CanvasRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return\n    }\n    var element = this.createItem(this.layers[pos], this, this.globalData)\n    elements[pos] = element\n    element.initExpressions()\n    /* if(this.layers[pos].ty === 0){\n        element.resize(this.globalData.transformCanvas);\n    } */\n  }\n\n  CanvasRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop()\n      element.checkParenting()\n    }\n  }\n\n  CanvasRendererBase.prototype.hide = function () {\n    this.animationItem.container.style.display = 'none'\n  }\n\n  CanvasRendererBase.prototype.show = function () {\n    this.animationItem.container.style.display = 'block'\n  }\n\n  function CVCompElement(data, globalData, comp) {\n    this.completeLayers = false\n    this.layers = data.layers\n    this.pendingElements = []\n    this.elements = createSizedArray(this.layers.length)\n    this.initElement(data, globalData, comp)\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true }\n  }\n\n  extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement)\n\n  CVCompElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext\n    ctx.beginPath()\n    ctx.moveTo(0, 0)\n    ctx.lineTo(this.data.w, 0)\n    ctx.lineTo(this.data.w, this.data.h)\n    ctx.lineTo(0, this.data.h)\n    ctx.lineTo(0, 0)\n    ctx.clip()\n    var i\n    var len = this.layers.length\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame()\n      }\n    }\n  }\n\n  CVCompElement.prototype.destroy = function () {\n    var i\n    var len = this.layers.length\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n    this.layers = null\n    this.elements = null\n  }\n\n  CVCompElement.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this)\n  }\n\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: (config && config.context) || null,\n      progressiveLoad: (config && config.progressiveLoad) || false,\n      preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\n      imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\n      contentVisibility: (config && config.contentVisibility) || 'visible',\n      className: (config && config.className) || '',\n      id: (config && config.id) || '',\n    }\n    this.renderConfig.dpr = (config && config.dpr) || 1\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1\n    }\n    this.renderedFrame = -1\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1,\n    }\n    this.contextData = new CVContextData()\n    this.elements = []\n    this.pendingElements = []\n    this.transformMat = new Matrix()\n    this.completeLayers = false\n    this.rendererType = 'canvas'\n  }\n  extendPrototype([CanvasRendererBase], CanvasRenderer)\n\n  CanvasRenderer.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this)\n  }\n\n  // Registering renderers\n  registerRenderer('canvas', CanvasRenderer)\n\n  // Registering shape modifiers\n  ShapeModifiers.registerModifier('tm', TrimModifier)\n  ShapeModifiers.registerModifier('pb', PuckerAndBloatModifier)\n  ShapeModifiers.registerModifier('rp', RepeaterModifier)\n  ShapeModifiers.registerModifier('rd', RoundCornersModifier)\n\n  const Expressions = (function () {\n    var ob = {}\n    ob.initExpressions = initExpressions\n\n    function initExpressions(animation) {\n      var stackCount = 0\n      var registers = []\n\n      function pushExpression() {\n        stackCount += 1\n      }\n\n      function popExpression() {\n        stackCount -= 1\n        if (stackCount === 0) {\n          releaseInstances()\n        }\n      }\n\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression)\n        }\n      }\n\n      function releaseInstances() {\n        var i\n        var len = registers.length\n        for (i = 0; i < len; i += 1) {\n          registers[i].release()\n        }\n        registers.length = 0\n      }\n\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer)\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer)\n      animation.renderer.globalData.pushExpression = pushExpression\n      animation.renderer.globalData.popExpression = popExpression\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty\n    }\n    return ob\n  })()\n\n  /* eslint-disable */\n  /*\n Copyright 2014 David Bau.\n\n Permission is hereby granted, free of charge, to any person obtaining\n a copy of this software and associated documentation files (the\n \"Software\"), to deal in the Software without restriction, including\n without limitation the rights to use, copy, modify, merge, publish,\n distribute, sublicense, and/or sell copies of the Software, and to\n permit persons to whom the Software is furnished to do so, subject to\n the following conditions:\n\n The above copyright notice and this permission notice shall be\n included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n */\n\n  function seedRandom(pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var global = this,\n      width = 256, // each RC4 output is 0 <= x < 256\n      chunks = 6, // at least six RC4 outputs for each double\n      digits = 52, // there are 52 significant digits in a double\n      rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n      startdenom = math.pow(width, chunks),\n      significance = math.pow(2, digits),\n      overflow = significance * 2,\n      mask = width - 1,\n      nodecrypto // node.js crypto module, initialized at the bottom.\n\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n    function seedrandom(seed, options, callback) {\n      var key = []\n      options = options === true ? { entropy: true } : options || {}\n\n      // Flatten the seed string or build one from local entropy if needed.\n      var shortseed = mixkey(\n        flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3),\n        key,\n      )\n\n      // Use the seed to initialize an ARC4 generator.\n      var arc4 = new ARC4(key)\n\n      // This function returns a random double in [0, 1) that contains\n      // randomness in every bit of the mantissa of the IEEE 754 value.\n      var prng = function () {\n        var n = arc4.g(chunks), // Start with a numerator n < 2 ^ 48\n          d = startdenom, //   and denominator d = 2 ^ 48.\n          x = 0 //   and no 'extra last byte'.\n        while (n < significance) {\n          // Fill up all significant digits by\n          n = (n + x) * width //   shifting numerator and\n          d *= width //   denominator and generating a\n          x = arc4.g(1) //   new least-significant-byte.\n        }\n        while (n >= overflow) {\n          // To avoid rounding up, before adding\n          n /= 2 //   last byte, shift everything\n          d /= 2 //   right using integer math until\n          x >>>= 1 //   we have exactly the desired bits.\n        }\n        return (n + x) / d // Form the number within [0, 1).\n      }\n\n      prng.int32 = function () {\n        return arc4.g(4) | 0\n      }\n      prng.quick = function () {\n        return arc4.g(4) / 0x100000000\n      }\n      prng.double = prng\n\n      // Mix the randomness into accumulated entropy.\n      mixkey(tostring(arc4.S), pool)\n\n      // Calling convention: what to return as a function of prng, seed, is_math.\n      return (\n        options.pass ||\n        callback ||\n        function (prng, seed, is_math_call, state) {\n          if (state) {\n            // Load the arc4 state from the given state if it has an S array.\n            if (state.S) {\n              copy(state, arc4)\n            }\n            // Only provide the .state method if requested via options.state.\n            prng.state = function () {\n              return copy(arc4, {})\n            }\n          }\n\n          // If called as a method of Math (Math.seedrandom()), mutate\n          // Math.random because that is how seedrandom.js has worked since v1.0.\n          if (is_math_call) {\n            math[rngname] = prng\n            return seed\n          }\n\n          // Otherwise, it is a newer calling convention, so return the\n          // prng directly.\n          else return prng\n        }\n      )(prng, shortseed, 'global' in options ? options.global : this == math, options.state)\n    }\n    math['seed' + rngname] = seedrandom\n\n    //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n    function ARC4(key) {\n      var t,\n        keylen = key.length,\n        me = this,\n        i = 0,\n        j = (me.i = me.j = 0),\n        s = (me.S = [])\n\n      // The empty key [] is treated as [0].\n      if (!keylen) {\n        key = [keylen++]\n      }\n\n      // Set up S using the standard key scheduling algorithm.\n      while (i < width) {\n        s[i] = i++\n      }\n      for (i = 0; i < width; i++) {\n        s[i] = s[(j = mask & (j + key[i % keylen] + (t = s[i])))]\n        s[j] = t\n      }\n\n      // The \"g\" method returns the next (count) outputs as one number.\n      me.g = function (count) {\n        // Using instance members instead of closure state nearly doubles speed.\n        var t,\n          r = 0,\n          i = me.i,\n          j = me.j,\n          s = me.S\n        while (count--) {\n          t = s[(i = mask & (i + 1))]\n          r = r * width + s[mask & ((s[i] = s[(j = mask & (j + t))]) + (s[j] = t))]\n        }\n        me.i = i\n        me.j = j\n        return r\n        // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n      }\n    }\n\n    //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n    function copy(f, t) {\n      t.i = f.i\n      t.j = f.j\n      t.S = f.S.slice()\n      return t\n    }\n\n    //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n    function flatten(obj, depth) {\n      var result = [],\n        typ = typeof obj,\n        prop\n      if (depth && typ == 'object') {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1))\n          } catch (e) {}\n        }\n      }\n      return result.length ? result : typ == 'string' ? obj : obj + '\\0'\n    }\n\n    //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n    function mixkey(seed, key) {\n      var stringseed = seed + '',\n        smear,\n        j = 0\n      while (j < stringseed.length) {\n        key[mask & j] = mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++))\n      }\n      return tostring(key)\n    }\n\n    //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n    function autoseed() {\n      try {\n        if (nodecrypto) {\n          return tostring(nodecrypto.randomBytes(width))\n        }\n        var out = new Uint8Array(width)\n        ;(global.crypto || global.msCrypto).getRandomValues(out)\n        return tostring(out)\n      } catch (e) {\n        var browser = global.navigator,\n          plugins = browser && browser.plugins\n        return [+new Date(), global, plugins, global.screen, tostring(pool)]\n      }\n    }\n\n    //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a)\n    }\n\n    //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n    mixkey(math.random(), pool)\n\n    //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n\n    // End anonymous scope, and pass initial values.\n  }\n\n  function initialize$2(BMMath) {\n    seedRandom([], BMMath)\n  }\n\n  var propTypes = {\n    SHAPE: 'shape',\n  }\n\n  /* eslint-disable camelcase */\n\n  const ExpressionManager = (function () {\n    'use strict'\n\n    var ob = {}\n    var Math = BMMath\n    var window = null\n    var document = null\n    var XMLHttpRequest = null\n    var fetch = null\n    var frames = null\n    initialize$2(BMMath)\n\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array\n    }\n\n    function isNumerable(tOfV, v) {\n      return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number\n    }\n\n    function $bm_neg(a) {\n      var tOfA = typeof a\n      if (tOfA === 'number' || tOfA === 'boolean' || a instanceof Number) {\n        return -a\n      }\n      if ($bm_isInstanceOfArray(a)) {\n        var i\n        var lenA = a.length\n        var retArr = []\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i]\n        }\n        return retArr\n      }\n      if (a.propType) {\n        return a.v\n      }\n      return -a\n    }\n\n    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, 'easeIn').get\n    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, 'easeOut').get\n    var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, 'easeInOut').get\n\n    function sum(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      if (tOfA === 'string' || tOfB === 'string') {\n        return a + b\n      }\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a + b\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0)\n        a[0] += b\n        return a\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0)\n        b[0] = a + b[0]\n        return b\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0\n        var lenA = a.length\n        var lenB = b.length\n        var retArr = []\n        while (i < lenA || i < lenB) {\n          if (\n            (typeof a[i] === 'number' || a[i] instanceof Number) &&\n            (typeof b[i] === 'number' || b[i] instanceof Number)\n          ) {\n            retArr[i] = a[i] + b[i]\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i]\n          }\n          i += 1\n        }\n        return retArr\n      }\n      return 0\n    }\n    var add = sum\n\n    function sub(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === 'string') {\n          a = parseInt(a, 10)\n        }\n        if (tOfB === 'string') {\n          b = parseInt(b, 10)\n        }\n        return a - b\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0)\n        a[0] -= b\n        return a\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0)\n        b[0] = a - b[0]\n        return b\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0\n        var lenA = a.length\n        var lenB = b.length\n        var retArr = []\n        while (i < lenA || i < lenB) {\n          if (\n            (typeof a[i] === 'number' || a[i] instanceof Number) &&\n            (typeof b[i] === 'number' || b[i] instanceof Number)\n          ) {\n            retArr[i] = a[i] - b[i]\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i]\n          }\n          i += 1\n        }\n        return retArr\n      }\n      return 0\n    }\n\n    function mul(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      var arr\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b\n      }\n\n      var i\n      var len\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b\n        }\n        return arr\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i]\n        }\n        return arr\n      }\n      return 0\n    }\n\n    function div(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      var arr\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b\n      }\n      var i\n      var len\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b\n        }\n        return arr\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i]\n        }\n        return arr\n      }\n      return 0\n    }\n    function mod(a, b) {\n      if (typeof a === 'string') {\n        a = parseInt(a, 10)\n      }\n      if (typeof b === 'string') {\n        b = parseInt(b, 10)\n      }\n      return a % b\n    }\n    var $bm_sum = sum\n    var $bm_sub = sub\n    var $bm_mul = mul\n    var $bm_div = div\n    var $bm_mod = mod\n\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max\n        max = min\n        min = mm\n      }\n      return Math.min(Math.max(num, min), max)\n    }\n\n    function radiansToDegrees(val) {\n      return val / degToRads\n    }\n    var radians_to_degrees = radiansToDegrees\n\n    function degreesToRadians(val) {\n      return val * degToRads\n    }\n    var degrees_to_radians = radiansToDegrees\n\n    var helperLengthArray = [0, 0, 0, 0, 0, 0]\n\n    function length(arr1, arr2) {\n      if (typeof arr1 === 'number' || arr1 instanceof Number) {\n        arr2 = arr2 || 0\n        return Math.abs(arr1 - arr2)\n      }\n      if (!arr2) {\n        arr2 = helperLengthArray\n      }\n      var i\n      var len = Math.min(arr1.length, arr2.length)\n      var addedLength = 0\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2)\n      }\n      return Math.sqrt(addedLength)\n    }\n\n    function normalize(vec) {\n      return div(vec, length(vec))\n    }\n\n    function rgbToHsl(val) {\n      var r = val[0]\n      var g = val[1]\n      var b = val[2]\n      var max = Math.max(r, g, b)\n      var min = Math.min(r, g, b)\n      var h\n      var s\n      var l = (max + min) / 2\n\n      if (max === min) {\n        h = 0 // achromatic\n        s = 0 // achromatic\n      } else {\n        var d = max - min\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0)\n            break\n          case g:\n            h = (b - r) / d + 2\n            break\n          case b:\n            h = (r - g) / d + 4\n            break\n          default:\n            break\n        }\n        h /= 6\n      }\n\n      return [h, s, l, val[3]]\n    }\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1\n      if (t > 1) t -= 1\n      if (t < 1 / 6) return p + (q - p) * 6 * t\n      if (t < 1 / 2) return q\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n      return p\n    }\n\n    function hslToRgb(val) {\n      var h = val[0]\n      var s = val[1]\n      var l = val[2]\n\n      var r\n      var g\n      var b\n\n      if (s === 0) {\n        r = l // achromatic\n        b = l // achromatic\n        g = l // achromatic\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s\n        var p = 2 * l - q\n        r = hue2rgb(p, q, h + 1 / 3)\n        g = hue2rgb(p, q, h)\n        b = hue2rgb(p, q, h - 1 / 3)\n      }\n\n      return [r, g, b, val[3]]\n    }\n\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === undefined || value2 === undefined) {\n        value1 = tMin\n        value2 = tMax\n        tMin = 0\n        tMax = 1\n      }\n      if (tMax < tMin) {\n        var _tMin = tMax\n        tMax = tMin\n        tMin = _tMin\n      }\n      if (t <= tMin) {\n        return value1\n      }\n      if (t >= tMax) {\n        return value2\n      }\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin)\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc\n      }\n      var i\n      var len = value1.length\n      var arr = createTypedArray('float32', len)\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc\n      }\n      return arr\n    }\n    function random(min, max) {\n      if (max === undefined) {\n        if (min === undefined) {\n          min = 0\n          max = 1\n        } else {\n          max = min\n          min = undefined\n        }\n      }\n      if (max.length) {\n        var i\n        var len = max.length\n        if (!min) {\n          min = createTypedArray('float32', len)\n        }\n        var arr = createTypedArray('float32', len)\n        var rnd = BMMath.random()\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i])\n        }\n        return arr\n      }\n      if (min === undefined) {\n        min = 0\n      }\n      var rndm = BMMath.random()\n      return min + rndm * (max - min)\n    }\n\n    function createPath(points, inTangents, outTangents, closed) {\n      var i\n      var len = points.length\n      var path = shapePool.newElement()\n      path.setPathData(!!closed, len)\n      var arrPlaceholder = [0, 0]\n      var inVertexPoint\n      var outVertexPoint\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder\n        path.setTripleAt(\n          points[i][0],\n          points[i][1],\n          outVertexPoint[0] + points[i][0],\n          outVertexPoint[1] + points[i][1],\n          inVertexPoint[0] + points[i][0],\n          inVertexPoint[1] + points[i][1],\n          i,\n          true,\n        )\n      }\n      return path\n    }\n\n    function initiateExpression(elem, data, property) {\n      var val = data.x\n      var needsVelocity = /velocity(?![\\w\\d])/.test(val)\n      var _needsRandom = val.indexOf('random') !== -1\n      var elemType = elem.data.ty\n      var transform\n      var $bm_transform\n      var content\n      var effect\n      var thisProperty = property\n      thisProperty.valueAtTime = thisProperty.getValueAtTime\n      Object.defineProperty(thisProperty, 'value', {\n        get: function () {\n          return thisProperty.v\n        },\n      })\n      elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate\n      elem.comp.displayStartTime = 0\n      var inPoint = elem.data.ip / elem.comp.globalData.frameRate\n      var outPoint = elem.data.op / elem.comp.globalData.frameRate\n      var width = elem.data.sw ? elem.data.sw : 0\n      var height = elem.data.sh ? elem.data.sh : 0\n      var name = elem.data.nm\n      var loopIn\n      var loop_in\n      var loopOut\n      var loop_out\n      var smooth\n      var toWorld\n      var fromWorld\n      var fromComp\n      var toComp\n      var fromCompToSurface\n      var position\n      var rotation\n      var anchorPoint\n      var scale\n      var thisLayer\n      var thisComp\n      var mask\n      var valueAtTime\n      var velocityAtTime\n\n      var scoped_bm_rt\n      // val = val.replace(/(\\\\?\"|')((http)(s)?(:\\/))?\\/.*?(\\\\?\"|')/g, \"\\\"\\\"\"); // deter potential network calls\n      var expression_function = eval('[function _expression_function(){' + val + ';scoped_bm_rt=$bm_rt}]')[0] // eslint-disable-line no-eval\n      var numKeys = property.kf ? data.k.length : 0\n\n      var active = !this.data || this.data.hd !== true\n\n      var wiggle = function wiggle(freq, amp) {\n        var iWiggle\n        var j\n        var lenWiggle = this.pv.length ? this.pv.length : 1\n        var addedAmps = createTypedArray('float32', lenWiggle)\n        freq = 5\n        var iterations = Math.floor(time * freq)\n        iWiggle = 0\n        j = 0\n        while (iWiggle < iterations) {\n          // var rnd = BMMath.random();\n          for (j = 0; j < lenWiggle; j += 1) {\n            addedAmps[j] += -amp + amp * 2 * BMMath.random()\n            // addedAmps[j] += -amp + amp*2*rnd;\n          }\n          iWiggle += 1\n        }\n        // var rnd2 = BMMath.random();\n        var periods = time * freq\n        var perc = periods - Math.floor(periods)\n        var arr = createTypedArray('float32', lenWiggle)\n        if (lenWiggle > 1) {\n          for (j = 0; j < lenWiggle; j += 1) {\n            arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc\n            // arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\n            // arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\n          }\n          return arr\n        }\n        return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc\n      }.bind(this)\n\n      if (thisProperty.loopIn) {\n        loopIn = thisProperty.loopIn.bind(thisProperty)\n        loop_in = loopIn\n      }\n\n      if (thisProperty.loopOut) {\n        loopOut = thisProperty.loopOut.bind(thisProperty)\n        loop_out = loopOut\n      }\n\n      if (thisProperty.smooth) {\n        smooth = thisProperty.smooth.bind(thisProperty)\n      }\n\n      function loopInDuration(type, duration) {\n        return loopIn(type, duration, true)\n      }\n\n      function loopOutDuration(type, duration) {\n        return loopOut(type, duration, true)\n      }\n\n      if (this.getValueAtTime) {\n        valueAtTime = this.getValueAtTime.bind(this)\n      }\n\n      if (this.getVelocityAtTime) {\n        velocityAtTime = this.getVelocityAtTime.bind(this)\n      }\n\n      var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface)\n\n      function lookAt(elem1, elem2) {\n        var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]]\n        var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads\n        var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads\n        return [yaw, pitch, 0]\n      }\n\n      function easeOut(t, tMin, tMax, val1, val2) {\n        return applyEase(easeOutBez, t, tMin, tMax, val1, val2)\n      }\n\n      function easeIn(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInBez, t, tMin, tMax, val1, val2)\n      }\n\n      function ease(t, tMin, tMax, val1, val2) {\n        return applyEase(easeInOutBez, t, tMin, tMax, val1, val2)\n      }\n\n      function applyEase(fn, t, tMin, tMax, val1, val2) {\n        if (val1 === undefined) {\n          val1 = tMin\n          val2 = tMax\n        } else {\n          t = (t - tMin) / (tMax - tMin)\n        }\n        if (t > 1) {\n          t = 1\n        } else if (t < 0) {\n          t = 0\n        }\n        var mult = fn(t)\n        if ($bm_isInstanceOfArray(val1)) {\n          var iKey\n          var lenKey = val1.length\n          var arr = createTypedArray('float32', lenKey)\n          for (iKey = 0; iKey < lenKey; iKey += 1) {\n            arr[iKey] = (val2[iKey] - val1[iKey]) * mult + val1[iKey]\n          }\n          return arr\n        }\n        return (val2 - val1) * mult + val1\n      }\n\n      function nearestKey(time) {\n        var iKey\n        var lenKey = data.k.length\n        var index\n        var keyTime\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          index = 0\n          keyTime = 0\n        } else {\n          index = -1\n          time *= elem.comp.globalData.frameRate\n          if (time < data.k[0].t) {\n            index = 1\n            keyTime = data.k[0].t\n          } else {\n            for (iKey = 0; iKey < lenKey - 1; iKey += 1) {\n              if (time === data.k[iKey].t) {\n                index = iKey + 1\n                keyTime = data.k[iKey].t\n                break\n              } else if (time > data.k[iKey].t && time < data.k[iKey + 1].t) {\n                if (time - data.k[iKey].t > data.k[iKey + 1].t - time) {\n                  index = iKey + 2\n                  keyTime = data.k[iKey + 1].t\n                } else {\n                  index = iKey + 1\n                  keyTime = data.k[iKey].t\n                }\n                break\n              }\n            }\n            if (index === -1) {\n              index = iKey + 1\n              keyTime = data.k[iKey].t\n            }\n          }\n        }\n        var obKey = {}\n        obKey.index = index\n        obKey.time = keyTime / elem.comp.globalData.frameRate\n        return obKey\n      }\n\n      function key(ind) {\n        var obKey\n        var iKey\n        var lenKey\n        if (!data.k.length || typeof data.k[0] === 'number') {\n          throw new Error('The property has no keyframe at index ' + ind)\n        }\n        ind -= 1\n        obKey = {\n          time: data.k[ind].t / elem.comp.globalData.frameRate,\n          value: [],\n        }\n        var arr = Object.prototype.hasOwnProperty.call(data.k[ind], 's') ? data.k[ind].s : data.k[ind - 1].e\n\n        lenKey = arr.length\n        for (iKey = 0; iKey < lenKey; iKey += 1) {\n          obKey[iKey] = arr[iKey]\n          obKey.value[iKey] = arr[iKey]\n        }\n        return obKey\n      }\n\n      function framesToTime(fr, fps) {\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate\n        }\n        return fr / fps\n      }\n\n      function timeToFrames(t, fps) {\n        if (!t && t !== 0) {\n          t = time\n        }\n        if (!fps) {\n          fps = elem.comp.globalData.frameRate\n        }\n        return t * fps\n      }\n\n      function seedRandom(seed) {\n        BMMath.seedrandom(randSeed + seed)\n      }\n\n      function sourceRectAtTime() {\n        return elem.sourceRectAtTime()\n      }\n\n      function substring(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substring(init)\n          }\n          return value.substring(init, end)\n        }\n        return ''\n      }\n\n      function substr(init, end) {\n        if (typeof value === 'string') {\n          if (end === undefined) {\n            return value.substr(init)\n          }\n          return value.substr(init, end)\n        }\n        return ''\n      }\n\n      function posterizeTime(framesPerSecond) {\n        time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond\n        value = valueAtTime(time)\n      }\n\n      var time\n      var velocity\n      var value\n      var text\n      var textIndex\n      var textTotal\n      var selectorValue\n      var index = elem.data.ind\n      var hasParent = !!(elem.hierarchy && elem.hierarchy.length)\n      var parent\n      var randSeed = Math.floor(Math.random() * 1000000)\n      var globalData = elem.globalData\n      function executeExpression(_value) {\n        // globalData.pushExpression();\n        value = _value\n        if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\n          return value\n        }\n        if (this.propType === 'textSelector') {\n          textIndex = this.textIndex\n          textTotal = this.textTotal\n          selectorValue = this.selectorValue\n        }\n        if (!thisLayer) {\n          text = elem.layerInterface.text\n          thisLayer = elem.layerInterface\n          thisComp = elem.comp.compInterface\n          toWorld = thisLayer.toWorld.bind(thisLayer)\n          fromWorld = thisLayer.fromWorld.bind(thisLayer)\n          fromComp = thisLayer.fromComp.bind(thisLayer)\n          toComp = thisLayer.toComp.bind(thisLayer)\n          mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null\n          fromCompToSurface = fromComp\n        }\n        if (!transform) {\n          transform = elem.layerInterface('ADBE Transform Group')\n          $bm_transform = transform\n          if (transform) {\n            anchorPoint = transform.anchorPoint\n            /* position = transform.position;\n                    rotation = transform.rotation;\n                    scale = transform.scale; */\n          }\n        }\n\n        if (elemType === 4 && !content) {\n          content = thisLayer('ADBE Root Vectors Group')\n        }\n        if (!effect) {\n          effect = thisLayer(4)\n        }\n        hasParent = !!(elem.hierarchy && elem.hierarchy.length)\n        if (hasParent && !parent) {\n          parent = elem.hierarchy[0].layerInterface\n        }\n        time = this.comp.renderedFrame / this.comp.globalData.frameRate\n        if (_needsRandom) {\n          seedRandom(randSeed + time)\n        }\n        if (needsVelocity) {\n          velocity = velocityAtTime(time)\n        }\n        expression_function()\n        this.frameExpressionId = elem.globalData.frameId\n\n        // TODO: Check if it's possible to return on ShapeInterface the .v value\n        // Changed this to a ternary operation because Rollup failed compiling it correctly\n        scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt\n        return scoped_bm_rt\n      }\n      // Bundlers will see these as dead code and unless we reference them\n      executeExpression.__preventDeadCodeRemoval = [\n        $bm_transform,\n        anchorPoint,\n        time,\n        velocity,\n        inPoint,\n        outPoint,\n        width,\n        height,\n        name,\n        loop_in,\n        loop_out,\n        smooth,\n        toComp,\n        fromCompToSurface,\n        toWorld,\n        fromWorld,\n        mask,\n        position,\n        rotation,\n        scale,\n        thisComp,\n        numKeys,\n        active,\n        wiggle,\n        loopInDuration,\n        loopOutDuration,\n        comp,\n        lookAt,\n        easeOut,\n        easeIn,\n        ease,\n        nearestKey,\n        key,\n        text,\n        textIndex,\n        textTotal,\n        selectorValue,\n        framesToTime,\n        timeToFrames,\n        sourceRectAtTime,\n        substring,\n        substr,\n        posterizeTime,\n        index,\n        globalData,\n      ]\n      return executeExpression\n    }\n\n    ob.initiateExpression = initiateExpression\n    ob.__preventDeadCodeRemoval = [\n      window,\n      document,\n      XMLHttpRequest,\n      fetch,\n      frames,\n      $bm_neg,\n      add,\n      $bm_sum,\n      $bm_sub,\n      $bm_mul,\n      $bm_div,\n      $bm_mod,\n      clamp,\n      radians_to_degrees,\n      degreesToRadians,\n      degrees_to_radians,\n      normalize,\n      rgbToHsl,\n      hslToRgb,\n      linear,\n      random,\n      createPath,\n    ]\n    return ob\n  })()\n\n  const expressionHelpers = (function () {\n    function searchExpressions(elem, data, prop) {\n      if (data.x) {\n        prop.k = true\n        prop.x = true\n        prop.initiateExpression = ExpressionManager.initiateExpression\n        prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop))\n      }\n    }\n\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate\n      frameNum -= this.offsetTime\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime)\n        this._cachingAtTime.lastFrame = frameNum\n      }\n      return this._cachingAtTime.value\n    }\n\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01\n      var v1 = this.getValueAtTime(frameNum)\n      var v2 = this.getValueAtTime(frameNum + delta)\n      var speed = 0\n      if (v1.length) {\n        var i\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2)\n        }\n        speed = Math.sqrt(speed) * 100\n      } else {\n        speed = 0\n      }\n      return speed\n    }\n\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== undefined) {\n        return this.vel\n      }\n      var delta = -0.001\n      // frameNum += this.elem.data.st;\n      var v1 = this.getValueAtTime(frameNum)\n      var v2 = this.getValueAtTime(frameNum + delta)\n      var velocity\n      if (v1.length) {\n        velocity = createTypedArray('float32', v1.length)\n        var i\n        for (i = 0; i < v1.length; i += 1) {\n          // removing frameRate\n          // if needed, don't add it here\n          // velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\n          velocity[i] = (v2[i] - v1[i]) / delta\n        }\n      } else {\n        velocity = (v2 - v1) / delta\n      }\n      return velocity\n    }\n\n    function getStaticValueAtTime() {\n      return this.pv\n    }\n\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup\n    }\n\n    return {\n      searchExpressions: searchExpressions,\n      getSpeedAtTime: getSpeedAtTime,\n      getVelocityAtTime: getVelocityAtTime,\n      getValueAtTime: getValueAtTime,\n      getStaticValueAtTime: getStaticValueAtTime,\n      setGroupProperty: setGroupProperty,\n    }\n  })()\n\n  function addPropertyDecorator() {\n    function loopOut(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv\n      }\n      type = type ? type.toLowerCase() : ''\n      var currentFrame = this.comp.renderedFrame\n      var keyframes = this.keyframes\n      var lastKeyFrame = keyframes[keyframes.length - 1].t\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv\n      }\n      var cycleDuration\n      var firstKeyFrame\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1\n        }\n        firstKeyFrame = keyframes[keyframes.length - 1 - duration].t\n        cycleDuration = lastKeyFrame - firstKeyFrame\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip)\n        } else {\n          cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration)\n        }\n        firstKeyFrame = lastKeyFrame - cycleDuration\n      }\n      var i\n      var len\n      var ret\n      if (type === 'pingpong') {\n        var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration)\n        if (iterations % 2 !== 0) {\n          return this.getValueAtTime(\n            (cycleDuration - ((currentFrame - firstKeyFrame) % cycleDuration) + firstKeyFrame) /\n              this.comp.globalData.frameRate,\n            0,\n          ) // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0)\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0)\n        var current = this.getValueAtTime(\n          (((currentFrame - firstKeyFrame) % cycleDuration) + firstKeyFrame) / this.comp.globalData.frameRate,\n          0,\n        ) // eslint-disable-line\n        var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration)\n        if (this.pv.length) {\n          ret = new Array(initV.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] = (endV[i] - initV[i]) * repeats + current[i]\n          }\n          return ret\n        }\n        return (endV - initV) * repeats + current\n      } else if (type === 'continue') {\n        var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0)\n        var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0)\n        if (this.pv.length) {\n          ret = new Array(lastValue.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] =\n              lastValue[i] +\n              ((lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate)) /\n                0.0005 // eslint-disable-line\n          }\n          return ret\n        }\n        return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 0.001)\n      }\n      return this.getValueAtTime(\n        (((currentFrame - firstKeyFrame) % cycleDuration) + firstKeyFrame) / this.comp.globalData.frameRate,\n        0,\n      ) // eslint-disable-line\n    }\n\n    function loopIn(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv\n      }\n      type = type ? type.toLowerCase() : ''\n      var currentFrame = this.comp.renderedFrame\n      var keyframes = this.keyframes\n      var firstKeyFrame = keyframes[0].t\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv\n      }\n      var cycleDuration\n      var lastKeyFrame\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1\n        }\n        lastKeyFrame = keyframes[duration].t\n        cycleDuration = lastKeyFrame - firstKeyFrame\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame)\n        } else {\n          cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration)\n        }\n        lastKeyFrame = firstKeyFrame + cycleDuration\n      }\n      var i\n      var len\n      var ret\n      if (type === 'pingpong') {\n        var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration)\n        if (iterations % 2 === 0) {\n          return this.getValueAtTime(\n            (((firstKeyFrame - currentFrame) % cycleDuration) + firstKeyFrame) / this.comp.globalData.frameRate,\n            0,\n          ) // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0)\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0)\n        var current = this.getValueAtTime(\n          (cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration) + firstKeyFrame) /\n            this.comp.globalData.frameRate,\n          0,\n        )\n        var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1\n        if (this.pv.length) {\n          ret = new Array(initV.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] = current[i] - (endV[i] - initV[i]) * repeats\n          }\n          return ret\n        }\n        return current - (endV - initV) * repeats\n      } else if (type === 'continue') {\n        var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0)\n        var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0)\n        if (this.pv.length) {\n          ret = new Array(firstValue.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] = firstValue[i] + ((firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame)) / 0.001\n          }\n          return ret\n        }\n        return firstValue + ((firstValue - nextFirstValue) * (firstKeyFrame - currentFrame)) / 0.001\n      }\n      return this.getValueAtTime(\n        (cycleDuration - (((firstKeyFrame - currentFrame) % cycleDuration) + firstKeyFrame)) /\n          this.comp.globalData.frameRate,\n        0,\n      ) // eslint-disable-line\n    }\n\n    function smooth(width, samples) {\n      if (!this.k) {\n        return this.pv\n      }\n      width = (width || 0.4) * 0.5\n      samples = Math.floor(samples || 5)\n      if (samples <= 1) {\n        return this.pv\n      }\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate\n      var initFrame = currentTime - width\n      var endFrame = currentTime + width\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1\n      var i = 0\n      var j = 0\n      var value\n      if (this.pv.length) {\n        value = createTypedArray('float32', this.pv.length)\n      } else {\n        value = 0\n      }\n      var sampleValue\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency)\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value[j] += sampleValue[j]\n          }\n        } else {\n          value += sampleValue\n        }\n        i += 1\n      }\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value[j] /= samples\n        }\n      } else {\n        value /= samples\n      }\n      return value\n    }\n\n    function getTransformValueAtTime(time) {\n      if (!this._transformCachingAtTime) {\n        this._transformCachingAtTime = {\n          v: new Matrix(),\n        }\n      }\n      /// /\n      var matrix = this._transformCachingAtTime.v\n      matrix.cloneFromProps(this.pre.props)\n      if (this.appliedTransformations < 1) {\n        var anchor = this.a.getValueAtTime(time)\n        matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult)\n      }\n      if (this.appliedTransformations < 2) {\n        var scale = this.s.getValueAtTime(time)\n        matrix.scale(scale[0] * this.s.mult, scale[1] * this.s.mult, scale[2] * this.s.mult)\n      }\n      if (this.sk && this.appliedTransformations < 3) {\n        var skew = this.sk.getValueAtTime(time)\n        var skewAxis = this.sa.getValueAtTime(time)\n        matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult)\n      }\n      if (this.r && this.appliedTransformations < 4) {\n        var rotation = this.r.getValueAtTime(time)\n        matrix.rotate(-rotation * this.r.mult)\n      } else if (!this.r && this.appliedTransformations < 4) {\n        var rotationZ = this.rz.getValueAtTime(time)\n        var rotationY = this.ry.getValueAtTime(time)\n        var rotationX = this.rx.getValueAtTime(time)\n        var orientation = this.or.getValueAtTime(time)\n        matrix\n          .rotateZ(-rotationZ * this.rz.mult)\n          .rotateY(rotationY * this.ry.mult)\n          .rotateX(rotationX * this.rx.mult)\n          .rotateZ(-orientation[2] * this.or.mult)\n          .rotateY(orientation[1] * this.or.mult)\n          .rotateX(orientation[0] * this.or.mult)\n      }\n      if (this.data.p && this.data.p.s) {\n        var positionX = this.px.getValueAtTime(time)\n        var positionY = this.py.getValueAtTime(time)\n        if (this.data.p.z) {\n          var positionZ = this.pz.getValueAtTime(time)\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult)\n        } else {\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0)\n        }\n      } else {\n        var position = this.p.getValueAtTime(time)\n        matrix.translate(position[0] * this.p.mult, position[1] * this.p.mult, -position[2] * this.p.mult)\n      }\n      return matrix\n      /// /\n    }\n\n    function getTransformStaticValueAtTime() {\n      return this.v.clone(new Matrix())\n    }\n\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty\n    TransformPropertyFactory.getTransformProperty = function (elem, data, container) {\n      var prop = getTransformProperty(elem, data, container)\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop)\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop)\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty\n      return prop\n    }\n\n    var propertyGetProp = PropertyFactory.getProp\n    PropertyFactory.getProp = function (elem, data, type, mult, container) {\n      var prop = propertyGetProp(elem, data, type, mult, container)\n      // prop.getVelocityAtTime = getVelocityAtTime;\n      // prop.loopOut = loopOut;\n      // prop.loopIn = loopIn;\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop)\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop)\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty\n      prop.loopOut = loopOut\n      prop.loopIn = loopIn\n      prop.smooth = smooth\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop)\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop)\n      prop.numKeys = data.a === 1 ? data.k.length : 0\n      prop.propertyIndex = data.ix\n      var value = 0\n      if (type !== 0) {\n        value = createTypedArray('float32', data.a === 1 ? data.k[0].s.length : data.k.length)\n      }\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value: value,\n      }\n      expressionHelpers.searchExpressions(elem, data, prop)\n      if (prop.k) {\n        container.addDynamicProperty(prop)\n      }\n\n      return prop\n    }\n\n    function getShapeValueAtTime(frameNum) {\n      // For now this caching object is created only when needed instead of creating it when the shape is initialized.\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shapePool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame,\n        }\n      }\n\n      frameNum *= this.elem.globalData.frameRate\n      frameNum -= this.offsetTime\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0\n        this._cachingAtTime.lastTime = frameNum\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime)\n      }\n      return this._cachingAtTime.shapeValue\n    }\n\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction()\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction()\n\n    function ShapeExpressions() {}\n    ShapeExpressions.prototype = {\n      vertices: function (prop, time) {\n        if (this.k) {\n          this.getValue()\n        }\n        var shapePath = this.v\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0)\n        }\n        var i\n        var len = shapePath._length\n        var vertices = shapePath[prop]\n        var points = shapePath.v\n        var arr = createSizedArray(len)\n        for (i = 0; i < len; i += 1) {\n          if (prop === 'i' || prop === 'o') {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]]\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]]\n          }\n        }\n        return arr\n      },\n      points: function (time) {\n        return this.vertices('v', time)\n      },\n      inTangents: function (time) {\n        return this.vertices('i', time)\n      },\n      outTangents: function (time) {\n        return this.vertices('o', time)\n      },\n      isClosed: function () {\n        return this.v.c\n      },\n      pointOnPath: function (perc, time) {\n        var shapePath = this.v\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0)\n        }\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath)\n        }\n\n        var segmentsLength = this._segmentsLength\n        var lengths = segmentsLength.lengths\n        var lengthPos = segmentsLength.totalLength * perc\n        var i = 0\n        var len = lengths.length\n        var accumulatedLength = 0\n        var pt\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength\n            pt = bez.getPointInSegment(\n              shapePath.v[initIndex],\n              shapePath.v[endIndex],\n              shapePath.o[initIndex],\n              shapePath.i[endIndex],\n              segmentPerc,\n              lengths[i],\n            )\n            break\n          } else {\n            accumulatedLength += lengths[i].addedLength\n          }\n          i += 1\n        }\n        if (!pt) {\n          pt = shapePath.c\n            ? [shapePath.v[0][0], shapePath.v[0][1]]\n            : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]]\n        }\n        return pt\n      },\n      vectorOnPath: function (perc, time, vectorType) {\n        // perc doesn't use triple equality because it can be a Number object as well as a primitive.\n        if (perc == 1) {\n          // eslint-disable-line eqeqeq\n          perc = this.v.c\n        } else if (perc == 0) {\n          // eslint-disable-line eqeqeq\n          perc = 0.999\n        }\n        var pt1 = this.pointOnPath(perc, time)\n        var pt2 = this.pointOnPath(perc + 0.001, time)\n        var xLength = pt2[0] - pt1[0]\n        var yLength = pt2[1] - pt1[1]\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2))\n        if (magnitude === 0) {\n          return [0, 0]\n        }\n        var unitVector =\n          vectorType === 'tangent'\n            ? [xLength / magnitude, yLength / magnitude]\n            : [-yLength / magnitude, xLength / magnitude]\n        return unitVector\n      },\n      tangentOnPath: function (perc, time) {\n        return this.vectorOnPath(perc, time, 'tangent')\n      },\n      normalOnPath: function (perc, time) {\n        return this.vectorOnPath(perc, time, 'normal')\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime,\n    }\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction)\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction)\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression\n\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp\n    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem, data, type, arr, trims)\n      prop.propertyIndex = data.ix\n      prop.lock = false\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem, data.pt, prop)\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem, data.ks, prop)\n      }\n      if (prop.k) {\n        elem.addDynamicProperty(prop)\n      }\n      return prop\n    }\n  }\n\n  function initialize$1() {\n    addPropertyDecorator()\n  }\n\n  function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this)\n        this.addEffect(this.getExpressionValue.bind(this))\n        return true\n      }\n      return null\n    }\n\n    TextProperty.prototype.getExpressionValue = function (currentValue, text) {\n      var newValue = this.calculateExpression(text)\n      if (currentValue.t !== newValue) {\n        var newData = {}\n        this.copyData(newData, currentValue)\n        newData.t = newValue.toString()\n        newData.__complete = false\n        return newData\n      }\n      return currentValue\n    }\n\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes()\n      var hasExpressions = this.searchExpressions()\n      this.kf = isKeyframed || hasExpressions\n      return this.kf\n    }\n\n    TextProperty.prototype.searchExpressions = searchExpressions\n  }\n\n  function initialize() {\n    addDecorator()\n  }\n\n  // Registering expression plugin\n  setExpressionsPlugin(Expressions)\n  initialize$1()\n  initialize()\n\n  return lottie\n})()\n\nexport { lottie as default }\n"]},"metadata":{},"sourceType":"module"}