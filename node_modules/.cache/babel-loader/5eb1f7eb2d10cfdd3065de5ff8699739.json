{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, MOUSE, Vector3, Vector2, Quaternion } from \"three\";\nclass TrackballControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"enabled\", true);\n    __publicField(this, \"screen\", {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    });\n    __publicField(this, \"rotateSpeed\", 1);\n    __publicField(this, \"zoomSpeed\", 1.2);\n    __publicField(this, \"panSpeed\", 0.3);\n    __publicField(this, \"noRotate\", false);\n    __publicField(this, \"noZoom\", false);\n    __publicField(this, \"noPan\", false);\n    __publicField(this, \"staticMoving\", false);\n    __publicField(this, \"dynamicDampingFactor\", 0.2);\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    __publicField(this, \"keys\", [\"KeyA\", \"KeyS\", \"KeyD\"\n    /*D*/]);\n    __publicField(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    __publicField(this, \"cursorZoom\", false);\n    __publicField(this, \"target\", new Vector3());\n    __publicField(this, \"mousePosition\", new Vector2());\n    // internals\n    __publicField(this, \"STATE\", {\n      NONE: -1,\n      ROTATE: 0,\n      ZOOM: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_ZOOM_PAN: 4\n    });\n    __publicField(this, \"EPS\", 1e-6);\n    __publicField(this, \"lastZoom\", 1);\n    __publicField(this, \"lastPosition\", new Vector3());\n    __publicField(this, \"cursorVector\", new Vector3());\n    __publicField(this, \"targetVector\", new Vector3());\n    __publicField(this, \"_state\", this.STATE.NONE);\n    __publicField(this, \"_keyState\", this.STATE.NONE);\n    __publicField(this, \"_eye\", new Vector3());\n    __publicField(this, \"_movePrev\", new Vector2());\n    __publicField(this, \"_moveCurr\", new Vector2());\n    __publicField(this, \"_lastAxis\", new Vector3());\n    __publicField(this, \"_lastAngle\", 0);\n    __publicField(this, \"_zoomStart\", new Vector2());\n    __publicField(this, \"_zoomEnd\", new Vector2());\n    __publicField(this, \"_touchZoomDistanceStart\", 0);\n    __publicField(this, \"_touchZoomDistanceEnd\", 0);\n    __publicField(this, \"_panStart\", new Vector2());\n    __publicField(this, \"_panEnd\", new Vector2());\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"up0\");\n    __publicField(this, \"zoom0\");\n    // events\n    __publicField(this, \"changeEvent\", {\n      type: \"change\"\n    });\n    __publicField(this, \"startEvent\", {\n      type: \"start\"\n    });\n    __publicField(this, \"endEvent\", {\n      type: \"end\"\n    });\n    __publicField(this, \"onScreenVector\", new Vector2());\n    __publicField(this, \"getMouseOnScreen\", (pageX, pageY) => {\n      this.onScreenVector.set((pageX - this.screen.left) / this.screen.width, (pageY - this.screen.top) / this.screen.height);\n      return this.onScreenVector;\n    });\n    __publicField(this, \"onCircleVector\", new Vector2());\n    __publicField(this, \"getMouseOnCircle\", (pageX, pageY) => {\n      this.onCircleVector.set((pageX - this.screen.width * 0.5 - this.screen.left) / (this.screen.width * 0.5), (this.screen.height + 2 * (this.screen.top - pageY)) / this.screen.width\n      // screen.width intentional\n      );\n      return this.onCircleVector;\n    });\n    __publicField(this, \"axis\", new Vector3());\n    __publicField(this, \"quaternion\", new Quaternion());\n    __publicField(this, \"eyeDirection\", new Vector3());\n    __publicField(this, \"objectUpDirection\", new Vector3());\n    __publicField(this, \"objectSidewaysDirection\", new Vector3());\n    __publicField(this, \"moveDirection\", new Vector3());\n    __publicField(this, \"angle\", 0);\n    __publicField(this, \"rotateCamera\", () => {\n      this.moveDirection.set(this._moveCurr.x - this._movePrev.x, this._moveCurr.y - this._movePrev.y, 0);\n      this.angle = this.moveDirection.length();\n      if (this.angle) {\n        this._eye.copy(this.object.position).sub(this.target);\n        this.eyeDirection.copy(this._eye).normalize();\n        this.objectUpDirection.copy(this.object.up).normalize();\n        this.objectSidewaysDirection.crossVectors(this.objectUpDirection, this.eyeDirection).normalize();\n        this.objectUpDirection.setLength(this._moveCurr.y - this._movePrev.y);\n        this.objectSidewaysDirection.setLength(this._moveCurr.x - this._movePrev.x);\n        this.moveDirection.copy(this.objectUpDirection.add(this.objectSidewaysDirection));\n        this.axis.crossVectors(this.moveDirection, this._eye).normalize();\n        this.angle *= this.rotateSpeed;\n        this.quaternion.setFromAxisAngle(this.axis, this.angle);\n        this._eye.applyQuaternion(this.quaternion);\n        this.object.up.applyQuaternion(this.quaternion);\n        this._lastAxis.copy(this.axis);\n        this._lastAngle = this.angle;\n      } else if (!this.staticMoving && this._lastAngle) {\n        this._lastAngle *= Math.sqrt(1 - this.dynamicDampingFactor);\n        this._eye.copy(this.object.position).sub(this.target);\n        this.quaternion.setFromAxisAngle(this._lastAxis, this._lastAngle);\n        this._eye.applyQuaternion(this.quaternion);\n        this.object.up.applyQuaternion(this.quaternion);\n      }\n      this._movePrev.copy(this._moveCurr);\n    });\n    __publicField(this, \"zoomCamera\", () => {\n      let factor;\n      if (this._state === this.STATE.TOUCH_ZOOM_PAN) {\n        factor = this._touchZoomDistanceStart / this._touchZoomDistanceEnd;\n        this._touchZoomDistanceStart = this._touchZoomDistanceEnd;\n        if (this.object.isPerspectiveCamera) {\n          this._eye.multiplyScalar(factor);\n        } else if (this.object.isOrthographicCamera) {\n          this.object.zoom /= factor;\n          this.object.updateProjectionMatrix();\n        } else {\n          console.warn(\"THREE.TrackballControls: Unsupported camera type\");\n        }\n      } else {\n        factor = 1 + (this._zoomEnd.y - this._zoomStart.y) * this.zoomSpeed;\n        if (Math.abs(factor - 1) > this.EPS && factor > 0) {\n          if (this.object.isPerspectiveCamera) {\n            if (factor > 1 && this._eye.length() >= this.maxDistance - this.EPS) {\n              factor = 1;\n            }\n            this._eye.multiplyScalar(factor);\n          } else if (this.object.isOrthographicCamera) {\n            if (factor > 1 && this.object.zoom < this.maxDistance * this.maxDistance) {\n              factor = 1;\n            }\n            this.object.zoom /= factor;\n          } else {\n            console.warn(\"THREE.TrackballControls: Unsupported camera type\");\n          }\n        }\n        if (this.staticMoving) {\n          this._zoomStart.copy(this._zoomEnd);\n        } else {\n          this._zoomStart.y += (this._zoomEnd.y - this._zoomStart.y) * this.dynamicDampingFactor;\n        }\n        if (this.cursorZoom) {\n          this.targetVector.copy(this.target).project(this.object);\n          let worldPos = this.cursorVector.set(this.mousePosition.x, this.mousePosition.y, this.targetVector.z).unproject(this.object);\n          this.target.lerpVectors(worldPos, this.target, factor);\n        }\n        if (this.object.isOrthographicCamera) {\n          this.object.updateProjectionMatrix();\n        }\n      }\n    });\n    __publicField(this, \"mouseChange\", new Vector2());\n    __publicField(this, \"objectUp\", new Vector3());\n    __publicField(this, \"pan\", new Vector3());\n    __publicField(this, \"panCamera\", () => {\n      if (!this.domElement) return;\n      this.mouseChange.copy(this._panEnd).sub(this._panStart);\n      if (this.mouseChange.lengthSq() > this.EPS) {\n        if (this.object.isOrthographicCamera) {\n          const orthoObject = this.object;\n          const scale_x = (orthoObject.right - orthoObject.left) / this.object.zoom;\n          const scale_y = (orthoObject.top - orthoObject.bottom) / this.object.zoom;\n          this.mouseChange.x *= scale_x;\n          this.mouseChange.y *= scale_y;\n        } else {\n          this.mouseChange.multiplyScalar(this._eye.length() * this.panSpeed);\n        }\n        this.pan.copy(this._eye).cross(this.object.up).setLength(this.mouseChange.x);\n        this.pan.add(this.objectUp.copy(this.object.up).setLength(this.mouseChange.y));\n        this.object.position.add(this.pan);\n        this.target.add(this.pan);\n        if (this.staticMoving) {\n          this._panStart.copy(this._panEnd);\n        } else {\n          this._panStart.add(this.mouseChange.subVectors(this._panEnd, this._panStart).multiplyScalar(this.dynamicDampingFactor));\n        }\n      }\n    });\n    __publicField(this, \"checkDistances\", () => {\n      if (!this.noZoom || !this.noPan) {\n        if (this._eye.lengthSq() > this.maxDistance * this.maxDistance) {\n          this.object.position.addVectors(this.target, this._eye.setLength(this.maxDistance));\n          this._zoomStart.copy(this._zoomEnd);\n        }\n        if (this._eye.lengthSq() < this.minDistance * this.minDistance) {\n          this.object.position.addVectors(this.target, this._eye.setLength(this.minDistance));\n          this._zoomStart.copy(this._zoomEnd);\n        }\n      }\n    });\n    __publicField(this, \"handleResize\", () => {\n      if (!this.domElement) return;\n      const box = this.domElement.getBoundingClientRect();\n      const d = this.domElement.ownerDocument.documentElement;\n      this.screen.left = box.left + window.pageXOffset - d.clientLeft;\n      this.screen.top = box.top + window.pageYOffset - d.clientTop;\n      this.screen.width = box.width;\n      this.screen.height = box.height;\n    });\n    __publicField(this, \"update\", () => {\n      this._eye.subVectors(this.object.position, this.target);\n      if (!this.noRotate) {\n        this.rotateCamera();\n      }\n      if (!this.noZoom) {\n        this.zoomCamera();\n      }\n      if (!this.noPan) {\n        this.panCamera();\n      }\n      this.object.position.addVectors(this.target, this._eye);\n      if (this.object.isPerspectiveCamera) {\n        this.checkDistances();\n        this.object.lookAt(this.target);\n        if (this.lastPosition.distanceToSquared(this.object.position) > this.EPS) {\n          this.dispatchEvent(this.changeEvent);\n          this.lastPosition.copy(this.object.position);\n        }\n      } else if (this.object.isOrthographicCamera) {\n        this.object.lookAt(this.target);\n        if (this.lastPosition.distanceToSquared(this.object.position) > this.EPS || this.lastZoom !== this.object.zoom) {\n          this.dispatchEvent(this.changeEvent);\n          this.lastPosition.copy(this.object.position);\n          this.lastZoom = this.object.zoom;\n        }\n      } else {\n        console.warn(\"THREE.TrackballControls: Unsupported camera type\");\n      }\n    });\n    __publicField(this, \"reset\", () => {\n      this._state = this.STATE.NONE;\n      this._keyState = this.STATE.NONE;\n      this.target.copy(this.target0);\n      this.object.position.copy(this.position0);\n      this.object.up.copy(this.up0);\n      this.object.zoom = this.zoom0;\n      this.object.updateProjectionMatrix();\n      this._eye.subVectors(this.object.position, this.target);\n      this.object.lookAt(this.target);\n      this.dispatchEvent(this.changeEvent);\n      this.lastPosition.copy(this.object.position);\n      this.lastZoom = this.object.zoom;\n    });\n    __publicField(this, \"keydown\", event => {\n      if (this.enabled === false) return;\n      window.removeEventListener(\"keydown\", this.keydown);\n      if (this._keyState !== this.STATE.NONE) {\n        return;\n      } else if (event.code === this.keys[this.STATE.ROTATE] && !this.noRotate) {\n        this._keyState = this.STATE.ROTATE;\n      } else if (event.code === this.keys[this.STATE.ZOOM] && !this.noZoom) {\n        this._keyState = this.STATE.ZOOM;\n      } else if (event.code === this.keys[this.STATE.PAN] && !this.noPan) {\n        this._keyState = this.STATE.PAN;\n      }\n    });\n    __publicField(this, \"onPointerDown\", event => {\n      if (this.enabled === false) return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseDown(event);\n          break;\n      }\n    });\n    __publicField(this, \"onPointerMove\", event => {\n      if (this.enabled === false) return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseMove(event);\n          break;\n      }\n    });\n    __publicField(this, \"onPointerUp\", event => {\n      if (this.enabled === false) return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          this.onMouseUp();\n          break;\n      }\n    });\n    __publicField(this, \"keyup\", () => {\n      if (this.enabled === false) return;\n      this._keyState = this.STATE.NONE;\n      window.addEventListener(\"keydown\", this.keydown);\n    });\n    __publicField(this, \"onMouseDown\", event => {\n      if (!this.domElement) return;\n      if (this._state === this.STATE.NONE) {\n        switch (event.button) {\n          case this.mouseButtons.LEFT:\n            this._state = this.STATE.ROTATE;\n            break;\n          case this.mouseButtons.MIDDLE:\n            this._state = this.STATE.ZOOM;\n            break;\n          case this.mouseButtons.RIGHT:\n            this._state = this.STATE.PAN;\n            break;\n        }\n      }\n      const state = this._keyState !== this.STATE.NONE ? this._keyState : this._state;\n      if (state === this.STATE.ROTATE && !this.noRotate) {\n        this._moveCurr.copy(this.getMouseOnCircle(event.pageX, event.pageY));\n        this._movePrev.copy(this._moveCurr);\n      } else if (state === this.STATE.ZOOM && !this.noZoom) {\n        this._zoomStart.copy(this.getMouseOnScreen(event.pageX, event.pageY));\n        this._zoomEnd.copy(this._zoomStart);\n      } else if (state === this.STATE.PAN && !this.noPan) {\n        this._panStart.copy(this.getMouseOnScreen(event.pageX, event.pageY));\n        this._panEnd.copy(this._panStart);\n      }\n      this.domElement.ownerDocument.addEventListener(\"pointermove\", this.onPointerMove);\n      this.domElement.ownerDocument.addEventListener(\"pointerup\", this.onPointerUp);\n      this.dispatchEvent(this.startEvent);\n    });\n    __publicField(this, \"onMouseMove\", event => {\n      if (this.enabled === false) return;\n      const state = this._keyState !== this.STATE.NONE ? this._keyState : this._state;\n      if (state === this.STATE.ROTATE && !this.noRotate) {\n        this._movePrev.copy(this._moveCurr);\n        this._moveCurr.copy(this.getMouseOnCircle(event.pageX, event.pageY));\n      } else if (state === this.STATE.ZOOM && !this.noZoom) {\n        this._zoomEnd.copy(this.getMouseOnScreen(event.pageX, event.pageY));\n      } else if (state === this.STATE.PAN && !this.noPan) {\n        this._panEnd.copy(this.getMouseOnScreen(event.pageX, event.pageY));\n      }\n    });\n    __publicField(this, \"onMouseUp\", () => {\n      if (!this.domElement) return;\n      if (this.enabled === false) return;\n      this._state = this.STATE.NONE;\n      this.domElement.ownerDocument.removeEventListener(\"pointermove\", this.onPointerMove);\n      this.domElement.ownerDocument.removeEventListener(\"pointerup\", this.onPointerUp);\n      this.dispatchEvent(this.endEvent);\n    });\n    __publicField(this, \"mousewheel\", event => {\n      if (this.enabled === false) return;\n      if (this.noZoom === true) return;\n      event.preventDefault();\n      switch (event.deltaMode) {\n        case 2:\n          this._zoomStart.y -= event.deltaY * 0.025;\n          break;\n        case 1:\n          this._zoomStart.y -= event.deltaY * 0.01;\n          break;\n        default:\n          this._zoomStart.y -= event.deltaY * 25e-5;\n          break;\n      }\n      this.mousePosition.x = event.offsetX / this.screen.width * 2 - 1;\n      this.mousePosition.y = -(event.offsetY / this.screen.height) * 2 + 1;\n      this.dispatchEvent(this.startEvent);\n      this.dispatchEvent(this.endEvent);\n    });\n    __publicField(this, \"touchstart\", event => {\n      if (this.enabled === false) return;\n      event.preventDefault();\n      switch (event.touches.length) {\n        case 1:\n          this._state = this.STATE.TOUCH_ROTATE;\n          this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n          this._movePrev.copy(this._moveCurr);\n          break;\n        default:\n          this._state = this.STATE.TOUCH_ZOOM_PAN;\n          const dx = event.touches[0].pageX - event.touches[1].pageX;\n          const dy = event.touches[0].pageY - event.touches[1].pageY;\n          this._touchZoomDistanceEnd = this._touchZoomDistanceStart = Math.sqrt(dx * dx + dy * dy);\n          const x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n          const y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n          this._panStart.copy(this.getMouseOnScreen(x, y));\n          this._panEnd.copy(this._panStart);\n          break;\n      }\n      this.dispatchEvent(this.startEvent);\n    });\n    __publicField(this, \"touchmove\", event => {\n      if (this.enabled === false) return;\n      event.preventDefault();\n      switch (event.touches.length) {\n        case 1:\n          this._movePrev.copy(this._moveCurr);\n          this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n          break;\n        default:\n          const dx = event.touches[0].pageX - event.touches[1].pageX;\n          const dy = event.touches[0].pageY - event.touches[1].pageY;\n          this._touchZoomDistanceEnd = Math.sqrt(dx * dx + dy * dy);\n          const x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n          const y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n          this._panEnd.copy(this.getMouseOnScreen(x, y));\n          break;\n      }\n    });\n    __publicField(this, \"touchend\", event => {\n      if (this.enabled === false) return;\n      switch (event.touches.length) {\n        case 0:\n          this._state = this.STATE.NONE;\n          break;\n        case 1:\n          this._state = this.STATE.TOUCH_ROTATE;\n          this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n          this._movePrev.copy(this._moveCurr);\n          break;\n      }\n      this.dispatchEvent(this.endEvent);\n    });\n    __publicField(this, \"contextmenu\", event => {\n      if (this.enabled === false) return;\n      event.preventDefault();\n    });\n    // https://github.com/mrdoob/three.js/issues/20575\n    __publicField(this, \"connect\", domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n      this.domElement = domElement;\n      this.domElement.addEventListener(\"contextmenu\", this.contextmenu);\n      this.domElement.addEventListener(\"pointerdown\", this.onPointerDown);\n      this.domElement.addEventListener(\"wheel\", this.mousewheel);\n      this.domElement.addEventListener(\"touchstart\", this.touchstart);\n      this.domElement.addEventListener(\"touchend\", this.touchend);\n      this.domElement.addEventListener(\"touchmove\", this.touchmove);\n      this.domElement.ownerDocument.addEventListener(\"pointermove\", this.onPointerMove);\n      this.domElement.ownerDocument.addEventListener(\"pointerup\", this.onPointerUp);\n      window.addEventListener(\"keydown\", this.keydown);\n      window.addEventListener(\"keyup\", this.keyup);\n      this.handleResize();\n    });\n    __publicField(this, \"dispose\", () => {\n      if (!this.domElement) return;\n      this.domElement.removeEventListener(\"contextmenu\", this.contextmenu);\n      this.domElement.removeEventListener(\"pointerdown\", this.onPointerDown);\n      this.domElement.removeEventListener(\"wheel\", this.mousewheel);\n      this.domElement.removeEventListener(\"touchstart\", this.touchstart);\n      this.domElement.removeEventListener(\"touchend\", this.touchend);\n      this.domElement.removeEventListener(\"touchmove\", this.touchmove);\n      this.domElement.ownerDocument.removeEventListener(\"pointermove\", this.onPointerMove);\n      this.domElement.ownerDocument.removeEventListener(\"pointerup\", this.onPointerUp);\n      window.removeEventListener(\"keydown\", this.keydown);\n      window.removeEventListener(\"keyup\", this.keyup);\n    });\n    this.object = object;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.up0 = this.object.up.clone();\n    this.zoom0 = this.object.zoom;\n    if (domElement !== void 0) this.connect(domElement);\n    this.update();\n  }\n}\nexport { TrackballControls };","map":{"version":3,"sources":["../../src/controls/TrackballControls.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventDispatcher, MOUSE, Quaternion, Vector2, Vector3, PerspectiveCamera, OrthographicCamera } from 'three'\n\nclass TrackballControls extends EventDispatcher {\n  public enabled = true\n\n  public screen = { left: 0, top: 0, width: 0, height: 0 }\n\n  public rotateSpeed = 1.0\n  public zoomSpeed = 1.2\n  public panSpeed = 0.3\n\n  public noRotate = false\n  public noZoom = false\n  public noPan = false\n\n  public staticMoving = false\n  public dynamicDampingFactor = 0.2\n\n  public minDistance = 0\n  public maxDistance = Infinity\n\n  public keys: [string, string, string] = ['KeyA' /*A*/, 'KeyS' /*S*/, 'KeyD' /*D*/]\n\n  public mouseButtons = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN,\n  }\n\n  public object: PerspectiveCamera | OrthographicCamera\n  public domElement: HTMLElement | undefined\n  public cursorZoom: boolean = false\n\n  readonly target = new Vector3()\n  private mousePosition = new Vector2()\n\n  // internals\n  private STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    ZOOM: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_ZOOM_PAN: 4,\n  }\n\n  private EPS = 0.000001\n  private lastZoom = 1\n\n  private lastPosition = new Vector3()\n  private cursorVector = new Vector3()\n  private targetVector = new Vector3()\n\n  private _state = this.STATE.NONE\n  private _keyState = this.STATE.NONE\n  private _eye = new Vector3()\n  private _movePrev = new Vector2()\n  private _moveCurr = new Vector2()\n  private _lastAxis = new Vector3()\n  private _lastAngle = 0\n  private _zoomStart = new Vector2()\n  private _zoomEnd = new Vector2()\n  private _touchZoomDistanceStart = 0\n  private _touchZoomDistanceEnd = 0\n  private _panStart = new Vector2()\n  private _panEnd = new Vector2()\n\n  private target0: Vector3\n  private position0: Vector3\n  private up0: Vector3\n  private zoom0: number\n\n  // events\n\n  private changeEvent = { type: 'change' }\n  private startEvent = { type: 'start' }\n  private endEvent = { type: 'end' }\n\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement?: HTMLElement) {\n    super()\n    this.object = object\n\n    // for reset\n\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.up0 = this.object.up.clone()\n    this.zoom0 = this.object.zoom\n\n    // connect events\n    if (domElement !== undefined) this.connect(domElement)\n\n    // force an update at start\n    this.update()\n  }\n\n  private onScreenVector = new Vector2()\n\n  private getMouseOnScreen = (pageX: number, pageY: number): Vector2 => {\n    this.onScreenVector.set(\n      (pageX - this.screen.left) / this.screen.width,\n      (pageY - this.screen.top) / this.screen.height,\n    )\n\n    return this.onScreenVector\n  }\n\n  private onCircleVector = new Vector2()\n\n  private getMouseOnCircle = (pageX: number, pageY: number): Vector2 => {\n    this.onCircleVector.set(\n      (pageX - this.screen.width * 0.5 - this.screen.left) / (this.screen.width * 0.5),\n      (this.screen.height + 2 * (this.screen.top - pageY)) / this.screen.width, // screen.width intentional\n    )\n\n    return this.onCircleVector\n  }\n\n  private axis = new Vector3()\n  private quaternion = new Quaternion()\n  private eyeDirection = new Vector3()\n  private objectUpDirection = new Vector3()\n  private objectSidewaysDirection = new Vector3()\n  private moveDirection = new Vector3()\n  private angle: number = 0\n\n  private rotateCamera = (): void => {\n    this.moveDirection.set(this._moveCurr.x - this._movePrev.x, this._moveCurr.y - this._movePrev.y, 0)\n    this.angle = this.moveDirection.length()\n\n    if (this.angle) {\n      this._eye.copy(this.object.position).sub(this.target)\n\n      this.eyeDirection.copy(this._eye).normalize()\n      this.objectUpDirection.copy(this.object.up).normalize()\n      this.objectSidewaysDirection.crossVectors(this.objectUpDirection, this.eyeDirection).normalize()\n\n      this.objectUpDirection.setLength(this._moveCurr.y - this._movePrev.y)\n      this.objectSidewaysDirection.setLength(this._moveCurr.x - this._movePrev.x)\n\n      this.moveDirection.copy(this.objectUpDirection.add(this.objectSidewaysDirection))\n\n      this.axis.crossVectors(this.moveDirection, this._eye).normalize()\n\n      this.angle *= this.rotateSpeed\n      this.quaternion.setFromAxisAngle(this.axis, this.angle)\n\n      this._eye.applyQuaternion(this.quaternion)\n      this.object.up.applyQuaternion(this.quaternion)\n\n      this._lastAxis.copy(this.axis)\n      this._lastAngle = this.angle\n    } else if (!this.staticMoving && this._lastAngle) {\n      this._lastAngle *= Math.sqrt(1.0 - this.dynamicDampingFactor)\n      this._eye.copy(this.object.position).sub(this.target)\n      this.quaternion.setFromAxisAngle(this._lastAxis, this._lastAngle)\n      this._eye.applyQuaternion(this.quaternion)\n      this.object.up.applyQuaternion(this.quaternion)\n    }\n\n    this._movePrev.copy(this._moveCurr)\n  }\n\n  private zoomCamera = (): void => {\n    let factor\n\n    if (this._state === this.STATE.TOUCH_ZOOM_PAN) {\n      factor = this._touchZoomDistanceStart / this._touchZoomDistanceEnd\n      this._touchZoomDistanceStart = this._touchZoomDistanceEnd\n\n      if ((this.object as PerspectiveCamera).isPerspectiveCamera) {\n        this._eye.multiplyScalar(factor)\n      } else if ((this.object as OrthographicCamera).isOrthographicCamera) {\n        this.object.zoom /= factor\n        this.object.updateProjectionMatrix()\n      } else {\n        console.warn('THREE.TrackballControls: Unsupported camera type')\n      }\n    } else {\n      factor = 1.0 + (this._zoomEnd.y - this._zoomStart.y) * this.zoomSpeed\n\n      if (Math.abs(factor - 1.0) > this.EPS && factor > 0.0) {\n        if ((this.object as PerspectiveCamera).isPerspectiveCamera) {\n          if (factor > 1.0 && this._eye.length() >= this.maxDistance - this.EPS) {\n            factor = 1.0\n          }\n          this._eye.multiplyScalar(factor)\n        } else if ((this.object as OrthographicCamera).isOrthographicCamera) {\n          if (factor > 1.0 && this.object.zoom < this.maxDistance * this.maxDistance) {\n            factor = 1.0\n          }\n          this.object.zoom /= factor\n        } else {\n          console.warn('THREE.TrackballControls: Unsupported camera type')\n        }\n      }\n\n      if (this.staticMoving) {\n        this._zoomStart.copy(this._zoomEnd)\n      } else {\n        this._zoomStart.y += (this._zoomEnd.y - this._zoomStart.y) * this.dynamicDampingFactor\n      }\n\n      if (this.cursorZoom) {\n        //determine 3D position of mouse cursor (on target plane)\n        this.targetVector.copy(this.target).project(this.object)\n        let worldPos = this.cursorVector\n          .set(this.mousePosition.x, this.mousePosition.y, this.targetVector.z)\n          .unproject(this.object)\n\n        //adjust target point so that \"point\" stays in place\n        this.target.lerpVectors(worldPos, this.target, factor)\n      }\n\n      // Update the projection matrix after all properties are changed\n      if ((this.object as OrthographicCamera).isOrthographicCamera) {\n        this.object.updateProjectionMatrix()\n      }\n    }\n  }\n\n  private mouseChange = new Vector2()\n  private objectUp = new Vector3()\n  private pan = new Vector3()\n\n  private panCamera = (): void => {\n    if (!this.domElement) return\n    this.mouseChange.copy(this._panEnd).sub(this._panStart)\n\n    if (this.mouseChange.lengthSq() > this.EPS) {\n      if ((this.object as OrthographicCamera).isOrthographicCamera) {\n        const orthoObject = this.object as OrthographicCamera\n        const scale_x = (orthoObject.right - orthoObject.left) / this.object.zoom\n        const scale_y = (orthoObject.top - orthoObject.bottom) / this.object.zoom\n\n        this.mouseChange.x *= scale_x\n        this.mouseChange.y *= scale_y\n      } else {\n        this.mouseChange.multiplyScalar(this._eye.length() * this.panSpeed)\n      }\n\n      this.pan.copy(this._eye).cross(this.object.up).setLength(this.mouseChange.x)\n      this.pan.add(this.objectUp.copy(this.object.up).setLength(this.mouseChange.y))\n\n      this.object.position.add(this.pan)\n      this.target.add(this.pan)\n\n      if (this.staticMoving) {\n        this._panStart.copy(this._panEnd)\n      } else {\n        this._panStart.add(\n          this.mouseChange.subVectors(this._panEnd, this._panStart).multiplyScalar(this.dynamicDampingFactor),\n        )\n      }\n    }\n  }\n\n  private checkDistances = (): void => {\n    if (!this.noZoom || !this.noPan) {\n      if (this._eye.lengthSq() > this.maxDistance * this.maxDistance) {\n        this.object.position.addVectors(this.target, this._eye.setLength(this.maxDistance))\n        this._zoomStart.copy(this._zoomEnd)\n      }\n\n      if (this._eye.lengthSq() < this.minDistance * this.minDistance) {\n        this.object.position.addVectors(this.target, this._eye.setLength(this.minDistance))\n        this._zoomStart.copy(this._zoomEnd)\n      }\n    }\n  }\n\n  public handleResize = (): void => {\n    if (!this.domElement) return\n    const box = this.domElement.getBoundingClientRect()\n    // adjustments come from similar code in the jquery offset() function\n    const d = this.domElement.ownerDocument.documentElement\n    this.screen.left = box.left + window.pageXOffset - d.clientLeft\n    this.screen.top = box.top + window.pageYOffset - d.clientTop\n    this.screen.width = box.width\n    this.screen.height = box.height\n  }\n\n  public update = (): void => {\n    this._eye.subVectors(this.object.position, this.target)\n\n    if (!this.noRotate) {\n      this.rotateCamera()\n    }\n\n    if (!this.noZoom) {\n      this.zoomCamera()\n    }\n\n    if (!this.noPan) {\n      this.panCamera()\n    }\n\n    this.object.position.addVectors(this.target, this._eye)\n\n    if ((this.object as PerspectiveCamera).isPerspectiveCamera) {\n      this.checkDistances()\n\n      this.object.lookAt(this.target)\n\n      if (this.lastPosition.distanceToSquared(this.object.position) > this.EPS) {\n        // @ts-ignore\n        this.dispatchEvent(this.changeEvent)\n\n        this.lastPosition.copy(this.object.position)\n      }\n    } else if ((this.object as OrthographicCamera).isOrthographicCamera) {\n      this.object.lookAt(this.target)\n\n      if (this.lastPosition.distanceToSquared(this.object.position) > this.EPS || this.lastZoom !== this.object.zoom) {\n        // @ts-ignore\n        this.dispatchEvent(this.changeEvent)\n\n        this.lastPosition.copy(this.object.position)\n        this.lastZoom = this.object.zoom\n      }\n    } else {\n      console.warn('THREE.TrackballControls: Unsupported camera type')\n    }\n  }\n\n  public reset = (): void => {\n    this._state = this.STATE.NONE\n    this._keyState = this.STATE.NONE\n\n    this.target.copy(this.target0)\n    this.object.position.copy(this.position0)\n    this.object.up.copy(this.up0)\n    this.object.zoom = this.zoom0\n\n    this.object.updateProjectionMatrix()\n\n    this._eye.subVectors(this.object.position, this.target)\n\n    this.object.lookAt(this.target)\n\n    // @ts-ignore\n    this.dispatchEvent(this.changeEvent)\n\n    this.lastPosition.copy(this.object.position)\n    this.lastZoom = this.object.zoom\n  }\n\n  private keydown = (event: KeyboardEvent): void => {\n    if (this.enabled === false) return\n\n    window.removeEventListener('keydown', this.keydown)\n\n    if (this._keyState !== this.STATE.NONE) {\n      return\n    } else if (event.code === this.keys[this.STATE.ROTATE] && !this.noRotate) {\n      this._keyState = this.STATE.ROTATE\n    } else if (event.code === this.keys[this.STATE.ZOOM] && !this.noZoom) {\n      this._keyState = this.STATE.ZOOM\n    } else if (event.code === this.keys[this.STATE.PAN] && !this.noPan) {\n      this._keyState = this.STATE.PAN\n    }\n  }\n\n  private onPointerDown = (event: PointerEvent): void => {\n    if (this.enabled === false) return\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        this.onMouseDown(event)\n        break\n\n      // TODO touch\n    }\n  }\n\n  private onPointerMove = (event: PointerEvent): void => {\n    if (this.enabled === false) return\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        this.onMouseMove(event)\n        break\n\n      // TODO touch\n    }\n  }\n\n  private onPointerUp = (event: PointerEvent): void => {\n    if (this.enabled === false) return\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        this.onMouseUp()\n        break\n\n      // TODO touch\n    }\n  }\n\n  private keyup = (): void => {\n    if (this.enabled === false) return\n\n    this._keyState = this.STATE.NONE\n\n    window.addEventListener('keydown', this.keydown)\n  }\n\n  private onMouseDown = (event: MouseEvent): void => {\n    if (!this.domElement) return\n    if (this._state === this.STATE.NONE) {\n      switch (event.button) {\n        case this.mouseButtons.LEFT:\n          this._state = this.STATE.ROTATE\n          break\n\n        case this.mouseButtons.MIDDLE:\n          this._state = this.STATE.ZOOM\n          break\n\n        case this.mouseButtons.RIGHT:\n          this._state = this.STATE.PAN\n          break\n      }\n    }\n\n    const state = this._keyState !== this.STATE.NONE ? this._keyState : this._state\n\n    if (state === this.STATE.ROTATE && !this.noRotate) {\n      this._moveCurr.copy(this.getMouseOnCircle(event.pageX, event.pageY))\n      this._movePrev.copy(this._moveCurr)\n    } else if (state === this.STATE.ZOOM && !this.noZoom) {\n      this._zoomStart.copy(this.getMouseOnScreen(event.pageX, event.pageY))\n      this._zoomEnd.copy(this._zoomStart)\n    } else if (state === this.STATE.PAN && !this.noPan) {\n      this._panStart.copy(this.getMouseOnScreen(event.pageX, event.pageY))\n      this._panEnd.copy(this._panStart)\n    }\n\n    this.domElement.ownerDocument.addEventListener('pointermove', this.onPointerMove)\n    this.domElement.ownerDocument.addEventListener('pointerup', this.onPointerUp)\n\n    // @ts-ignore\n    this.dispatchEvent(this.startEvent)\n  }\n\n  private onMouseMove = (event: MouseEvent): void => {\n    if (this.enabled === false) return\n\n    const state = this._keyState !== this.STATE.NONE ? this._keyState : this._state\n\n    if (state === this.STATE.ROTATE && !this.noRotate) {\n      this._movePrev.copy(this._moveCurr)\n      this._moveCurr.copy(this.getMouseOnCircle(event.pageX, event.pageY))\n    } else if (state === this.STATE.ZOOM && !this.noZoom) {\n      this._zoomEnd.copy(this.getMouseOnScreen(event.pageX, event.pageY))\n    } else if (state === this.STATE.PAN && !this.noPan) {\n      this._panEnd.copy(this.getMouseOnScreen(event.pageX, event.pageY))\n    }\n  }\n\n  private onMouseUp = (): void => {\n    if (!this.domElement) return\n    if (this.enabled === false) return\n\n    this._state = this.STATE.NONE\n\n    this.domElement.ownerDocument.removeEventListener('pointermove', this.onPointerMove)\n    this.domElement.ownerDocument.removeEventListener('pointerup', this.onPointerUp)\n\n    // @ts-ignore\n    this.dispatchEvent(this.endEvent)\n  }\n\n  private mousewheel = (event: WheelEvent): void => {\n    if (this.enabled === false) return\n\n    if (this.noZoom === true) return\n\n    event.preventDefault()\n\n    switch (event.deltaMode) {\n      case 2:\n        // Zoom in pages\n        this._zoomStart.y -= event.deltaY * 0.025\n        break\n\n      case 1:\n        // Zoom in lines\n        this._zoomStart.y -= event.deltaY * 0.01\n        break\n\n      default:\n        // undefined, 0, assume pixels\n        this._zoomStart.y -= event.deltaY * 0.00025\n        break\n    }\n\n    this.mousePosition.x = (event.offsetX / this.screen.width) * 2 - 1\n    this.mousePosition.y = -(event.offsetY / this.screen.height) * 2 + 1\n\n    // @ts-ignore\n    this.dispatchEvent(this.startEvent)\n    // @ts-ignore\n    this.dispatchEvent(this.endEvent)\n  }\n\n  private touchstart = (event: TouchEvent): void => {\n    if (this.enabled === false) return\n\n    event.preventDefault()\n\n    switch (event.touches.length) {\n      case 1:\n        this._state = this.STATE.TOUCH_ROTATE\n        this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY))\n        this._movePrev.copy(this._moveCurr)\n        break\n\n      default:\n        // 2 or more\n        this._state = this.STATE.TOUCH_ZOOM_PAN\n        const dx = event.touches[0].pageX - event.touches[1].pageX\n        const dy = event.touches[0].pageY - event.touches[1].pageY\n        this._touchZoomDistanceEnd = this._touchZoomDistanceStart = Math.sqrt(dx * dx + dy * dy)\n\n        const x = (event.touches[0].pageX + event.touches[1].pageX) / 2\n        const y = (event.touches[0].pageY + event.touches[1].pageY) / 2\n        this._panStart.copy(this.getMouseOnScreen(x, y))\n        this._panEnd.copy(this._panStart)\n        break\n    }\n\n    // @ts-ignore\n    this.dispatchEvent(this.startEvent)\n  }\n\n  private touchmove = (event: TouchEvent): void => {\n    if (this.enabled === false) return\n\n    event.preventDefault()\n\n    switch (event.touches.length) {\n      case 1:\n        this._movePrev.copy(this._moveCurr)\n        this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY))\n        break\n\n      default:\n        // 2 or more\n        const dx = event.touches[0].pageX - event.touches[1].pageX\n        const dy = event.touches[0].pageY - event.touches[1].pageY\n        this._touchZoomDistanceEnd = Math.sqrt(dx * dx + dy * dy)\n\n        const x = (event.touches[0].pageX + event.touches[1].pageX) / 2\n        const y = (event.touches[0].pageY + event.touches[1].pageY) / 2\n        this._panEnd.copy(this.getMouseOnScreen(x, y))\n        break\n    }\n  }\n\n  private touchend = (event: TouchEvent): void => {\n    if (this.enabled === false) return\n\n    switch (event.touches.length) {\n      case 0:\n        this._state = this.STATE.NONE\n        break\n\n      case 1:\n        this._state = this.STATE.TOUCH_ROTATE\n        this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY))\n        this._movePrev.copy(this._moveCurr)\n        break\n    }\n\n    // @ts-ignore\n    this.dispatchEvent(this.endEvent)\n  }\n\n  private contextmenu = (event: MouseEvent): void => {\n    if (this.enabled === false) return\n\n    event.preventDefault()\n  }\n\n  // https://github.com/mrdoob/three.js/issues/20575\n  public connect = (domElement: HTMLElement): void => {\n    if ((domElement as any) === document) {\n      console.error(\n        'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.',\n      )\n    }\n    this.domElement = domElement\n    this.domElement.addEventListener('contextmenu', this.contextmenu)\n\n    this.domElement.addEventListener('pointerdown', this.onPointerDown)\n    this.domElement.addEventListener('wheel', this.mousewheel)\n\n    this.domElement.addEventListener('touchstart', this.touchstart)\n    this.domElement.addEventListener('touchend', this.touchend)\n    this.domElement.addEventListener('touchmove', this.touchmove)\n\n    this.domElement.ownerDocument.addEventListener('pointermove', this.onPointerMove)\n    this.domElement.ownerDocument.addEventListener('pointerup', this.onPointerUp)\n\n    window.addEventListener('keydown', this.keydown)\n    window.addEventListener('keyup', this.keyup)\n\n    this.handleResize()\n  }\n\n  public dispose = (): void => {\n    if (!this.domElement) return\n    this.domElement.removeEventListener('contextmenu', this.contextmenu)\n\n    this.domElement.removeEventListener('pointerdown', this.onPointerDown)\n    this.domElement.removeEventListener('wheel', this.mousewheel)\n\n    this.domElement.removeEventListener('touchstart', this.touchstart)\n    this.domElement.removeEventListener('touchend', this.touchend)\n    this.domElement.removeEventListener('touchmove', this.touchmove)\n\n    this.domElement.ownerDocument.removeEventListener('pointermove', this.onPointerMove)\n    this.domElement.ownerDocument.removeEventListener('pointerup', this.onPointerUp)\n\n    window.removeEventListener('keydown', this.keydown)\n    window.removeEventListener('keyup', this.keyup)\n  }\n}\n\nexport { TrackballControls }\n"]},"metadata":{},"sourceType":"module"}