{"ast":null,"code":"const CopyShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    opacity: {\n      value: 1\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform float opacity;\", \"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 texel = texture2D( tDiffuse, vUv );\", \"\tgl_FragColor = opacity * texel;\", \"}\"].join(\"\\n\")\n};\nexport { CopyShader };","map":{"version":3,"sources":["../../src/shaders/CopyShader.ts"],"names":[],"mappings":"AAcO,MAAM,UAAA,GAA0B;EACrC,QAAA,EAAU;IACR,QAAA,EAAU;MAAE,KAAA,EAAO;IAAK,CAAA;IACxB,OAAA,EAAS;MAAE,KAAA,EAAO;IAAI;EACxB,CAAA;EAEA,YAAA,EAAc,CACZ,mBAAA,EAEA,eAAA,EAEA,YAAA,EACA,4EAAA,EAEA,GAAA,CAAA,CACA,IAAA,CAAK,IAAI,CAAA;EAEX,cAAA,EAAgB,CACd,wBAAA,EAEA,6BAAA,EAEA,mBAAA,EAEA,eAAA,EAEA,2CAAA,EACA,kCAAA,EAEA,GAAA,CAAA,CACA,IAAA,CAAK,IAAI;AACb,CAAA","sourcesContent":["/**\n * Full-screen textured quad shader\n */\n\nimport type { IUniform, Texture } from 'three'\nimport type { IShader } from './types'\n\nexport type CopyShaderUniforms = {\n  opacity: IUniform<number>\n  tDiffuse: IUniform<Texture | null>\n}\n\nexport interface ICopyShader extends IShader<CopyShaderUniforms> {}\n\nexport const CopyShader: ICopyShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    opacity: { value: 1.0 },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvUv = uv;',\n    '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform float opacity;',\n\n    'uniform sampler2D tDiffuse;',\n\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvec4 texel = texture2D( tDiffuse, vUv );',\n    '\tgl_FragColor = opacity * texel;',\n\n    '}',\n  ].join('\\n'),\n}\n"]},"metadata":{},"sourceType":"module"}