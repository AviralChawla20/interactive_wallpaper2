{"ast":null,"code":"import { Group, Mesh } from \"three\";\nconst SceneUtils = {\n  createMeshesFromInstancedMesh: function (instancedMesh) {\n    const group = new Group();\n    const count = instancedMesh.count;\n    const geometry = instancedMesh.geometry;\n    const material = instancedMesh.material;\n    for (let i = 0; i < count; i++) {\n      const mesh = new Mesh(geometry, material);\n      instancedMesh.getMatrixAt(i, mesh.matrix);\n      mesh.matrix.decompose(mesh.position, mesh.quaternion, mesh.scale);\n      group.add(mesh);\n    }\n    group.copy(instancedMesh);\n    group.updateMatrixWorld();\n    return group;\n  },\n  createMultiMaterialObject: function (geometry, materials) {\n    const group = new Group();\n    for (let i = 0, l = materials.length; i < l; i++) {\n      group.add(new Mesh(geometry, materials[i]));\n    }\n    return group;\n  },\n  detach: function (child, parent, scene) {\n    console.warn(\"THREE.SceneUtils: detach() has been deprecated. Use scene.attach( child ) instead.\");\n    scene.attach(child);\n  },\n  attach: function (child, scene, parent) {\n    console.warn(\"THREE.SceneUtils: attach() has been deprecated. Use parent.attach( child ) instead.\");\n    parent.attach(child);\n  }\n};\nexport { SceneUtils };","map":{"version":3,"sources":["../../src/utils/SceneUtils.ts"],"names":[],"mappings":";AAGA,MAAM,UAAA,GAAa;EACjB,6BAAA,EAA+B,SAAA,CAAU,aAAA,EAAqC;IACtE,MAAA,KAAA,GAAQ,IAAI,KAAA,CAAA,CAAA;IAElB,MAAM,KAAA,GAAQ,aAAA,CAAc,KAAA;IAC5B,MAAM,QAAA,GAAW,aAAA,CAAc,QAAA;IAC/B,MAAM,QAAA,GAAW,aAAA,CAAc,QAAA;IAE/B,KAAA,IAAS,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,KAAA,EAAO,CAAA,EAAA,EAAK;MAC9B,MAAM,IAAA,GAAO,IAAI,IAAA,CAAK,QAAA,EAAU,QAAQ,CAAA;MAE1B,aAAA,CAAA,WAAA,CAAY,CAAA,EAAG,IAAA,CAAK,MAAM,CAAA;MACxC,IAAA,CAAK,MAAA,CAAO,SAAA,CAAU,IAAA,CAAK,QAAA,EAAU,IAAA,CAAK,UAAA,EAAY,IAAA,CAAK,KAAK,CAAA;MAEhE,KAAA,CAAM,GAAA,CAAI,IAAI,CAAA;IAChB;IAEA,KAAA,CAAM,IAAA,CAAM,aAAkC,CAAA;IAC9C,KAAA,CAAM,iBAAA,CAAkB,CAAA;IAEjB,OAAA,KAAA;EACT,CAAA;EAEA,yBAAA,EAA2B,SAAA,CAAU,QAAA,EAA0B,SAAA,EAA8B;IACrF,MAAA,KAAA,GAAQ,IAAI,KAAA,CAAA,CAAA;IAElB,KAAA,IAAS,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,SAAA,CAAU,MAAA,EAAQ,CAAA,GAAI,CAAA,EAAG,CAAA,EAAA,EAAK;MAChD,KAAA,CAAM,GAAA,CAAI,IAAI,IAAA,CAAK,QAAA,EAAU,SAAA,CAAU,CAAC,CAAC,CAAC,CAAA;IAC5C;IAEO,OAAA,KAAA;EACT,CAAA;EAEA,MAAA,EAAQ,SAAA,CAAU,KAAA,EAAiB,MAAA,EAAkB,KAAA,EAAoB;IACvE,OAAA,CAAQ,IAAA,CAAK,oFAAoF,CAAA;IAEjG,KAAA,CAAM,MAAA,CAAO,KAAK,CAAA;EACpB,CAAA;EAEA,MAAA,EAAQ,SAAA,CAAU,KAAA,EAAiB,KAAA,EAAc,MAAA,EAAwB;IACvE,OAAA,CAAQ,IAAA,CAAK,qFAAqF,CAAA;IAElG,MAAA,CAAO,MAAA,CAAO,KAAK,CAAA;EACrB;AACF,CAAA","sourcesContent":["import { Group, Mesh } from 'three'\nimport type { BufferGeometry, InstancedMesh, Material, Object3D, Scene } from 'three'\n\nconst SceneUtils = {\n  createMeshesFromInstancedMesh: function (instancedMesh: InstancedMesh): Group {\n    const group = new Group()\n\n    const count = instancedMesh.count\n    const geometry = instancedMesh.geometry\n    const material = instancedMesh.material\n\n    for (let i = 0; i < count; i++) {\n      const mesh = new Mesh(geometry, material)\n\n      instancedMesh.getMatrixAt(i, mesh.matrix)\n      mesh.matrix.decompose(mesh.position, mesh.quaternion, mesh.scale)\n\n      group.add(mesh)\n    }\n\n    group.copy((instancedMesh as unknown) as Group)\n    group.updateMatrixWorld() // ensure correct world matrices of meshes\n\n    return group\n  },\n\n  createMultiMaterialObject: function (geometry: BufferGeometry, materials: Material[]): Group {\n    const group = new Group()\n\n    for (let i = 0, l = materials.length; i < l; i++) {\n      group.add(new Mesh(geometry, materials[i]))\n    }\n\n    return group\n  },\n\n  detach: function (child: Object3D, parent: Object3D, scene: Scene): void {\n    console.warn('THREE.SceneUtils: detach() has been deprecated. Use scene.attach( child ) instead.')\n\n    scene.attach(child)\n  },\n\n  attach: function (child: Object3D, scene: Scene, parent: Object3D): void {\n    console.warn('THREE.SceneUtils: attach() has been deprecated. Use parent.attach( child ) instead.')\n\n    parent.attach(child)\n  },\n}\n\nexport { SceneUtils }\n"]},"metadata":{},"sourceType":"module"}