{"ast":null,"code":"const GammaCorrectionShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform sampler2D tDiffuse;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 tex = texture2D( tDiffuse, vUv );\", \"\t#ifdef LinearTosRGB\", \"\t\tgl_FragColor = LinearTosRGB( tex );\", \"\t#else\", \"\t\tgl_FragColor = sRGBTransferOETF( tex );\", \"\t#endif\", \"}\"].join(\"\\n\")\n};\nexport { GammaCorrectionShader };","map":{"version":3,"sources":["../../src/shaders/GammaCorrectionShader.ts"],"names":[],"mappings":"AAcO,MAAM,qBAAA,GAAgD;EAC3D,QAAA,EAAU;IACR,QAAA,EAAU;MAAE,KAAA,EAAO;IAAK;EAC1B,CAAA;EAEA,YAAA,EAAc,CACZ,mBAAA,EAEA,eAAA,EAEA,YAAA,EACA,4EAAA,EAEA,GAAA,CAAA,CACA,IAAA,CAAK,IAAI,CAAA;EAEX,cAAA,EAAgB,CACd,6BAAA,EAEA,mBAAA,EAEA,eAAA,EAEA,yCAAA,EAEA,sBAAA,EACA,uCAAA,EACA,QAAA,EACA,2CAAA,EACA,SAAA,EAEA,GAAA,CAAA,CACA,IAAA,CAAK,IAAI;AACb,CAAA","sourcesContent":["/**\n * Gamma Correction Shader\n * http://en.wikipedia.org/wiki/gamma_correction\n */\n\nimport type { IUniform, Texture } from 'three'\nimport type { IShader } from './types'\n\nexport type GammaCorrectionShaderUniforms = {\n  tDiffuse: IUniform<Texture | null>\n}\n\nexport interface IGammaCorrectionShader extends IShader<GammaCorrectionShaderUniforms> {}\n\nexport const GammaCorrectionShader: IGammaCorrectionShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvUv = uv;',\n    '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform sampler2D tDiffuse;',\n\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvec4 tex = texture2D( tDiffuse, vUv );',\n\n    '\t#ifdef LinearTosRGB',\n    '\t\tgl_FragColor = LinearTosRGB( tex );',\n    '\t#else',\n    '\t\tgl_FragColor = sRGBTransferOETF( tex );',\n    '\t#endif',\n\n    '}',\n  ].join('\\n'),\n}\n"]},"metadata":{},"sourceType":"module"}