{"ast":null,"code":"const DOFMipMapShader = {\n  uniforms: {\n    tColor: {\n      value: null\n    },\n    tDepth: {\n      value: null\n    },\n    focus: {\n      value: 1\n    },\n    maxblur: {\n      value: 1\n    }\n  },\n  vertexShader: [\"varying vec2 vUv;\", \"void main() {\", \"\tvUv = uv;\", \"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\", \"}\"].join(\"\\n\"),\n  fragmentShader: [\"uniform float focus;\", \"uniform float maxblur;\", \"uniform sampler2D tColor;\", \"uniform sampler2D tDepth;\", \"varying vec2 vUv;\", \"void main() {\", \"\tvec4 depth = texture2D( tDepth, vUv );\", \"\tfloat factor = depth.x - focus;\", \"\tvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\", \"\tgl_FragColor = col;\", \"\tgl_FragColor.a = 1.0;\", \"}\"].join(\"\\n\")\n};\nexport { DOFMipMapShader };","map":{"version":3,"sources":["../../src/shaders/DOFMipMapShader.ts"],"names":[],"mappings":"AAMO,MAAM,eAAA,GAAkB;EAC7B,QAAA,EAAU;IACR,MAAA,EAAQ;MAAE,KAAA,EAAO;IAAK,CAAA;IACtB,MAAA,EAAQ;MAAE,KAAA,EAAO;IAAK,CAAA;IACtB,KAAA,EAAO;MAAE,KAAA,EAAO;IAAI,CAAA;IACpB,OAAA,EAAS;MAAE,KAAA,EAAO;IAAI;EACxB,CAAA;EAEA,YAAA,EAAc,CACZ,mBAAA,EAEA,eAAA,EAEA,YAAA,EACA,4EAAA,EAEA,GAAA,CAAA,CACA,IAAA,CAAK,IAAI,CAAA;EAEX,cAAA,EAAgB,CACd,sBAAA,EACA,wBAAA,EAEA,2BAAA,EACA,2BAAA,EAEA,mBAAA,EAEA,eAAA,EAEA,yCAAA,EAEA,kCAAA,EAEA,+EAAA,EAEA,sBAAA,EACA,wBAAA,EAEA,GAAA,CAAA,CACA,IAAA,CAAK,IAAI;AACb,CAAA","sourcesContent":["/**\n * Depth-of-field shader using mipmaps\n * - from Matt Handley @applmak\n * - requires power-of-2 sized render target with enabled mipmaps\n */\n\nexport const DOFMipMapShader = {\n  uniforms: {\n    tColor: { value: null },\n    tDepth: { value: null },\n    focus: { value: 1.0 },\n    maxblur: { value: 1.0 },\n  },\n\n  vertexShader: [\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvUv = uv;',\n    '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n    '}',\n  ].join('\\n'),\n\n  fragmentShader: [\n    'uniform float focus;',\n    'uniform float maxblur;',\n\n    'uniform sampler2D tColor;',\n    'uniform sampler2D tDepth;',\n\n    'varying vec2 vUv;',\n\n    'void main() {',\n\n    '\tvec4 depth = texture2D( tDepth, vUv );',\n\n    '\tfloat factor = depth.x - focus;',\n\n    '\tvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );',\n\n    '\tgl_FragColor = col;',\n    '\tgl_FragColor.a = 1.0;',\n\n    '}',\n  ].join('\\n'),\n}\n"]},"metadata":{},"sourceType":"module"}