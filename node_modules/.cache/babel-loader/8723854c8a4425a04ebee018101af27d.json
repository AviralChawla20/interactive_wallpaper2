{"ast":null,"code":"function decodeText(array) {\n  if (typeof TextDecoder !== \"undefined\") {\n    return new TextDecoder().decode(array);\n  }\n  let s = \"\";\n  for (let i = 0, il = array.length; i < il; i++) {\n    s += String.fromCharCode(array[i]);\n  }\n  try {\n    return decodeURIComponent(escape(s));\n  } catch (e) {\n    return s;\n  }\n}\nexport { decodeText };","map":{"version":3,"sources":["../../src/_polyfill/LoaderUtils.js"],"names":[],"mappings":"AAAO,SAAS,UAAA,CAAW,KAAA,EAAO;EAChC,IAAI,OAAO,WAAA,KAAgB,WAAA,EAAa;IACtC,OAAO,IAAI,WAAA,CAAW,CAAA,CAAG,MAAA,CAAO,KAAK,CAAA;EACtC;EAKD,IAAI,CAAA,GAAI,EAAA;EAER,KAAA,IAAS,CAAA,GAAI,CAAA,EAAG,EAAA,GAAK,KAAA,CAAM,MAAA,EAAQ,CAAA,GAAI,EAAA,EAAI,CAAA,EAAA,EAAK;IAE9C,CAAA,IAAK,MAAA,CAAO,YAAA,CAAa,KAAA,CAAM,CAAC,CAAC,CAAA;EAClC;EAED,IAAI;IAGF,OAAO,kBAAA,CAAmB,MAAA,CAAO,CAAC,CAAC,CAAA;EACpC,CAAA,CAAA,OAAQ,CAAA,EAAP;IAGA,OAAO,CAAA;EACR;AACH","sourcesContent":["export function decodeText(array) {\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder().decode(array)\n  }\n\n  // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n  // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n  let s = ''\n\n  for (let i = 0, il = array.length; i < il; i++) {\n    // Implicitly assumes little-endian.\n    s += String.fromCharCode(array[i])\n  }\n\n  try {\n    // merges multi-byte utf-8 characters.\n\n    return decodeURIComponent(escape(s))\n  } catch (e) {\n    // see https://github.com/mrdoob/three.js/issues/16358\n\n    return s\n  }\n}\n"]},"metadata":{},"sourceType":"module"}