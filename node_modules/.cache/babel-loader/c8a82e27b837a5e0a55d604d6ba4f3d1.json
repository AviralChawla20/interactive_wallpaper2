{"ast":null,"code":"import { Loader, CanvasTexture, NearestFilter, FileLoader } from \"three\";\nimport lottie from \"../libs/lottie.js\";\nclass LottieLoader extends Loader {\n  setQuality(value) {\n    this._quality = value;\n  }\n  load(url, onLoad, onProgress, onError) {\n    const quality = this._quality || 1;\n    const texture = new CanvasTexture();\n    texture.minFilter = NearestFilter;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      const data = JSON.parse(text);\n      const container = document.createElement(\"div\");\n      container.style.width = data.w + \"px\";\n      container.style.height = data.h + \"px\";\n      document.body.appendChild(container);\n      const animation = lottie.loadAnimation({\n        container,\n        animType: \"canvas\",\n        loop: true,\n        autoplay: true,\n        animationData: data,\n        rendererSettings: {\n          dpr: quality\n        }\n      });\n      texture.animation = animation;\n      texture.image = animation.container;\n      animation.addEventListener(\"enterFrame\", function () {\n        texture.needsUpdate = true;\n      });\n      container.style.display = \"none\";\n      if (onLoad !== void 0) {\n        onLoad(texture);\n      }\n    }, onProgress, onError);\n    return texture;\n  }\n}\nexport { LottieLoader };","map":{"version":3,"sources":["../../src/loaders/LottieLoader.js"],"names":[],"mappings":";;AAGA,MAAM,YAAA,SAAqB,MAAA,CAAO;EAChC,UAAA,CAAW,KAAA,EAAO;IAChB,IAAA,CAAK,QAAA,GAAW,KAAA;EACjB;EAED,IAAA,CAAK,GAAA,EAAK,MAAA,EAAQ,UAAA,EAAY,OAAA,EAAS;IACrC,MAAM,OAAA,GAAU,IAAA,CAAK,QAAA,IAAY,CAAA;IAEjC,MAAM,OAAA,GAAU,IAAI,aAAA,CAAe,CAAA;IACnC,OAAA,CAAQ,SAAA,GAAY,aAAA;IAEpB,MAAM,MAAA,GAAS,IAAI,UAAA,CAAW,IAAA,CAAK,OAAO,CAAA;IAC1C,MAAA,CAAO,OAAA,CAAQ,IAAA,CAAK,IAAI,CAAA;IACxB,MAAA,CAAO,kBAAA,CAAmB,IAAA,CAAK,eAAe,CAAA;IAE9C,MAAA,CAAO,IAAA,CACL,GAAA,EACA,UAAU,IAAA,EAAM;MACd,MAAM,IAAA,GAAO,IAAA,CAAK,KAAA,CAAM,IAAI,CAAA;MAK5B,MAAM,SAAA,GAAY,QAAA,CAAS,aAAA,CAAc,KAAK,CAAA;MAC9C,SAAA,CAAU,KAAA,CAAM,KAAA,GAAQ,IAAA,CAAK,CAAA,GAAI,IAAA;MACjC,SAAA,CAAU,KAAA,CAAM,MAAA,GAAS,IAAA,CAAK,CAAA,GAAI,IAAA;MAClC,QAAA,CAAS,IAAA,CAAK,WAAA,CAAY,SAAS,CAAA;MAEnC,MAAM,SAAA,GAAY,MAAA,CAAO,aAAA,CAAc;QACrC,SAAA;QACA,QAAA,EAAU,QAAA;QACV,IAAA,EAAM,IAAA;QACN,QAAA,EAAU,IAAA;QACV,aAAA,EAAe,IAAA;QACf,gBAAA,EAAkB;UAAE,GAAA,EAAK;QAAS;MAC5C,CAAS,CAAA;MAED,OAAA,CAAQ,SAAA,GAAY,SAAA;MACpB,OAAA,CAAQ,KAAA,GAAQ,SAAA,CAAU,SAAA;MAE1B,SAAA,CAAU,gBAAA,CAAiB,YAAA,EAAc,YAAY;QACnD,OAAA,CAAQ,WAAA,GAAc,IAAA;MAChC,CAAS,CAAA;MAED,SAAA,CAAU,KAAA,CAAM,OAAA,GAAU,MAAA;MAE1B,IAAI,MAAA,KAAW,KAAA,CAAA,EAAW;QACxB,MAAA,CAAO,OAAO,CAAA;MACf;IACF,CAAA,EACD,UAAA,EACA,OACD,CAAA;IAED,OAAO,OAAA;EACR;AACH","sourcesContent":["import { FileLoader, Loader, CanvasTexture, NearestFilter } from 'three'\nimport lottie from '../libs/lottie'\n\nclass LottieLoader extends Loader {\n  setQuality(value) {\n    this._quality = value\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const quality = this._quality || 1\n\n    const texture = new CanvasTexture()\n    texture.minFilter = NearestFilter\n\n    const loader = new FileLoader(this.manager)\n    loader.setPath(this.path)\n    loader.setWithCredentials(this.withCredentials)\n\n    loader.load(\n      url,\n      function (text) {\n        const data = JSON.parse(text)\n\n        // bodymoving uses container.offetWidth and offsetHeight\n        // to define width/height\n\n        const container = document.createElement('div')\n        container.style.width = data.w + 'px'\n        container.style.height = data.h + 'px'\n        document.body.appendChild(container)\n\n        const animation = lottie.loadAnimation({\n          container: container,\n          animType: 'canvas',\n          loop: true,\n          autoplay: true,\n          animationData: data,\n          rendererSettings: { dpr: quality },\n        })\n\n        texture.animation = animation\n        texture.image = animation.container\n\n        animation.addEventListener('enterFrame', function () {\n          texture.needsUpdate = true\n        })\n\n        container.style.display = 'none'\n\n        if (onLoad !== undefined) {\n          onLoad(texture)\n        }\n      },\n      onProgress,\n      onError,\n    )\n\n    return texture\n  }\n}\n\nexport { LottieLoader }\n"]},"metadata":{},"sourceType":"module"}