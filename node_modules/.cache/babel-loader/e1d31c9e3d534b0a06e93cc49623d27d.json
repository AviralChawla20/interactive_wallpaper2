{"ast":null,"code":"import { NumberKeyframeTrack, AnimationClip, Vector3, VectorKeyframeTrack, BooleanKeyframeTrack, ColorKeyframeTrack } from \"three\";\nclass AnimationClipCreator {\n  static CreateRotationAnimation(period, axis = \"x\") {\n    const times = [0, period],\n      values = [0, 360];\n    const trackName = \".rotation[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  }\n  static CreateScaleAxisAnimation(period, axis = \"x\") {\n    const times = [0, period],\n      values = [0, 1];\n    const trackName = \".scale[\" + axis + \"]\";\n    const track = new NumberKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, period, [track]);\n  }\n  static CreateShakeAnimation(duration, shakeScale) {\n    const times = [],\n      values = [],\n      tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      tmp.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random() * 2 - 1).multiply(shakeScale).toArray(values, values.length);\n    }\n    const trackName = \".position\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreatePulsationAnimation(duration, pulseScale) {\n    const times = [],\n      values = [],\n      tmp = new Vector3();\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10);\n      const scaleFactor = Math.random() * pulseScale;\n      tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n    }\n    const trackName = \".scale\";\n    const track = new VectorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreateVisibilityAnimation(duration) {\n    const times = [0, duration / 2, duration],\n      values = [true, false, true];\n    const trackName = \".visible\";\n    const track = new BooleanKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n  static CreateMaterialColorAnimation(duration, colors) {\n    const times = [],\n      values = [],\n      timeStep = duration / colors.length;\n    for (let i = 0; i < colors.length; i++) {\n      times.push(i * timeStep);\n      const color = colors[i];\n      values.push(color.r, color.g, color.b);\n    }\n    const trackName = \".material.color\";\n    const track = new ColorKeyframeTrack(trackName, times, values);\n    return new AnimationClip(null, duration, [track]);\n  }\n}\nexport { AnimationClipCreator };","map":{"version":3,"sources":["../../src/animation/AnimationClipCreator.js"],"names":[],"mappings":"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","sourcesContent":["import {\n  AnimationClip,\n  BooleanKeyframeTrack,\n  ColorKeyframeTrack,\n  NumberKeyframeTrack,\n  Vector3,\n  VectorKeyframeTrack,\n} from 'three'\n\nclass AnimationClipCreator {\n  static CreateRotationAnimation(period, axis = 'x') {\n    const times = [0, period],\n      values = [0, 360]\n\n    const trackName = '.rotation[' + axis + ']'\n\n    const track = new NumberKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, period, [track])\n  }\n\n  static CreateScaleAxisAnimation(period, axis = 'x') {\n    const times = [0, period],\n      values = [0, 1]\n\n    const trackName = '.scale[' + axis + ']'\n\n    const track = new NumberKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, period, [track])\n  }\n\n  static CreateShakeAnimation(duration, shakeScale) {\n    const times = [],\n      values = [],\n      tmp = new Vector3()\n\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10)\n\n      tmp\n        .set(Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0)\n        .multiply(shakeScale)\n        .toArray(values, values.length)\n    }\n\n    const trackName = '.position'\n\n    const track = new VectorKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, duration, [track])\n  }\n\n  static CreatePulsationAnimation(duration, pulseScale) {\n    const times = [],\n      values = [],\n      tmp = new Vector3()\n\n    for (let i = 0; i < duration * 10; i++) {\n      times.push(i / 10)\n\n      const scaleFactor = Math.random() * pulseScale\n      tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length)\n    }\n\n    const trackName = '.scale'\n\n    const track = new VectorKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, duration, [track])\n  }\n\n  static CreateVisibilityAnimation(duration) {\n    const times = [0, duration / 2, duration],\n      values = [true, false, true]\n\n    const trackName = '.visible'\n\n    const track = new BooleanKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, duration, [track])\n  }\n\n  static CreateMaterialColorAnimation(duration, colors) {\n    const times = [],\n      values = [],\n      timeStep = duration / colors.length\n\n    for (let i = 0; i < colors.length; i++) {\n      times.push(i * timeStep)\n\n      const color = colors[i]\n      values.push(color.r, color.g, color.b)\n    }\n\n    const trackName = '.material.color'\n\n    const track = new ColorKeyframeTrack(trackName, times, values)\n\n    return new AnimationClip(null, duration, [track])\n  }\n}\n\nexport { AnimationClipCreator }\n"]},"metadata":{},"sourceType":"module"}