{"ast":null,"code":"import { UniformsUtils, ShaderMaterial, NoBlending, WebGLRenderTarget } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nclass SavePass extends Pass {\n  constructor(renderTarget) {\n    super();\n    if (CopyShader === void 0) console.error(\"THREE.SavePass relies on CopyShader\");\n    const shader = CopyShader;\n    this.textureID = \"tDiffuse\";\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      blending: NoBlending\n    });\n    this.renderTarget = renderTarget;\n    if (this.renderTarget === void 0) {\n      this.renderTarget = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      this.renderTarget.texture.name = \"SavePass.rt\";\n    }\n    this.needsSwap = false;\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture;\n    }\n    renderer.setRenderTarget(this.renderTarget);\n    if (this.clear) renderer.clear();\n    this.fsQuad.render(renderer);\n  }\n}\nexport { SavePass };","map":{"version":3,"sources":["../../src/postprocessing/SavePass.js"],"names":[],"mappings":";;;AAIA,MAAM,QAAA,SAAiB,IAAA,CAAK;EAC1B,WAAA,CAAY,YAAA,EAAc;IACxB,KAAA,CAAO,CAAA;IAEP,IAAI,UAAA,KAAe,KAAA,CAAA,EAAW,OAAA,CAAQ,KAAA,CAAM,qCAAqC,CAAA;IAEjF,MAAM,MAAA,GAAS,UAAA;IAEf,IAAA,CAAK,SAAA,GAAY,UAAA;IAEjB,IAAA,CAAK,QAAA,GAAW,aAAA,CAAc,KAAA,CAAM,MAAA,CAAO,QAAQ,CAAA;IAEnD,IAAA,CAAK,QAAA,GAAW,IAAI,cAAA,CAAe;MACjC,QAAA,EAAU,IAAA,CAAK,QAAA;MACf,YAAA,EAAc,MAAA,CAAO,YAAA;MACrB,cAAA,EAAgB,MAAA,CAAO,cAAA;MACvB,QAAA,EAAU;IAChB,CAAK,CAAA;IAED,IAAA,CAAK,YAAA,GAAe,YAAA;IAEpB,IAAI,IAAA,CAAK,YAAA,KAAiB,KAAA,CAAA,EAAW;MACnC,IAAA,CAAK,YAAA,GAAe,IAAI,iBAAA,CAAkB,MAAA,CAAO,UAAA,EAAY,MAAA,CAAO,WAAW,CAAA;MAC/E,IAAA,CAAK,YAAA,CAAa,OAAA,CAAQ,IAAA,GAAO,aAAA;IAClC;IAED,IAAA,CAAK,SAAA,GAAY,KAAA;IAEjB,IAAA,CAAK,MAAA,GAAS,IAAI,cAAA,CAAe,IAAA,CAAK,QAAQ,CAAA;EAC/C;EAED,MAAA,CAAO,QAAA,EAAU,WAAA,EAAa,UAAA,EAAyC;IACrE,IAAI,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,SAAS,CAAA,EAAG;MACjC,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,SAAS,CAAA,CAAE,KAAA,GAAQ,UAAA,CAAW,OAAA;IAClD;IAED,QAAA,CAAS,eAAA,CAAgB,IAAA,CAAK,YAAY,CAAA;IAC1C,IAAI,IAAA,CAAK,KAAA,EAAO,QAAA,CAAS,KAAA,CAAO,CAAA;IAChC,IAAA,CAAK,MAAA,CAAO,MAAA,CAAO,QAAQ,CAAA;EAC5B;AACH","sourcesContent":["import { NoBlending, ShaderMaterial, UniformsUtils, WebGLRenderTarget } from 'three'\nimport { Pass, FullScreenQuad } from './Pass'\nimport { CopyShader } from '../shaders/CopyShader'\n\nclass SavePass extends Pass {\n  constructor(renderTarget) {\n    super()\n\n    if (CopyShader === undefined) console.error('THREE.SavePass relies on CopyShader')\n\n    const shader = CopyShader\n\n    this.textureID = 'tDiffuse'\n\n    this.uniforms = UniformsUtils.clone(shader.uniforms)\n\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      blending: NoBlending,\n    })\n\n    this.renderTarget = renderTarget\n\n    if (this.renderTarget === undefined) {\n      this.renderTarget = new WebGLRenderTarget(window.innerWidth, window.innerHeight)\n      this.renderTarget.texture.name = 'SavePass.rt'\n    }\n\n    this.needsSwap = false\n\n    this.fsQuad = new FullScreenQuad(this.material)\n  }\n\n  render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture\n    }\n\n    renderer.setRenderTarget(this.renderTarget)\n    if (this.clear) renderer.clear()\n    this.fsQuad.render(renderer)\n  }\n}\n\nexport { SavePass }\n"]},"metadata":{},"sourceType":"module"}