{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Euler, Vector3, EventDispatcher } from \"three\";\nconst _euler = new Euler(0, 0, 0, \"YXZ\");\nconst _vector = new Vector3();\nconst _changeEvent = {\n  type: \"change\"\n};\nconst _lockEvent = {\n  type: \"lock\"\n};\nconst _unlockEvent = {\n  type: \"unlock\"\n};\nconst _PI_2 = Math.PI / 2;\nclass PointerLockControls extends EventDispatcher {\n  constructor(camera, domElement) {\n    super();\n    __publicField(this, \"camera\");\n    __publicField(this, \"domElement\");\n    __publicField(this, \"isLocked\");\n    __publicField(this, \"minPolarAngle\");\n    __publicField(this, \"maxPolarAngle\");\n    __publicField(this, \"pointerSpeed\");\n    __publicField(this, \"onMouseMove\", event => {\n      if (!this.domElement || this.isLocked === false) return;\n      const movementX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;\n      const movementY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;\n      _euler.setFromQuaternion(this.camera.quaternion);\n      _euler.y -= movementX * 2e-3 * this.pointerSpeed;\n      _euler.x -= movementY * 2e-3 * this.pointerSpeed;\n      _euler.x = Math.max(_PI_2 - this.maxPolarAngle, Math.min(_PI_2 - this.minPolarAngle, _euler.x));\n      this.camera.quaternion.setFromEuler(_euler);\n      this.dispatchEvent(_changeEvent);\n    });\n    __publicField(this, \"onPointerlockChange\", () => {\n      if (!this.domElement) return;\n      if (this.domElement.ownerDocument.pointerLockElement === this.domElement) {\n        this.dispatchEvent(_lockEvent);\n        this.isLocked = true;\n      } else {\n        this.dispatchEvent(_unlockEvent);\n        this.isLocked = false;\n      }\n    });\n    __publicField(this, \"onPointerlockError\", () => {\n      console.error(\"THREE.PointerLockControls: Unable to use Pointer Lock API\");\n    });\n    __publicField(this, \"connect\", domElement => {\n      this.domElement = domElement || this.domElement;\n      if (!this.domElement) return;\n      this.domElement.ownerDocument.addEventListener(\"mousemove\", this.onMouseMove);\n      this.domElement.ownerDocument.addEventListener(\"pointerlockchange\", this.onPointerlockChange);\n      this.domElement.ownerDocument.addEventListener(\"pointerlockerror\", this.onPointerlockError);\n    });\n    __publicField(this, \"disconnect\", () => {\n      if (!this.domElement) return;\n      this.domElement.ownerDocument.removeEventListener(\"mousemove\", this.onMouseMove);\n      this.domElement.ownerDocument.removeEventListener(\"pointerlockchange\", this.onPointerlockChange);\n      this.domElement.ownerDocument.removeEventListener(\"pointerlockerror\", this.onPointerlockError);\n    });\n    __publicField(this, \"dispose\", () => {\n      this.disconnect();\n    });\n    __publicField(this, \"getObject\", () => {\n      return this.camera;\n    });\n    __publicField(this, \"direction\", new Vector3(0, 0, -1));\n    __publicField(this, \"getDirection\", v => {\n      return v.copy(this.direction).applyQuaternion(this.camera.quaternion);\n    });\n    __publicField(this, \"moveForward\", distance => {\n      _vector.setFromMatrixColumn(this.camera.matrix, 0);\n      _vector.crossVectors(this.camera.up, _vector);\n      this.camera.position.addScaledVector(_vector, distance);\n    });\n    __publicField(this, \"moveRight\", distance => {\n      _vector.setFromMatrixColumn(this.camera.matrix, 0);\n      this.camera.position.addScaledVector(_vector, distance);\n    });\n    __publicField(this, \"lock\", () => {\n      if (this.domElement) this.domElement.requestPointerLock();\n    });\n    __publicField(this, \"unlock\", () => {\n      if (this.domElement) this.domElement.ownerDocument.exitPointerLock();\n    });\n    this.camera = camera;\n    this.domElement = domElement;\n    this.isLocked = false;\n    this.minPolarAngle = 0;\n    this.maxPolarAngle = Math.PI;\n    this.pointerSpeed = 1;\n    if (domElement) this.connect(domElement);\n  }\n}\nexport { PointerLockControls };","map":{"version":3,"sources":["../../src/controls/PointerLockControls.ts"],"names":[],"mappings":"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","sourcesContent":["import { Euler, Camera, EventDispatcher, Vector3 } from 'three'\n\nconst _euler = new Euler(0, 0, 0, 'YXZ')\nconst _vector = new Vector3()\nconst _changeEvent = { type: 'change' }\nconst _lockEvent = { type: 'lock' }\nconst _unlockEvent = { type: 'unlock' }\nconst _PI_2 = Math.PI / 2\n\nclass PointerLockControls extends EventDispatcher {\n  public camera: Camera\n  public domElement?: HTMLElement\n  public isLocked: boolean\n  public minPolarAngle: number\n  public maxPolarAngle: number\n  public pointerSpeed: number\n\n  constructor(camera: Camera, domElement?: HTMLElement) {\n    super()\n\n    this.camera = camera\n    this.domElement = domElement\n    this.isLocked = false\n\n    // Set to constrain the pitch of the camera\n    // Range is 0 to Math.PI radians\n    this.minPolarAngle = 0 // radians\n    this.maxPolarAngle = Math.PI // radians\n\n    this.pointerSpeed = 1.0\n    if (domElement) this.connect(domElement)\n  }\n\n  private onMouseMove = (event: MouseEvent): void => {\n    if (!this.domElement || this.isLocked === false) return\n    const movementX = event.movementX || (event as any).mozMovementX || (event as any).webkitMovementX || 0\n    const movementY = event.movementY || (event as any).mozMovementY || (event as any).webkitMovementY || 0\n    _euler.setFromQuaternion(this.camera.quaternion)\n    _euler.y -= movementX * 0.002 * this.pointerSpeed\n    _euler.x -= movementY * 0.002 * this.pointerSpeed\n    _euler.x = Math.max(_PI_2 - this.maxPolarAngle, Math.min(_PI_2 - this.minPolarAngle, _euler.x))\n    this.camera.quaternion.setFromEuler(_euler)\n    // @ts-ignore\n    this.dispatchEvent(_changeEvent)\n  }\n\n  private onPointerlockChange = (): void => {\n    if (!this.domElement) return\n    if (this.domElement.ownerDocument.pointerLockElement === this.domElement) {\n      // @ts-ignore\n      this.dispatchEvent(_lockEvent)\n      this.isLocked = true\n    } else {\n      // @ts-ignore\n      this.dispatchEvent(_unlockEvent)\n      this.isLocked = false\n    }\n  }\n\n  private onPointerlockError = (): void => {\n    console.error('THREE.PointerLockControls: Unable to use Pointer Lock API')\n  }\n\n  public connect = (domElement: HTMLElement): void => {\n    this.domElement = domElement || this.domElement\n    if (!this.domElement) return\n    this.domElement.ownerDocument.addEventListener('mousemove', this.onMouseMove)\n    this.domElement.ownerDocument.addEventListener('pointerlockchange', this.onPointerlockChange)\n    this.domElement.ownerDocument.addEventListener('pointerlockerror', this.onPointerlockError)\n  }\n\n  public disconnect = (): void => {\n    if (!this.domElement) return\n    this.domElement.ownerDocument.removeEventListener('mousemove', this.onMouseMove)\n    this.domElement.ownerDocument.removeEventListener('pointerlockchange', this.onPointerlockChange)\n    this.domElement.ownerDocument.removeEventListener('pointerlockerror', this.onPointerlockError)\n  }\n\n  public dispose = (): void => {\n    this.disconnect()\n  }\n\n  public getObject = (): Camera => {\n    // retaining this method for backward compatibility\n    return this.camera\n  }\n\n  private direction = new Vector3(0, 0, -1)\n  public getDirection = (v: Vector3): Vector3 => {\n    return v.copy(this.direction).applyQuaternion(this.camera.quaternion)\n  }\n\n  public moveForward = (distance: number): void => {\n    // move forward parallel to the xz-plane\n    // assumes camera.up is y-up\n    _vector.setFromMatrixColumn(this.camera.matrix, 0)\n    _vector.crossVectors(this.camera.up, _vector)\n    this.camera.position.addScaledVector(_vector, distance)\n  }\n\n  public moveRight = (distance: number): void => {\n    _vector.setFromMatrixColumn(this.camera.matrix, 0)\n    this.camera.position.addScaledVector(_vector, distance)\n  }\n\n  public lock = (): void => {\n    if (this.domElement) this.domElement.requestPointerLock()\n  }\n\n  public unlock = (): void => {\n    if (this.domElement) this.domElement.ownerDocument.exitPointerLock()\n  }\n}\n\nexport { PointerLockControls }\n"]},"metadata":{},"sourceType":"module"}